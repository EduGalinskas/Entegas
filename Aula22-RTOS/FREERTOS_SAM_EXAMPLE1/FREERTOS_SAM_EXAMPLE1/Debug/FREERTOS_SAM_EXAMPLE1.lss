
FREERTOS_SAM_EXAMPLE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000082e0  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004082e0  004082e0  000182e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000008ac  20000000  004082e8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000304  200008ac  00408b94  000208ac  2**2
                  ALLOC
  4 .stack        00003000  20000bb0  00408e98  000208ac  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000208ac  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000208d6  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000af3a  00000000  00000000  0002092f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000020c5  00000000  00000000  0002b869  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004ed7  00000000  00000000  0002d92e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000a88  00000000  00000000  00032805  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009c0  00000000  00000000  0003328d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00014ca2  00000000  00000000  00033c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000d0b6  00000000  00000000  000488ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000576d0  00000000  00000000  000559a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000284c  00000000  00000000  000ad078  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003bb0 	.word	0x20003bb0
  400004:	00400805 	.word	0x00400805
  400008:	00400801 	.word	0x00400801
  40000c:	00400801 	.word	0x00400801
  400010:	00400801 	.word	0x00400801
  400014:	00400801 	.word	0x00400801
  400018:	00400801 	.word	0x00400801
	...
  40002c:	00400b65 	.word	0x00400b65
  400030:	00400801 	.word	0x00400801
  400034:	00000000 	.word	0x00000000
  400038:	00400c15 	.word	0x00400c15
  40003c:	00400801 	.word	0x00400801
  400040:	00400801 	.word	0x00400801
  400044:	00400801 	.word	0x00400801
  400048:	00400801 	.word	0x00400801
  40004c:	00400801 	.word	0x00400801
  400050:	00400801 	.word	0x00400801
  400054:	00400801 	.word	0x00400801
  400058:	00400801 	.word	0x00400801
  40005c:	00400801 	.word	0x00400801
  400060:	00400801 	.word	0x00400801
  400064:	00400801 	.word	0x00400801
  400068:	00000000 	.word	0x00000000
  40006c:	004005fd 	.word	0x004005fd
  400070:	00400611 	.word	0x00400611
  400074:	00400625 	.word	0x00400625
  400078:	00400801 	.word	0x00400801
  40007c:	00400801 	.word	0x00400801
	...
  400088:	00400801 	.word	0x00400801
  40008c:	00400801 	.word	0x00400801
  400090:	00400801 	.word	0x00400801
  400094:	00400801 	.word	0x00400801
  400098:	00400801 	.word	0x00400801
  40009c:	00400801 	.word	0x00400801
  4000a0:	00400801 	.word	0x00400801
  4000a4:	00400801 	.word	0x00400801
  4000a8:	00400801 	.word	0x00400801
  4000ac:	00400801 	.word	0x00400801
  4000b0:	00400801 	.word	0x00400801
  4000b4:	00400801 	.word	0x00400801
  4000b8:	00400801 	.word	0x00400801
  4000bc:	00400801 	.word	0x00400801
  4000c0:	00400801 	.word	0x00400801
  4000c4:	00400801 	.word	0x00400801
  4000c8:	00400801 	.word	0x00400801

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200008ac 	.word	0x200008ac
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004082e8 	.word	0x004082e8

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4908      	ldr	r1, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4808      	ldr	r0, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	200008b0 	.word	0x200008b0
  40011c:	004082e8 	.word	0x004082e8
  400120:	004082e8 	.word	0x004082e8
  400124:	00000000 	.word	0x00000000

00400128 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400128:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40012a:	480e      	ldr	r0, [pc, #56]	; (400164 <sysclk_init+0x3c>)
  40012c:	4b0e      	ldr	r3, [pc, #56]	; (400168 <sysclk_init+0x40>)
  40012e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400130:	213e      	movs	r1, #62	; 0x3e
  400132:	2000      	movs	r0, #0
  400134:	4b0d      	ldr	r3, [pc, #52]	; (40016c <sysclk_init+0x44>)
  400136:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400138:	4c0d      	ldr	r4, [pc, #52]	; (400170 <sysclk_init+0x48>)
  40013a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40013c:	2800      	cmp	r0, #0
  40013e:	d0fc      	beq.n	40013a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400140:	4b0c      	ldr	r3, [pc, #48]	; (400174 <sysclk_init+0x4c>)
  400142:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400144:	4a0c      	ldr	r2, [pc, #48]	; (400178 <sysclk_init+0x50>)
  400146:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x54>)
  400148:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40014a:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x58>)
  40014c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40014e:	2800      	cmp	r0, #0
  400150:	d0fc      	beq.n	40014c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400152:	2000      	movs	r0, #0
  400154:	4b0b      	ldr	r3, [pc, #44]	; (400184 <sysclk_init+0x5c>)
  400156:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400158:	4b0b      	ldr	r3, [pc, #44]	; (400188 <sysclk_init+0x60>)
  40015a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40015c:	4801      	ldr	r0, [pc, #4]	; (400164 <sysclk_init+0x3c>)
  40015e:	4b02      	ldr	r3, [pc, #8]	; (400168 <sysclk_init+0x40>)
  400160:	4798      	blx	r3
  400162:	bd10      	pop	{r4, pc}
  400164:	07270e00 	.word	0x07270e00
  400168:	004009c9 	.word	0x004009c9
  40016c:	004006a1 	.word	0x004006a1
  400170:	004006f5 	.word	0x004006f5
  400174:	00400705 	.word	0x00400705
  400178:	201d3f03 	.word	0x201d3f03
  40017c:	400e0400 	.word	0x400e0400
  400180:	00400715 	.word	0x00400715
  400184:	00400639 	.word	0x00400639
  400188:	004008b5 	.word	0x004008b5

0040018c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  40018c:	b990      	cbnz	r0, 4001b4 <_read+0x28>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  40018e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400192:	460c      	mov	r4, r1
  400194:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  400196:	2a00      	cmp	r2, #0
  400198:	dd0f      	ble.n	4001ba <_read+0x2e>
  40019a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  40019c:	4e08      	ldr	r6, [pc, #32]	; (4001c0 <_read+0x34>)
  40019e:	4d09      	ldr	r5, [pc, #36]	; (4001c4 <_read+0x38>)
  4001a0:	6830      	ldr	r0, [r6, #0]
  4001a2:	4621      	mov	r1, r4
  4001a4:	682b      	ldr	r3, [r5, #0]
  4001a6:	4798      	blx	r3
		ptr++;
  4001a8:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001aa:	42a7      	cmp	r7, r4
  4001ac:	d1f8      	bne.n	4001a0 <_read+0x14>
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  4001ae:	4640      	mov	r0, r8
  4001b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001b4:	f04f 30ff 	mov.w	r0, #4294967295
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4001b8:	4770      	bx	lr

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001ba:	2000      	movs	r0, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4001bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001c0:	20000ba4 	.word	0x20000ba4
  4001c4:	20000b9c 	.word	0x20000b9c

004001c8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001c8:	3801      	subs	r0, #1
  4001ca:	2802      	cmp	r0, #2
  4001cc:	d815      	bhi.n	4001fa <_write+0x32>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001d2:	460e      	mov	r6, r1
  4001d4:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001d6:	b19a      	cbz	r2, 400200 <_write+0x38>
  4001d8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001da:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400214 <_write+0x4c>
  4001de:	4f0c      	ldr	r7, [pc, #48]	; (400210 <_write+0x48>)
  4001e0:	f8d8 0000 	ldr.w	r0, [r8]
  4001e4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001e8:	683b      	ldr	r3, [r7, #0]
  4001ea:	4798      	blx	r3
  4001ec:	2800      	cmp	r0, #0
  4001ee:	db0a      	blt.n	400206 <_write+0x3e>
  4001f0:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001f2:	3c01      	subs	r4, #1
  4001f4:	d1f4      	bne.n	4001e0 <_write+0x18>
  4001f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  4001fa:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  4001fe:	4770      	bx	lr

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  400200:	2000      	movs	r0, #0
  400202:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400206:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40020e:	bf00      	nop
  400210:	20000ba0 	.word	0x20000ba0
  400214:	20000ba4 	.word	0x20000ba4

00400218 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400218:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40021a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40021e:	4b10      	ldr	r3, [pc, #64]	; (400260 <board_init+0x48>)
  400220:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400222:	200b      	movs	r0, #11
  400224:	4c0f      	ldr	r4, [pc, #60]	; (400264 <board_init+0x4c>)
  400226:	47a0      	blx	r4
  400228:	200c      	movs	r0, #12
  40022a:	47a0      	blx	r4
  40022c:	200d      	movs	r0, #13
  40022e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400230:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400234:	2013      	movs	r0, #19
  400236:	4c0c      	ldr	r4, [pc, #48]	; (400268 <board_init+0x50>)
  400238:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40023a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40023e:	2014      	movs	r0, #20
  400240:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400242:	490a      	ldr	r1, [pc, #40]	; (40026c <board_init+0x54>)
  400244:	2023      	movs	r0, #35	; 0x23
  400246:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400248:	4909      	ldr	r1, [pc, #36]	; (400270 <board_init+0x58>)
  40024a:	204c      	movs	r0, #76	; 0x4c
  40024c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40024e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400252:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400256:	4807      	ldr	r0, [pc, #28]	; (400274 <board_init+0x5c>)
  400258:	4b07      	ldr	r3, [pc, #28]	; (400278 <board_init+0x60>)
  40025a:	4798      	blx	r3
  40025c:	bd10      	pop	{r4, pc}
  40025e:	bf00      	nop
  400260:	400e1450 	.word	0x400e1450
  400264:	00400725 	.word	0x00400725
  400268:	00400395 	.word	0x00400395
  40026c:	28000079 	.word	0x28000079
  400270:	28000059 	.word	0x28000059
  400274:	400e0e00 	.word	0x400e0e00
  400278:	004004b9 	.word	0x004004b9

0040027c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  40027c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40027e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400282:	d02f      	beq.n	4002e4 <pio_set_peripheral+0x68>
  400284:	d807      	bhi.n	400296 <pio_set_peripheral+0x1a>
  400286:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  40028a:	d014      	beq.n	4002b6 <pio_set_peripheral+0x3a>
  40028c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400290:	d01e      	beq.n	4002d0 <pio_set_peripheral+0x54>
  400292:	b939      	cbnz	r1, 4002a4 <pio_set_peripheral+0x28>
  400294:	4770      	bx	lr
  400296:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  40029a:	d036      	beq.n	40030a <pio_set_peripheral+0x8e>
  40029c:	d804      	bhi.n	4002a8 <pio_set_peripheral+0x2c>
  40029e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4002a2:	d029      	beq.n	4002f8 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4002a4:	6042      	str	r2, [r0, #4]
  4002a6:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4002a8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4002ac:	d02d      	beq.n	40030a <pio_set_peripheral+0x8e>
  4002ae:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4002b2:	d02a      	beq.n	40030a <pio_set_peripheral+0x8e>
  4002b4:	e7f6      	b.n	4002a4 <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4002b6:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002b8:	6f04      	ldr	r4, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002ba:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4002bc:	43d3      	mvns	r3, r2
  4002be:	4021      	ands	r1, r4
  4002c0:	4019      	ands	r1, r3
  4002c2:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002c4:	6f44      	ldr	r4, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002c6:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4002c8:	4021      	ands	r1, r4
  4002ca:	400b      	ands	r3, r1
  4002cc:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002ce:	e01a      	b.n	400306 <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002d0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002d2:	4313      	orrs	r3, r2
  4002d4:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002d6:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002d8:	6f43      	ldr	r3, [r0, #116]	; 0x74
  4002da:	400b      	ands	r3, r1
  4002dc:	ea23 0302 	bic.w	r3, r3, r2
  4002e0:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002e2:	e7df      	b.n	4002a4 <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002e4:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002e6:	6f03      	ldr	r3, [r0, #112]	; 0x70
  4002e8:	400b      	ands	r3, r1
  4002ea:	ea23 0302 	bic.w	r3, r3, r2
  4002ee:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002f0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4002f2:	4313      	orrs	r3, r2
  4002f4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002f6:	e7d5      	b.n	4002a4 <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002f8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002fa:	4313      	orrs	r3, r2
  4002fc:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002fe:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400300:	4313      	orrs	r3, r2
  400302:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400304:	e7ce      	b.n	4002a4 <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400306:	6042      	str	r2, [r0, #4]
}
  400308:	bc10      	pop	{r4}
  40030a:	4770      	bx	lr

0040030c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40030c:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40030e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400312:	bf14      	ite	ne
  400314:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400316:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400318:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40031c:	bf14      	ite	ne
  40031e:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  400320:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  400322:	f012 0f02 	tst.w	r2, #2
  400326:	d002      	beq.n	40032e <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400328:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40032c:	e004      	b.n	400338 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  40032e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400332:	bf18      	it	ne
  400334:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400338:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40033a:	6001      	str	r1, [r0, #0]
  40033c:	4770      	bx	lr
  40033e:	bf00      	nop

00400340 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  400340:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400342:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400344:	9c01      	ldr	r4, [sp, #4]
  400346:	b10c      	cbz	r4, 40034c <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400348:	6641      	str	r1, [r0, #100]	; 0x64
  40034a:	e000      	b.n	40034e <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40034c:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  40034e:	b10b      	cbz	r3, 400354 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  400350:	6501      	str	r1, [r0, #80]	; 0x50
  400352:	e000      	b.n	400356 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400354:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400356:	b10a      	cbz	r2, 40035c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400358:	6301      	str	r1, [r0, #48]	; 0x30
  40035a:	e000      	b.n	40035e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  40035c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  40035e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400360:	6001      	str	r1, [r0, #0]
}
  400362:	bc10      	pop	{r4}
  400364:	4770      	bx	lr
  400366:	bf00      	nop

00400368 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400368:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  40036a:	4770      	bx	lr

0040036c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  40036c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40036e:	4770      	bx	lr

00400370 <pio_toggle_pin>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400370:	0943      	lsrs	r3, r0, #5
  400372:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400376:	f203 7307 	addw	r3, r3, #1799	; 0x707
  40037a:	025b      	lsls	r3, r3, #9
 */
void pio_toggle_pin(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  40037c:	6b99      	ldr	r1, [r3, #56]	; 0x38
  40037e:	f000 001f 	and.w	r0, r0, #31
  400382:	2201      	movs	r2, #1
  400384:	fa02 f000 	lsl.w	r0, r2, r0
  400388:	4201      	tst	r1, r0
		/* Value to be driven on the I/O line: 0. */
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  40038a:	bf14      	ite	ne
  40038c:	6358      	strne	r0, [r3, #52]	; 0x34
	} else {
		/* Value to be driven on the I/O line: 1. */
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  40038e:	6318      	streq	r0, [r3, #48]	; 0x30
  400390:	4770      	bx	lr
  400392:	bf00      	nop

00400394 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400394:	b570      	push	{r4, r5, r6, lr}
  400396:	b082      	sub	sp, #8
  400398:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40039a:	0943      	lsrs	r3, r0, #5
  40039c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4003a0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4003a4:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4003a6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4003aa:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4003ae:	d047      	beq.n	400440 <pio_configure_pin+0xac>
  4003b0:	d809      	bhi.n	4003c6 <pio_configure_pin+0x32>
  4003b2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4003b6:	d021      	beq.n	4003fc <pio_configure_pin+0x68>
  4003b8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4003bc:	d02f      	beq.n	40041e <pio_configure_pin+0x8a>
  4003be:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4003c2:	d16f      	bne.n	4004a4 <pio_configure_pin+0x110>
  4003c4:	e009      	b.n	4003da <pio_configure_pin+0x46>
  4003c6:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4003ca:	d055      	beq.n	400478 <pio_configure_pin+0xe4>
  4003cc:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4003d0:	d052      	beq.n	400478 <pio_configure_pin+0xe4>
  4003d2:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4003d6:	d044      	beq.n	400462 <pio_configure_pin+0xce>
  4003d8:	e064      	b.n	4004a4 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4003da:	f000 001f 	and.w	r0, r0, #31
  4003de:	2601      	movs	r6, #1
  4003e0:	4086      	lsls	r6, r0
  4003e2:	4632      	mov	r2, r6
  4003e4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003e8:	4620      	mov	r0, r4
  4003ea:	4b30      	ldr	r3, [pc, #192]	; (4004ac <pio_configure_pin+0x118>)
  4003ec:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4003ee:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003f2:	bf14      	ite	ne
  4003f4:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4003f6:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4003f8:	2001      	movs	r0, #1
  4003fa:	e054      	b.n	4004a6 <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4003fc:	f000 001f 	and.w	r0, r0, #31
  400400:	2601      	movs	r6, #1
  400402:	4086      	lsls	r6, r0
  400404:	4632      	mov	r2, r6
  400406:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40040a:	4620      	mov	r0, r4
  40040c:	4b27      	ldr	r3, [pc, #156]	; (4004ac <pio_configure_pin+0x118>)
  40040e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400410:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400414:	bf14      	ite	ne
  400416:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400418:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40041a:	2001      	movs	r0, #1
  40041c:	e043      	b.n	4004a6 <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40041e:	f000 001f 	and.w	r0, r0, #31
  400422:	2601      	movs	r6, #1
  400424:	4086      	lsls	r6, r0
  400426:	4632      	mov	r2, r6
  400428:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40042c:	4620      	mov	r0, r4
  40042e:	4b1f      	ldr	r3, [pc, #124]	; (4004ac <pio_configure_pin+0x118>)
  400430:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400432:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400436:	bf14      	ite	ne
  400438:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40043a:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40043c:	2001      	movs	r0, #1
  40043e:	e032      	b.n	4004a6 <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400440:	f000 001f 	and.w	r0, r0, #31
  400444:	2601      	movs	r6, #1
  400446:	4086      	lsls	r6, r0
  400448:	4632      	mov	r2, r6
  40044a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40044e:	4620      	mov	r0, r4
  400450:	4b16      	ldr	r3, [pc, #88]	; (4004ac <pio_configure_pin+0x118>)
  400452:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400454:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400458:	bf14      	ite	ne
  40045a:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40045c:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40045e:	2001      	movs	r0, #1
  400460:	e021      	b.n	4004a6 <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400462:	f000 011f 	and.w	r1, r0, #31
  400466:	2601      	movs	r6, #1
  400468:	462a      	mov	r2, r5
  40046a:	fa06 f101 	lsl.w	r1, r6, r1
  40046e:	4620      	mov	r0, r4
  400470:	4b0f      	ldr	r3, [pc, #60]	; (4004b0 <pio_configure_pin+0x11c>)
  400472:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400474:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  400476:	e016      	b.n	4004a6 <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400478:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
  40047c:	f000 011f 	and.w	r1, r0, #31
  400480:	2601      	movs	r6, #1
  400482:	ea05 0306 	and.w	r3, r5, r6
  400486:	9300      	str	r3, [sp, #0]
  400488:	f3c5 0380 	ubfx	r3, r5, #2, #1
  40048c:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400490:	bf14      	ite	ne
  400492:	2200      	movne	r2, #0
  400494:	2201      	moveq	r2, #1
  400496:	fa06 f101 	lsl.w	r1, r6, r1
  40049a:	4620      	mov	r0, r4
  40049c:	4c05      	ldr	r4, [pc, #20]	; (4004b4 <pio_configure_pin+0x120>)
  40049e:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  4004a0:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  4004a2:	e000      	b.n	4004a6 <pio_configure_pin+0x112>

	default:
		return 0;
  4004a4:	2000      	movs	r0, #0
	}

	return 1;
}
  4004a6:	b002      	add	sp, #8
  4004a8:	bd70      	pop	{r4, r5, r6, pc}
  4004aa:	bf00      	nop
  4004ac:	0040027d 	.word	0x0040027d
  4004b0:	0040030d 	.word	0x0040030d
  4004b4:	00400341 	.word	0x00400341

004004b8 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  4004b8:	b570      	push	{r4, r5, r6, lr}
  4004ba:	b082      	sub	sp, #8
  4004bc:	4605      	mov	r5, r0
  4004be:	460e      	mov	r6, r1
  4004c0:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4004c2:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4004c6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4004ca:	d038      	beq.n	40053e <pio_configure_pin_group+0x86>
  4004cc:	d809      	bhi.n	4004e2 <pio_configure_pin_group+0x2a>
  4004ce:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4004d2:	d01c      	beq.n	40050e <pio_configure_pin_group+0x56>
  4004d4:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4004d8:	d025      	beq.n	400526 <pio_configure_pin_group+0x6e>
  4004da:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4004de:	d150      	bne.n	400582 <pio_configure_pin_group+0xca>
  4004e0:	e009      	b.n	4004f6 <pio_configure_pin_group+0x3e>
  4004e2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4004e6:	d03a      	beq.n	40055e <pio_configure_pin_group+0xa6>
  4004e8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4004ec:	d037      	beq.n	40055e <pio_configure_pin_group+0xa6>
  4004ee:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4004f2:	d030      	beq.n	400556 <pio_configure_pin_group+0x9e>
  4004f4:	e045      	b.n	400582 <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  4004f6:	460a      	mov	r2, r1
  4004f8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4004fc:	4b22      	ldr	r3, [pc, #136]	; (400588 <pio_configure_pin_group+0xd0>)
  4004fe:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400500:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400504:	bf14      	ite	ne
  400506:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400508:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40050a:	2001      	movs	r0, #1
  40050c:	e03a      	b.n	400584 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  40050e:	460a      	mov	r2, r1
  400510:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400514:	4b1c      	ldr	r3, [pc, #112]	; (400588 <pio_configure_pin_group+0xd0>)
  400516:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400518:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40051c:	bf14      	ite	ne
  40051e:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400520:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400522:	2001      	movs	r0, #1
  400524:	e02e      	b.n	400584 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400526:	460a      	mov	r2, r1
  400528:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40052c:	4b16      	ldr	r3, [pc, #88]	; (400588 <pio_configure_pin_group+0xd0>)
  40052e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400530:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400534:	bf14      	ite	ne
  400536:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400538:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40053a:	2001      	movs	r0, #1
  40053c:	e022      	b.n	400584 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  40053e:	460a      	mov	r2, r1
  400540:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400544:	4b10      	ldr	r3, [pc, #64]	; (400588 <pio_configure_pin_group+0xd0>)
  400546:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400548:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40054c:	bf14      	ite	ne
  40054e:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400550:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400552:	2001      	movs	r0, #1
  400554:	e016      	b.n	400584 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  400556:	4b0d      	ldr	r3, [pc, #52]	; (40058c <pio_configure_pin_group+0xd4>)
  400558:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  40055a:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  40055c:	e012      	b.n	400584 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  40055e:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
  400562:	f004 0301 	and.w	r3, r4, #1
  400566:	9300      	str	r3, [sp, #0]
  400568:	f3c4 0380 	ubfx	r3, r4, #2, #1
  40056c:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400570:	bf14      	ite	ne
  400572:	2200      	movne	r2, #0
  400574:	2201      	moveq	r2, #1
  400576:	4631      	mov	r1, r6
  400578:	4628      	mov	r0, r5
  40057a:	4c05      	ldr	r4, [pc, #20]	; (400590 <pio_configure_pin_group+0xd8>)
  40057c:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  40057e:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400580:	e000      	b.n	400584 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  400582:	2000      	movs	r0, #0
	}

	return 1;
}
  400584:	b002      	add	sp, #8
  400586:	bd70      	pop	{r4, r5, r6, pc}
  400588:	0040027d 	.word	0x0040027d
  40058c:	0040030d 	.word	0x0040030d
  400590:	00400341 	.word	0x00400341

00400594 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400598:	4681      	mov	r9, r0
  40059a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40059c:	4b12      	ldr	r3, [pc, #72]	; (4005e8 <pio_handler_process+0x54>)
  40059e:	4798      	blx	r3
  4005a0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4005a2:	4648      	mov	r0, r9
  4005a4:	4b11      	ldr	r3, [pc, #68]	; (4005ec <pio_handler_process+0x58>)
  4005a6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4005a8:	4005      	ands	r5, r0
  4005aa:	d013      	beq.n	4005d4 <pio_handler_process+0x40>
  4005ac:	4c10      	ldr	r4, [pc, #64]	; (4005f0 <pio_handler_process+0x5c>)
  4005ae:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  4005b2:	6823      	ldr	r3, [r4, #0]
  4005b4:	4543      	cmp	r3, r8
  4005b6:	d108      	bne.n	4005ca <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005b8:	6861      	ldr	r1, [r4, #4]
  4005ba:	4229      	tst	r1, r5
  4005bc:	d005      	beq.n	4005ca <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005be:	68e3      	ldr	r3, [r4, #12]
  4005c0:	4640      	mov	r0, r8
  4005c2:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4005c4:	6863      	ldr	r3, [r4, #4]
  4005c6:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005ca:	42b4      	cmp	r4, r6
  4005cc:	d002      	beq.n	4005d4 <pio_handler_process+0x40>
  4005ce:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4005d0:	2d00      	cmp	r5, #0
  4005d2:	d1ee      	bne.n	4005b2 <pio_handler_process+0x1e>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4005d4:	4b07      	ldr	r3, [pc, #28]	; (4005f4 <pio_handler_process+0x60>)
  4005d6:	681b      	ldr	r3, [r3, #0]
  4005d8:	b123      	cbz	r3, 4005e4 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  4005da:	4b07      	ldr	r3, [pc, #28]	; (4005f8 <pio_handler_process+0x64>)
  4005dc:	681b      	ldr	r3, [r3, #0]
  4005de:	b10b      	cbz	r3, 4005e4 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4005e0:	4648      	mov	r0, r9
  4005e2:	4798      	blx	r3
  4005e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005e8:	00400369 	.word	0x00400369
  4005ec:	0040036d 	.word	0x0040036d
  4005f0:	200008cc 	.word	0x200008cc
  4005f4:	20000ba8 	.word	0x20000ba8
  4005f8:	200008c8 	.word	0x200008c8

004005fc <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4005fc:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4005fe:	210b      	movs	r1, #11
  400600:	4801      	ldr	r0, [pc, #4]	; (400608 <PIOA_Handler+0xc>)
  400602:	4b02      	ldr	r3, [pc, #8]	; (40060c <PIOA_Handler+0x10>)
  400604:	4798      	blx	r3
  400606:	bd08      	pop	{r3, pc}
  400608:	400e0e00 	.word	0x400e0e00
  40060c:	00400595 	.word	0x00400595

00400610 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400610:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400612:	210c      	movs	r1, #12
  400614:	4801      	ldr	r0, [pc, #4]	; (40061c <PIOB_Handler+0xc>)
  400616:	4b02      	ldr	r3, [pc, #8]	; (400620 <PIOB_Handler+0x10>)
  400618:	4798      	blx	r3
  40061a:	bd08      	pop	{r3, pc}
  40061c:	400e1000 	.word	0x400e1000
  400620:	00400595 	.word	0x00400595

00400624 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400624:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400626:	210d      	movs	r1, #13
  400628:	4801      	ldr	r0, [pc, #4]	; (400630 <PIOC_Handler+0xc>)
  40062a:	4b02      	ldr	r3, [pc, #8]	; (400634 <PIOC_Handler+0x10>)
  40062c:	4798      	blx	r3
  40062e:	bd08      	pop	{r3, pc}
  400630:	400e1200 	.word	0x400e1200
  400634:	00400595 	.word	0x00400595

00400638 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400638:	4a18      	ldr	r2, [pc, #96]	; (40069c <pmc_switch_mck_to_pllack+0x64>)
  40063a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40063c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400640:	4318      	orrs	r0, r3
  400642:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400644:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400646:	f013 0f08 	tst.w	r3, #8
  40064a:	d003      	beq.n	400654 <pmc_switch_mck_to_pllack+0x1c>
  40064c:	e009      	b.n	400662 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40064e:	3b01      	subs	r3, #1
  400650:	d103      	bne.n	40065a <pmc_switch_mck_to_pllack+0x22>
  400652:	e01e      	b.n	400692 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400654:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400658:	4910      	ldr	r1, [pc, #64]	; (40069c <pmc_switch_mck_to_pllack+0x64>)
  40065a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40065c:	f012 0f08 	tst.w	r2, #8
  400660:	d0f5      	beq.n	40064e <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400662:	4a0e      	ldr	r2, [pc, #56]	; (40069c <pmc_switch_mck_to_pllack+0x64>)
  400664:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400666:	f023 0303 	bic.w	r3, r3, #3
  40066a:	f043 0302 	orr.w	r3, r3, #2
  40066e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400670:	6e90      	ldr	r0, [r2, #104]	; 0x68
  400672:	f010 0008 	ands.w	r0, r0, #8
  400676:	d004      	beq.n	400682 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400678:	2000      	movs	r0, #0
  40067a:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  40067c:	3b01      	subs	r3, #1
  40067e:	d103      	bne.n	400688 <pmc_switch_mck_to_pllack+0x50>
  400680:	e009      	b.n	400696 <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400682:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400686:	4905      	ldr	r1, [pc, #20]	; (40069c <pmc_switch_mck_to_pllack+0x64>)
  400688:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40068a:	f012 0f08 	tst.w	r2, #8
  40068e:	d0f5      	beq.n	40067c <pmc_switch_mck_to_pllack+0x44>
  400690:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400692:	2001      	movs	r0, #1
  400694:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400696:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400698:	4770      	bx	lr
  40069a:	bf00      	nop
  40069c:	400e0400 	.word	0x400e0400

004006a0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4006a0:	b138      	cbz	r0, 4006b2 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006a2:	4911      	ldr	r1, [pc, #68]	; (4006e8 <pmc_switch_mainck_to_xtal+0x48>)
  4006a4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4006a6:	4a11      	ldr	r2, [pc, #68]	; (4006ec <pmc_switch_mainck_to_xtal+0x4c>)
  4006a8:	401a      	ands	r2, r3
  4006aa:	4b11      	ldr	r3, [pc, #68]	; (4006f0 <pmc_switch_mainck_to_xtal+0x50>)
  4006ac:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006ae:	620b      	str	r3, [r1, #32]
  4006b0:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006b2:	480d      	ldr	r0, [pc, #52]	; (4006e8 <pmc_switch_mainck_to_xtal+0x48>)
  4006b4:	6a02      	ldr	r2, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006b6:	0209      	lsls	r1, r1, #8
  4006b8:	b289      	uxth	r1, r1
  4006ba:	f422 135c 	bic.w	r3, r2, #3604480	; 0x370000
  4006be:	f023 0303 	bic.w	r3, r3, #3
  4006c2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4006c6:	f043 0301 	orr.w	r3, r3, #1
  4006ca:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006cc:	6203      	str	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006ce:	4602      	mov	r2, r0
  4006d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006d2:	f013 0f01 	tst.w	r3, #1
  4006d6:	d0fb      	beq.n	4006d0 <pmc_switch_mainck_to_xtal+0x30>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4006d8:	4a03      	ldr	r2, [pc, #12]	; (4006e8 <pmc_switch_mainck_to_xtal+0x48>)
  4006da:	6a13      	ldr	r3, [r2, #32]
  4006dc:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4006e0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4006e4:	6213      	str	r3, [r2, #32]
  4006e6:	4770      	bx	lr
  4006e8:	400e0400 	.word	0x400e0400
  4006ec:	fec8fffc 	.word	0xfec8fffc
  4006f0:	01370002 	.word	0x01370002

004006f4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4006f4:	4b02      	ldr	r3, [pc, #8]	; (400700 <pmc_osc_is_ready_mainck+0xc>)
  4006f6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006f8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006fc:	4770      	bx	lr
  4006fe:	bf00      	nop
  400700:	400e0400 	.word	0x400e0400

00400704 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400704:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400708:	4b01      	ldr	r3, [pc, #4]	; (400710 <pmc_disable_pllack+0xc>)
  40070a:	629a      	str	r2, [r3, #40]	; 0x28
  40070c:	4770      	bx	lr
  40070e:	bf00      	nop
  400710:	400e0400 	.word	0x400e0400

00400714 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400714:	4b02      	ldr	r3, [pc, #8]	; (400720 <pmc_is_locked_pllack+0xc>)
  400716:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400718:	f000 0002 	and.w	r0, r0, #2
  40071c:	4770      	bx	lr
  40071e:	bf00      	nop
  400720:	400e0400 	.word	0x400e0400

00400724 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400724:	2822      	cmp	r0, #34	; 0x22
  400726:	d81e      	bhi.n	400766 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400728:	281f      	cmp	r0, #31
  40072a:	d80c      	bhi.n	400746 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40072c:	4b11      	ldr	r3, [pc, #68]	; (400774 <pmc_enable_periph_clk+0x50>)
  40072e:	699a      	ldr	r2, [r3, #24]
  400730:	2301      	movs	r3, #1
  400732:	4083      	lsls	r3, r0
  400734:	4393      	bics	r3, r2
  400736:	d018      	beq.n	40076a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400738:	2301      	movs	r3, #1
  40073a:	fa03 f000 	lsl.w	r0, r3, r0
  40073e:	4b0d      	ldr	r3, [pc, #52]	; (400774 <pmc_enable_periph_clk+0x50>)
  400740:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400742:	2000      	movs	r0, #0
  400744:	4770      	bx	lr
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400746:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400748:	4b0a      	ldr	r3, [pc, #40]	; (400774 <pmc_enable_periph_clk+0x50>)
  40074a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40074e:	2301      	movs	r3, #1
  400750:	4083      	lsls	r3, r0
  400752:	4393      	bics	r3, r2
  400754:	d00b      	beq.n	40076e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400756:	2301      	movs	r3, #1
  400758:	fa03 f000 	lsl.w	r0, r3, r0
  40075c:	4b05      	ldr	r3, [pc, #20]	; (400774 <pmc_enable_periph_clk+0x50>)
  40075e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  400762:	2000      	movs	r0, #0
  400764:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400766:	2001      	movs	r0, #1
  400768:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40076a:	2000      	movs	r0, #0
  40076c:	4770      	bx	lr
  40076e:	2000      	movs	r0, #0
}
  400770:	4770      	bx	lr
  400772:	bf00      	nop
  400774:	400e0400 	.word	0x400e0400

00400778 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  400778:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  40077a:	23ac      	movs	r3, #172	; 0xac
  40077c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  40077e:	680b      	ldr	r3, [r1, #0]
  400780:	684a      	ldr	r2, [r1, #4]
  400782:	fbb3 f3f2 	udiv	r3, r3, r2
  400786:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  400788:	1e5c      	subs	r4, r3, #1
  40078a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  40078e:	4294      	cmp	r4, r2
  400790:	d80a      	bhi.n	4007a8 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  400792:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  400794:	688b      	ldr	r3, [r1, #8]
  400796:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  400798:	f240 2302 	movw	r3, #514	; 0x202
  40079c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4007a0:	2350      	movs	r3, #80	; 0x50
  4007a2:	6003      	str	r3, [r0, #0]

	return 0;
  4007a4:	2000      	movs	r0, #0
  4007a6:	e000      	b.n	4007aa <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  4007a8:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  4007aa:	bc10      	pop	{r4}
  4007ac:	4770      	bx	lr
  4007ae:	bf00      	nop

004007b0 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4007b0:	6943      	ldr	r3, [r0, #20]
  4007b2:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4007b6:	bf1a      	itte	ne
  4007b8:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007ba:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  4007bc:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  4007be:	4770      	bx	lr

004007c0 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4007c0:	6943      	ldr	r3, [r0, #20]
  4007c2:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4007c6:	bf1d      	ittte	ne
  4007c8:	6983      	ldrne	r3, [r0, #24]
  4007ca:	700b      	strbne	r3, [r1, #0]
	return 0;
  4007cc:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  4007ce:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  4007d0:	4770      	bx	lr
  4007d2:	bf00      	nop

004007d4 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4007d4:	6943      	ldr	r3, [r0, #20]
  4007d6:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  4007da:	bf1d      	ittte	ne
  4007dc:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4007e0:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007e2:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  4007e4:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  4007e6:	4770      	bx	lr

004007e8 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4007e8:	6943      	ldr	r3, [r0, #20]
  4007ea:	f013 0f01 	tst.w	r3, #1
  4007ee:	d005      	beq.n	4007fc <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4007f0:	6983      	ldr	r3, [r0, #24]
  4007f2:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4007f6:	600b      	str	r3, [r1, #0]

	return 0;
  4007f8:	2000      	movs	r0, #0
  4007fa:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  4007fc:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  4007fe:	4770      	bx	lr

00400800 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400800:	e7fe      	b.n	400800 <Dummy_Handler>
  400802:	bf00      	nop

00400804 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400804:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  400806:	4b20      	ldr	r3, [pc, #128]	; (400888 <Reset_Handler+0x84>)
  400808:	4a20      	ldr	r2, [pc, #128]	; (40088c <Reset_Handler+0x88>)
  40080a:	429a      	cmp	r2, r3
  40080c:	d912      	bls.n	400834 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
  40080e:	4b20      	ldr	r3, [pc, #128]	; (400890 <Reset_Handler+0x8c>)
  400810:	4a1d      	ldr	r2, [pc, #116]	; (400888 <Reset_Handler+0x84>)
  400812:	429a      	cmp	r2, r3
  400814:	d21e      	bcs.n	400854 <Reset_Handler+0x50>
  400816:	4611      	mov	r1, r2
  400818:	3b01      	subs	r3, #1
  40081a:	1a9b      	subs	r3, r3, r2
  40081c:	f023 0303 	bic.w	r3, r3, #3
  400820:	3304      	adds	r3, #4
  400822:	4a1a      	ldr	r2, [pc, #104]	; (40088c <Reset_Handler+0x88>)
  400824:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  400826:	f852 0b04 	ldr.w	r0, [r2], #4
  40082a:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  40082e:	429a      	cmp	r2, r3
  400830:	d1f9      	bne.n	400826 <Reset_Handler+0x22>
  400832:	e00f      	b.n	400854 <Reset_Handler+0x50>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  400834:	4b14      	ldr	r3, [pc, #80]	; (400888 <Reset_Handler+0x84>)
  400836:	4a15      	ldr	r2, [pc, #84]	; (40088c <Reset_Handler+0x88>)
  400838:	429a      	cmp	r2, r3
  40083a:	d20b      	bcs.n	400854 <Reset_Handler+0x50>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40083c:	4b14      	ldr	r3, [pc, #80]	; (400890 <Reset_Handler+0x8c>)
  40083e:	4a12      	ldr	r2, [pc, #72]	; (400888 <Reset_Handler+0x84>)
  400840:	1a9a      	subs	r2, r3, r2
  400842:	4814      	ldr	r0, [pc, #80]	; (400894 <Reset_Handler+0x90>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400844:	1811      	adds	r1, r2, r0
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400846:	b12a      	cbz	r2, 400854 <Reset_Handler+0x50>
			*pDest-- = *pSrc--;
  400848:	f851 2904 	ldr.w	r2, [r1], #-4
  40084c:	f843 2d04 	str.w	r2, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400850:	4281      	cmp	r1, r0
  400852:	d1f9      	bne.n	400848 <Reset_Handler+0x44>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  400854:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400856:	4b10      	ldr	r3, [pc, #64]	; (400898 <Reset_Handler+0x94>)
  400858:	4a10      	ldr	r2, [pc, #64]	; (40089c <Reset_Handler+0x98>)
  40085a:	429a      	cmp	r2, r3
  40085c:	d20b      	bcs.n	400876 <Reset_Handler+0x72>
  40085e:	1d13      	adds	r3, r2, #4
  400860:	4a0f      	ldr	r2, [pc, #60]	; (4008a0 <Reset_Handler+0x9c>)
  400862:	1ad2      	subs	r2, r2, r3
  400864:	f022 0203 	bic.w	r2, r2, #3
  400868:	441a      	add	r2, r3
  40086a:	3b04      	subs	r3, #4
		*pDest++ = 0;
  40086c:	2100      	movs	r1, #0
  40086e:	f843 1b04 	str.w	r1, [r3], #4
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400872:	429a      	cmp	r2, r3
  400874:	d1fb      	bne.n	40086e <Reset_Handler+0x6a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  400876:	4b0b      	ldr	r3, [pc, #44]	; (4008a4 <Reset_Handler+0xa0>)
  400878:	4a0b      	ldr	r2, [pc, #44]	; (4008a8 <Reset_Handler+0xa4>)
  40087a:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  40087c:	4b0b      	ldr	r3, [pc, #44]	; (4008ac <Reset_Handler+0xa8>)
  40087e:	4798      	blx	r3

	/* Branch to main function */
	main();
  400880:	4b0b      	ldr	r3, [pc, #44]	; (4008b0 <Reset_Handler+0xac>)
  400882:	4798      	blx	r3
  400884:	e7fe      	b.n	400884 <Reset_Handler+0x80>
  400886:	bf00      	nop
  400888:	20000000 	.word	0x20000000
  40088c:	004082e8 	.word	0x004082e8
  400890:	200008ac 	.word	0x200008ac
  400894:	004082e4 	.word	0x004082e4
  400898:	20000bb0 	.word	0x20000bb0
  40089c:	200008ac 	.word	0x200008ac
  4008a0:	20000bb3 	.word	0x20000bb3
  4008a4:	e000ed00 	.word	0xe000ed00
  4008a8:	00400000 	.word	0x00400000
  4008ac:	004016c9 	.word	0x004016c9
  4008b0:	004015b1 	.word	0x004015b1

004008b4 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4008b4:	4b3d      	ldr	r3, [pc, #244]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  4008b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4008b8:	f003 0303 	and.w	r3, r3, #3
  4008bc:	2b03      	cmp	r3, #3
  4008be:	d85d      	bhi.n	40097c <SystemCoreClockUpdate+0xc8>
  4008c0:	e8df f003 	tbb	[pc, r3]
  4008c4:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4008c8:	4b39      	ldr	r3, [pc, #228]	; (4009b0 <SystemCoreClockUpdate+0xfc>)
  4008ca:	695b      	ldr	r3, [r3, #20]
  4008cc:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4008d0:	bf14      	ite	ne
  4008d2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4008d6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4008da:	4b36      	ldr	r3, [pc, #216]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  4008dc:	601a      	str	r2, [r3, #0]
  4008de:	e04d      	b.n	40097c <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4008e0:	4b32      	ldr	r3, [pc, #200]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  4008e2:	6a1b      	ldr	r3, [r3, #32]
  4008e4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4008e8:	d003      	beq.n	4008f2 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4008ea:	4a33      	ldr	r2, [pc, #204]	; (4009b8 <SystemCoreClockUpdate+0x104>)
  4008ec:	4b31      	ldr	r3, [pc, #196]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  4008ee:	601a      	str	r2, [r3, #0]
  4008f0:	e044      	b.n	40097c <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4008f2:	4a32      	ldr	r2, [pc, #200]	; (4009bc <SystemCoreClockUpdate+0x108>)
  4008f4:	4b2f      	ldr	r3, [pc, #188]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  4008f6:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4008f8:	4b2c      	ldr	r3, [pc, #176]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  4008fa:	6a1b      	ldr	r3, [r3, #32]
  4008fc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400900:	2b10      	cmp	r3, #16
  400902:	d002      	beq.n	40090a <SystemCoreClockUpdate+0x56>
  400904:	2b20      	cmp	r3, #32
  400906:	d004      	beq.n	400912 <SystemCoreClockUpdate+0x5e>
  400908:	e038      	b.n	40097c <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40090a:	4a2d      	ldr	r2, [pc, #180]	; (4009c0 <SystemCoreClockUpdate+0x10c>)
  40090c:	4b29      	ldr	r3, [pc, #164]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  40090e:	601a      	str	r2, [r3, #0]
			break;
  400910:	e034      	b.n	40097c <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400912:	4a29      	ldr	r2, [pc, #164]	; (4009b8 <SystemCoreClockUpdate+0x104>)
  400914:	4b27      	ldr	r3, [pc, #156]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  400916:	601a      	str	r2, [r3, #0]
			break;
  400918:	e030      	b.n	40097c <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40091a:	4b24      	ldr	r3, [pc, #144]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  40091c:	6a1b      	ldr	r3, [r3, #32]
  40091e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400922:	d003      	beq.n	40092c <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400924:	4a24      	ldr	r2, [pc, #144]	; (4009b8 <SystemCoreClockUpdate+0x104>)
  400926:	4b23      	ldr	r3, [pc, #140]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  400928:	601a      	str	r2, [r3, #0]
  40092a:	e012      	b.n	400952 <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40092c:	4a23      	ldr	r2, [pc, #140]	; (4009bc <SystemCoreClockUpdate+0x108>)
  40092e:	4b21      	ldr	r3, [pc, #132]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  400930:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400932:	4b1e      	ldr	r3, [pc, #120]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  400934:	6a1b      	ldr	r3, [r3, #32]
  400936:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40093a:	2b10      	cmp	r3, #16
  40093c:	d002      	beq.n	400944 <SystemCoreClockUpdate+0x90>
  40093e:	2b20      	cmp	r3, #32
  400940:	d004      	beq.n	40094c <SystemCoreClockUpdate+0x98>
  400942:	e006      	b.n	400952 <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400944:	4a1e      	ldr	r2, [pc, #120]	; (4009c0 <SystemCoreClockUpdate+0x10c>)
  400946:	4b1b      	ldr	r3, [pc, #108]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  400948:	601a      	str	r2, [r3, #0]
					break;
  40094a:	e002      	b.n	400952 <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40094c:	4a1a      	ldr	r2, [pc, #104]	; (4009b8 <SystemCoreClockUpdate+0x104>)
  40094e:	4b19      	ldr	r3, [pc, #100]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  400950:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400952:	4b16      	ldr	r3, [pc, #88]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  400954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400956:	f003 0303 	and.w	r3, r3, #3
  40095a:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40095c:	4a13      	ldr	r2, [pc, #76]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  40095e:	bf07      	ittee	eq
  400960:	6a93      	ldreq	r3, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  400962:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400964:	6ad3      	ldrne	r3, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400966:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  400968:	4812      	ldr	r0, [pc, #72]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  40096a:	f3c3 410a 	ubfx	r1, r3, #16, #11
  40096e:	6803      	ldr	r3, [r0, #0]
  400970:	fb01 3303 	mla	r3, r1, r3, r3
  400974:	b2d2      	uxtb	r2, r2
  400976:	fbb3 f3f2 	udiv	r3, r3, r2
  40097a:	6003      	str	r3, [r0, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40097c:	4b0b      	ldr	r3, [pc, #44]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  40097e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400980:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400984:	2b70      	cmp	r3, #112	; 0x70
  400986:	d107      	bne.n	400998 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  400988:	4a0a      	ldr	r2, [pc, #40]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  40098a:	6813      	ldr	r3, [r2, #0]
  40098c:	490d      	ldr	r1, [pc, #52]	; (4009c4 <SystemCoreClockUpdate+0x110>)
  40098e:	fba1 1303 	umull	r1, r3, r1, r3
  400992:	085b      	lsrs	r3, r3, #1
  400994:	6013      	str	r3, [r2, #0]
  400996:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400998:	4b04      	ldr	r3, [pc, #16]	; (4009ac <SystemCoreClockUpdate+0xf8>)
  40099a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  40099c:	4905      	ldr	r1, [pc, #20]	; (4009b4 <SystemCoreClockUpdate+0x100>)
  40099e:	f3c3 1202 	ubfx	r2, r3, #4, #3
  4009a2:	680b      	ldr	r3, [r1, #0]
  4009a4:	40d3      	lsrs	r3, r2
  4009a6:	600b      	str	r3, [r1, #0]
  4009a8:	4770      	bx	lr
  4009aa:	bf00      	nop
  4009ac:	400e0400 	.word	0x400e0400
  4009b0:	400e1410 	.word	0x400e1410
  4009b4:	20000000 	.word	0x20000000
  4009b8:	00b71b00 	.word	0x00b71b00
  4009bc:	003d0900 	.word	0x003d0900
  4009c0:	007a1200 	.word	0x007a1200
  4009c4:	aaaaaaab 	.word	0xaaaaaaab

004009c8 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4009c8:	4b1a      	ldr	r3, [pc, #104]	; (400a34 <system_init_flash+0x6c>)
  4009ca:	4298      	cmp	r0, r3
  4009cc:	d807      	bhi.n	4009de <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4009ce:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  4009d2:	4a19      	ldr	r2, [pc, #100]	; (400a38 <system_init_flash+0x70>)
  4009d4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4009d6:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4009da:	6013      	str	r3, [r2, #0]
  4009dc:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  4009de:	4b17      	ldr	r3, [pc, #92]	; (400a3c <system_init_flash+0x74>)
  4009e0:	4298      	cmp	r0, r3
  4009e2:	d806      	bhi.n	4009f2 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4009e4:	4b16      	ldr	r3, [pc, #88]	; (400a40 <system_init_flash+0x78>)
  4009e6:	4a14      	ldr	r2, [pc, #80]	; (400a38 <system_init_flash+0x70>)
  4009e8:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4009ea:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4009ee:	6013      	str	r3, [r2, #0]
  4009f0:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4009f2:	4b14      	ldr	r3, [pc, #80]	; (400a44 <system_init_flash+0x7c>)
  4009f4:	4298      	cmp	r0, r3
  4009f6:	d806      	bhi.n	400a06 <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4009f8:	4b13      	ldr	r3, [pc, #76]	; (400a48 <system_init_flash+0x80>)
  4009fa:	4a0f      	ldr	r2, [pc, #60]	; (400a38 <system_init_flash+0x70>)
  4009fc:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4009fe:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a02:	6013      	str	r3, [r2, #0]
  400a04:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400a06:	4b11      	ldr	r3, [pc, #68]	; (400a4c <system_init_flash+0x84>)
  400a08:	4298      	cmp	r0, r3
  400a0a:	d806      	bhi.n	400a1a <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a0c:	4b10      	ldr	r3, [pc, #64]	; (400a50 <system_init_flash+0x88>)
  400a0e:	4a0a      	ldr	r2, [pc, #40]	; (400a38 <system_init_flash+0x70>)
  400a10:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a12:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a16:	6013      	str	r3, [r2, #0]
  400a18:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400a1a:	4b0e      	ldr	r3, [pc, #56]	; (400a54 <system_init_flash+0x8c>)
  400a1c:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400a1e:	bf94      	ite	ls
  400a20:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a24:	4b0c      	ldrhi	r3, [pc, #48]	; (400a58 <system_init_flash+0x90>)
  400a26:	4a04      	ldr	r2, [pc, #16]	; (400a38 <system_init_flash+0x70>)
  400a28:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a2a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a2e:	6013      	str	r3, [r2, #0]
  400a30:	4770      	bx	lr
  400a32:	bf00      	nop
  400a34:	01312cff 	.word	0x01312cff
  400a38:	400e0a00 	.word	0x400e0a00
  400a3c:	026259ff 	.word	0x026259ff
  400a40:	04000100 	.word	0x04000100
  400a44:	039386ff 	.word	0x039386ff
  400a48:	04000200 	.word	0x04000200
  400a4c:	04c4b3ff 	.word	0x04c4b3ff
  400a50:	04000300 	.word	0x04000300
  400a54:	05f5e0ff 	.word	0x05f5e0ff
  400a58:	04000500 	.word	0x04000500

00400a5c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a5c:	4b09      	ldr	r3, [pc, #36]	; (400a84 <_sbrk+0x28>)
  400a5e:	681b      	ldr	r3, [r3, #0]
  400a60:	b913      	cbnz	r3, 400a68 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400a62:	4a09      	ldr	r2, [pc, #36]	; (400a88 <_sbrk+0x2c>)
  400a64:	4b07      	ldr	r3, [pc, #28]	; (400a84 <_sbrk+0x28>)
  400a66:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400a68:	4b06      	ldr	r3, [pc, #24]	; (400a84 <_sbrk+0x28>)
  400a6a:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400a6c:	181a      	adds	r2, r3, r0
  400a6e:	4907      	ldr	r1, [pc, #28]	; (400a8c <_sbrk+0x30>)
  400a70:	4291      	cmp	r1, r2
  400a72:	db04      	blt.n	400a7e <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400a74:	4610      	mov	r0, r2
  400a76:	4a03      	ldr	r2, [pc, #12]	; (400a84 <_sbrk+0x28>)
  400a78:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400a7a:	4618      	mov	r0, r3
  400a7c:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400a7e:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400a82:	4770      	bx	lr
  400a84:	2000093c 	.word	0x2000093c
  400a88:	20003bb0 	.word	0x20003bb0
  400a8c:	20027ffc 	.word	0x20027ffc

00400a90 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400a90:	f04f 30ff 	mov.w	r0, #4294967295
  400a94:	4770      	bx	lr
  400a96:	bf00      	nop

00400a98 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400a98:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400a9c:	604b      	str	r3, [r1, #4]

	return 0;
}
  400a9e:	2000      	movs	r0, #0
  400aa0:	4770      	bx	lr
  400aa2:	bf00      	nop

00400aa4 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400aa4:	2001      	movs	r0, #1
  400aa6:	4770      	bx	lr

00400aa8 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400aa8:	2000      	movs	r0, #0
  400aaa:	4770      	bx	lr

00400aac <vListInitialise>:
void vListInitialise( xList *pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
  400aac:	f100 0308 	add.w	r3, r0, #8
  400ab0:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
  400ab2:	f04f 32ff 	mov.w	r2, #4294967295
  400ab6:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
  400ab8:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
  400aba:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
  400abc:	2300      	movs	r3, #0
  400abe:	6003      	str	r3, [r0, #0]
  400ac0:	4770      	bx	lr
  400ac2:	bf00      	nop

00400ac4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
  400ac4:	2300      	movs	r3, #0
  400ac6:	6103      	str	r3, [r0, #16]
  400ac8:	4770      	bx	lr
  400aca:	bf00      	nop

00400acc <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
  400acc:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
  400ace:	685a      	ldr	r2, [r3, #4]
  400ad0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
  400ad2:	6842      	ldr	r2, [r0, #4]
  400ad4:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
  400ad6:	685a      	ldr	r2, [r3, #4]
  400ad8:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
  400ada:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
  400adc:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  400ade:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  400ae0:	6803      	ldr	r3, [r0, #0]
  400ae2:	3301      	adds	r3, #1
  400ae4:	6003      	str	r3, [r0, #0]
  400ae6:	4770      	bx	lr

00400ae8 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
  400ae8:	b410      	push	{r4}
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
  400aea:	680c      	ldr	r4, [r1, #0]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
  400aec:	f1b4 3fff 	cmp.w	r4, #4294967295
  400af0:	d101      	bne.n	400af6 <vListInsert+0xe>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
  400af2:	6903      	ldr	r3, [r0, #16]
  400af4:	e00a      	b.n	400b0c <vListInsert+0x24>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/

		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
  400af6:	f100 0308 	add.w	r3, r0, #8
  400afa:	68c2      	ldr	r2, [r0, #12]
  400afc:	6812      	ldr	r2, [r2, #0]
  400afe:	4294      	cmp	r4, r2
  400b00:	d304      	bcc.n	400b0c <vListInsert+0x24>
  400b02:	685b      	ldr	r3, [r3, #4]
  400b04:	685a      	ldr	r2, [r3, #4]
  400b06:	6812      	ldr	r2, [r2, #0]
  400b08:	4294      	cmp	r4, r2
  400b0a:	d2fa      	bcs.n	400b02 <vListInsert+0x1a>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
  400b0c:	685a      	ldr	r2, [r3, #4]
  400b0e:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
  400b10:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
  400b12:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
  400b14:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  400b16:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  400b18:	6803      	ldr	r3, [r0, #0]
  400b1a:	3301      	adds	r3, #1
  400b1c:	6003      	str	r3, [r0, #0]
}
  400b1e:	bc10      	pop	{r4}
  400b20:	4770      	bx	lr
  400b22:	bf00      	nop

00400b24 <vListRemove>:

void vListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
  400b24:	6843      	ldr	r3, [r0, #4]
  400b26:	6882      	ldr	r2, [r0, #8]
  400b28:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
  400b2a:	6883      	ldr	r3, [r0, #8]
  400b2c:	6842      	ldr	r2, [r0, #4]
  400b2e:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
  400b30:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
  400b32:	685a      	ldr	r2, [r3, #4]
  400b34:	4290      	cmp	r0, r2
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
  400b36:	bf04      	itt	eq
  400b38:	6882      	ldreq	r2, [r0, #8]
  400b3a:	605a      	streq	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
  400b3c:	2200      	movs	r2, #0
  400b3e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
  400b40:	681a      	ldr	r2, [r3, #0]
  400b42:	3a01      	subs	r2, #1
  400b44:	601a      	str	r2, [r3, #0]
  400b46:	4770      	bx	lr

00400b48 <pxPortInitialiseStack>:
		pdTASK_CODE pxCode, void *pvParameters)
{
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--;  /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;  /* xPSR */
  400b48:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  400b4c:	f840 3c04 	str.w	r3, [r0, #-4]
	pxTopOfStack--;
	*pxTopOfStack = (portSTACK_TYPE) pxCode;  /* PC */
  400b50:	f840 1c08 	str.w	r1, [r0, #-8]
	pxTopOfStack--;
	*pxTopOfStack = 0;  /* LR */
  400b54:	2300      	movs	r3, #0
  400b56:	f840 3c0c 	str.w	r3, [r0, #-12]
	pxTopOfStack -= 5;  /* R12, R3, R2 and R1. */
	*pxTopOfStack = (portSTACK_TYPE) pvParameters;  /* R0 */
  400b5a:	f840 2c20 	str.w	r2, [r0, #-32]
	pxTopOfStack -= 8;  /* R11, R10, R9, R8, R7, R6, R5 and R4. */

	return pxTopOfStack;
}
  400b5e:	3840      	subs	r0, #64	; 0x40
  400b60:	4770      	bx	lr
  400b62:	bf00      	nop

00400b64 <SVC_Handler>:
/**
 * \brief Handler for Sytem supervisor call.
 */
void vPortSVCHandler(void)
{
	__asm volatile (" ldr r3, pxCurrentTCBConst2  \n"  /* Restore the context. */
  400b64:	4b06      	ldr	r3, [pc, #24]	; (400b80 <pxCurrentTCBConst2>)
  400b66:	6819      	ldr	r1, [r3, #0]
  400b68:	6808      	ldr	r0, [r1, #0]
  400b6a:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
  400b6e:	f380 8809 	msr	PSP, r0
  400b72:	f04f 0000 	mov.w	r0, #0
  400b76:	f380 8811 	msr	BASEPRI, r0
  400b7a:	f04e 0e0d 	orr.w	lr, lr, #13
  400b7e:	4770      	bx	lr

00400b80 <pxCurrentTCBConst2>:
  400b80:	200009e0 	.word	0x200009e0

00400b84 <vPortStartFirstTask>:
/**
 * \brief Start schedule first task.
 */
void vPortStartFirstTask(void)
{
	__asm volatile (" ldr r0, =0xE000ED08   \n"  /* Use the NVIC offset register to locate the stack. */
  400b84:	4802      	ldr	r0, [pc, #8]	; (400b90 <vPortStartFirstTask+0xc>)
  400b86:	6800      	ldr	r0, [r0, #0]
  400b88:	6800      	ldr	r0, [r0, #0]
  400b8a:	f380 8808 	msr	MSP, r0
  400b8e:	df00      	svc	0
  400b90:	e000ed08 	.word	0xe000ed08

00400b94 <xPortStartScheduler>:

/**
 * \brief See header file for description.
 */
portBASE_TYPE xPortStartScheduler(void)
{
  400b94:	b510      	push	{r4, lr}
	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
  400b96:	4b0b      	ldr	r3, [pc, #44]	; (400bc4 <xPortStartScheduler+0x30>)
  400b98:	681a      	ldr	r2, [r3, #0]
  400b9a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
  400b9e:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
  400ba0:	681a      	ldr	r2, [r3, #0]
  400ba2:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
  400ba6:	601a      	str	r2, [r3, #0]
 * frequency.
 */
void prvSetupTimerInterrupt(void)
{
	/* Configure SysTick to interrupt at the requested rate. */
	*(portNVIC_SYSTICK_LOAD) =
  400ba8:	4a07      	ldr	r2, [pc, #28]	; (400bc8 <xPortStartScheduler+0x34>)
  400baa:	f6a3 530c 	subw	r3, r3, #3340	; 0xd0c
  400bae:	601a      	str	r2, [r3, #0]
			(configCPU_CLOCK_HZ / configTICK_RATE_HZ) - 1UL;
	*(portNVIC_SYSTICK_CTRL) =
  400bb0:	2207      	movs	r2, #7
  400bb2:	3b04      	subs	r3, #4
  400bb4:	601a      	str	r2, [r3, #0]
	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	prvSetupTimerInterrupt();

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
  400bb6:	2400      	movs	r4, #0
  400bb8:	4b04      	ldr	r3, [pc, #16]	; (400bcc <xPortStartScheduler+0x38>)
  400bba:	601c      	str	r4, [r3, #0]

	/* Start the first task. */
	vPortStartFirstTask();
  400bbc:	4b04      	ldr	r3, [pc, #16]	; (400bd0 <xPortStartScheduler+0x3c>)
  400bbe:	4798      	blx	r3

	/* Should not get here! */
	return 0;
}
  400bc0:	4620      	mov	r0, r4
  400bc2:	bd10      	pop	{r4, pc}
  400bc4:	e000ed20 	.word	0xe000ed20
  400bc8:	0001d4bf 	.word	0x0001d4bf
  400bcc:	20000004 	.word	0x20000004
  400bd0:	00400b85 	.word	0x00400b85

00400bd4 <vPortYieldFromISR>:
 * \brief Yield PendSV to request a context switch.
 */
void vPortYieldFromISR(void)
{
	/* Set a PendSV to request a context switch. */
	*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
  400bd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400bd8:	4b01      	ldr	r3, [pc, #4]	; (400be0 <vPortYieldFromISR+0xc>)
  400bda:	601a      	str	r2, [r3, #0]
  400bdc:	4770      	bx	lr
  400bde:	bf00      	nop
  400be0:	e000ed04 	.word	0xe000ed04

00400be4 <vPortEnterCritical>:
/**
 * \brief Enter Critical code.
 */
void vPortEnterCritical(void)
{
	portDISABLE_INTERRUPTS();
  400be4:	f04f 0050 	mov.w	r0, #80	; 0x50
  400be8:	f380 8811 	msr	BASEPRI, r0
	uxCriticalNesting++;
  400bec:	4a02      	ldr	r2, [pc, #8]	; (400bf8 <vPortEnterCritical+0x14>)
  400bee:	6813      	ldr	r3, [r2, #0]
  400bf0:	3301      	adds	r3, #1
  400bf2:	6013      	str	r3, [r2, #0]
  400bf4:	4770      	bx	lr
  400bf6:	bf00      	nop
  400bf8:	20000004 	.word	0x20000004

00400bfc <vPortExitCritical>:
/**
 * \brief Exit Critical code.
 */
void vPortExitCritical(void)
{
	uxCriticalNesting--;
  400bfc:	4a04      	ldr	r2, [pc, #16]	; (400c10 <vPortExitCritical+0x14>)
  400bfe:	6813      	ldr	r3, [r2, #0]
  400c00:	3b01      	subs	r3, #1
  400c02:	6013      	str	r3, [r2, #0]
	if (uxCriticalNesting == 0) {
  400c04:	b91b      	cbnz	r3, 400c0e <vPortExitCritical+0x12>
		portENABLE_INTERRUPTS();
  400c06:	f04f 0000 	mov.w	r0, #0
  400c0a:	f380 8811 	msr	BASEPRI, r0
  400c0e:	4770      	bx	lr
  400c10:	20000004 	.word	0x20000004

00400c14 <PendSV_Handler>:
 * \brief Handler for Sytem interrupt-driven request.
 */
void xPortPendSVHandler(void)
{
	/* This is a naked function. */
	__asm volatile (" mrs r0, psp      \n"
  400c14:	f3ef 8009 	mrs	r0, PSP
  400c18:	4b0c      	ldr	r3, [pc, #48]	; (400c4c <pxCurrentTCBConst>)
  400c1a:	681a      	ldr	r2, [r3, #0]
  400c1c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
  400c20:	6010      	str	r0, [r2, #0]
  400c22:	e92d 4008 	stmdb	sp!, {r3, lr}
  400c26:	f04f 0050 	mov.w	r0, #80	; 0x50
  400c2a:	f380 8811 	msr	BASEPRI, r0
  400c2e:	f000 fb5d 	bl	4012ec <vTaskSwitchContext>
  400c32:	f04f 0000 	mov.w	r0, #0
  400c36:	f380 8811 	msr	BASEPRI, r0
  400c3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  400c3e:	6819      	ldr	r1, [r3, #0]
  400c40:	6808      	ldr	r0, [r1, #0]
  400c42:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
  400c46:	f380 8809 	msr	PSP, r0
  400c4a:	4770      	bx	lr

00400c4c <pxCurrentTCBConst>:
  400c4c:	200009e0 	.word	0x200009e0

00400c50 <pvPortMalloc>:
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
  400c50:	b510      	push	{r4, lr}
  400c52:	4604      	mov	r4, r0
void *pvReturn;

	vTaskSuspendAll();
  400c54:	4b04      	ldr	r3, [pc, #16]	; (400c68 <pvPortMalloc+0x18>)
  400c56:	4798      	blx	r3
	{
		pvReturn = malloc( xWantedSize );
  400c58:	4620      	mov	r0, r4
  400c5a:	4b04      	ldr	r3, [pc, #16]	; (400c6c <pvPortMalloc+0x1c>)
  400c5c:	4798      	blx	r3
  400c5e:	4604      	mov	r4, r0
	}
	xTaskResumeAll();
  400c60:	4b03      	ldr	r3, [pc, #12]	; (400c70 <pvPortMalloc+0x20>)
  400c62:	4798      	blx	r3
		}
	}
	#endif

	return pvReturn;
}
  400c64:	4620      	mov	r0, r4
  400c66:	bd10      	pop	{r4, pc}
  400c68:	00400fbd 	.word	0x00400fbd
  400c6c:	00401741 	.word	0x00401741
  400c70:	004010f5 	.word	0x004010f5

00400c74 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
	if( pv )
  400c74:	b148      	cbz	r0, 400c8a <vPortFree+0x16>
	return pvReturn;
}
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
  400c76:	b510      	push	{r4, lr}
  400c78:	4604      	mov	r4, r0
	if( pv )
	{
		vTaskSuspendAll();
  400c7a:	4b04      	ldr	r3, [pc, #16]	; (400c8c <vPortFree+0x18>)
  400c7c:	4798      	blx	r3
		{
			free( pv );
  400c7e:	4620      	mov	r0, r4
  400c80:	4b03      	ldr	r3, [pc, #12]	; (400c90 <vPortFree+0x1c>)
  400c82:	4798      	blx	r3
		}
		xTaskResumeAll();
  400c84:	4b03      	ldr	r3, [pc, #12]	; (400c94 <vPortFree+0x20>)
  400c86:	4798      	blx	r3
  400c88:	bd10      	pop	{r4, pc}
  400c8a:	4770      	bx	lr
  400c8c:	00400fbd 	.word	0x00400fbd
  400c90:	00401751 	.word	0x00401751
  400c94:	004010f5 	.word	0x004010f5

00400c98 <prvAddCurrentTaskToDelayedList>:
	#endif
}
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
  400c98:	b510      	push	{r4, lr}
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
  400c9a:	4b0f      	ldr	r3, [pc, #60]	; (400cd8 <prvAddCurrentTaskToDelayedList+0x40>)
  400c9c:	681b      	ldr	r3, [r3, #0]
  400c9e:	6058      	str	r0, [r3, #4]

	if( xTimeToWake < xTickCount )
  400ca0:	4b0e      	ldr	r3, [pc, #56]	; (400cdc <prvAddCurrentTaskToDelayedList+0x44>)
  400ca2:	681b      	ldr	r3, [r3, #0]
  400ca4:	4298      	cmp	r0, r3
  400ca6:	d207      	bcs.n	400cb8 <prvAddCurrentTaskToDelayedList+0x20>
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
  400ca8:	4b0d      	ldr	r3, [pc, #52]	; (400ce0 <prvAddCurrentTaskToDelayedList+0x48>)
  400caa:	6818      	ldr	r0, [r3, #0]
  400cac:	4b0a      	ldr	r3, [pc, #40]	; (400cd8 <prvAddCurrentTaskToDelayedList+0x40>)
  400cae:	6819      	ldr	r1, [r3, #0]
  400cb0:	3104      	adds	r1, #4
  400cb2:	4b0c      	ldr	r3, [pc, #48]	; (400ce4 <prvAddCurrentTaskToDelayedList+0x4c>)
  400cb4:	4798      	blx	r3
  400cb6:	bd10      	pop	{r4, pc}
  400cb8:	4604      	mov	r4, r0
	}
	else
	{
		/* The wake time has not overflowed, so we can use the current block list. */
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
  400cba:	4b0b      	ldr	r3, [pc, #44]	; (400ce8 <prvAddCurrentTaskToDelayedList+0x50>)
  400cbc:	6818      	ldr	r0, [r3, #0]
  400cbe:	4b06      	ldr	r3, [pc, #24]	; (400cd8 <prvAddCurrentTaskToDelayedList+0x40>)
  400cc0:	6819      	ldr	r1, [r3, #0]
  400cc2:	3104      	adds	r1, #4
  400cc4:	4b07      	ldr	r3, [pc, #28]	; (400ce4 <prvAddCurrentTaskToDelayedList+0x4c>)
  400cc6:	4798      	blx	r3

		/* If the task entering the blocked state was placed at the head of the
		list of blocked tasks then xNextTaskUnblockTime needs to be updated
		too. */
		if( xTimeToWake < xNextTaskUnblockTime )
  400cc8:	4b08      	ldr	r3, [pc, #32]	; (400cec <prvAddCurrentTaskToDelayedList+0x54>)
  400cca:	681b      	ldr	r3, [r3, #0]
  400ccc:	429c      	cmp	r4, r3
		{
			xNextTaskUnblockTime = xTimeToWake;
  400cce:	bf3c      	itt	cc
  400cd0:	4b06      	ldrcc	r3, [pc, #24]	; (400cec <prvAddCurrentTaskToDelayedList+0x54>)
  400cd2:	601c      	strcc	r4, [r3, #0]
  400cd4:	bd10      	pop	{r4, pc}
  400cd6:	bf00      	nop
  400cd8:	200009e0 	.word	0x200009e0
  400cdc:	20000944 	.word	0x20000944
  400ce0:	200009ac 	.word	0x200009ac
  400ce4:	00400ae9 	.word	0x00400ae9
  400ce8:	200009b4 	.word	0x200009b4
  400cec:	2000000c 	.word	0x2000000c

00400cf0 <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
  400cf0:	b508      	push	{r3, lr}
		{
			/* If we are not using preemption we keep forcing a task switch to
			see if any other task has become available.  If we are using
			preemption we don't need to do this as any task becoming available
			will automatically get the processor anyway. */
			taskYIELD();
  400cf2:	4d02      	ldr	r5, [pc, #8]	; (400cfc <prvIdleTask+0xc>)
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
  400cf4:	4c02      	ldr	r4, [pc, #8]	; (400d00 <prvIdleTask+0x10>)
		{
			/* If we are not using preemption we keep forcing a task switch to
			see if any other task has become available.  If we are using
			preemption we don't need to do this as any task becoming available
			will automatically get the processor anyway. */
			taskYIELD();
  400cf6:	47a8      	blx	r5
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
  400cf8:	47a0      	blx	r4
  400cfa:	e7fc      	b.n	400cf6 <prvIdleTask+0x6>
  400cfc:	00400bd5 	.word	0x00400bd5
  400d00:	004015a9 	.word	0x004015a9

00400d04 <prvListTaskWithinSingleList>:
/*-----------------------------------------------------------*/

#if ( configUSE_TRACE_FACILITY == 1 )

	static void prvListTaskWithinSingleList( const signed char *pcWriteBuffer, xList *pxList, signed char cStatus )
	{
  400d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d08:	b087      	sub	sp, #28
  400d0a:	9005      	str	r0, [sp, #20]
  400d0c:	460d      	mov	r5, r1
  400d0e:	4693      	mov	fp, r2
	volatile tskTCB *pxNextTCB, *pxFirstTCB;
	unsigned short usStackRemaining;

		/* Write the details of all the TCB's in pxList into the buffer. */
		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
  400d10:	684b      	ldr	r3, [r1, #4]
  400d12:	685b      	ldr	r3, [r3, #4]
  400d14:	604b      	str	r3, [r1, #4]
  400d16:	f101 0708 	add.w	r7, r1, #8
  400d1a:	42bb      	cmp	r3, r7
  400d1c:	bf04      	itt	eq
  400d1e:	685b      	ldreq	r3, [r3, #4]
  400d20:	604b      	streq	r3, [r1, #4]
  400d22:	684b      	ldr	r3, [r1, #4]
  400d24:	f8d3 a00c 	ldr.w	sl, [r3, #12]
			{
				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
			}
			#endif

			sprintf( pcStatusString, ( char * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStatus, ( unsigned int ) pxNextTCB->uxPriority, usStackRemaining, ( unsigned int ) pxNextTCB->uxTCBNumber );
  400d28:	f8df 9064 	ldr.w	r9, [pc, #100]	; 400d90 <prvListTaskWithinSingleList+0x8c>
  400d2c:	4e16      	ldr	r6, [pc, #88]	; (400d88 <prvListTaskWithinSingleList+0x84>)
  400d2e:	f8df 8064 	ldr.w	r8, [pc, #100]	; 400d94 <prvListTaskWithinSingleList+0x90>

		/* Write the details of all the TCB's in pxList into the buffer. */
		listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
		do
		{
			listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
  400d32:	686b      	ldr	r3, [r5, #4]
  400d34:	685b      	ldr	r3, [r3, #4]
  400d36:	606b      	str	r3, [r5, #4]
  400d38:	429f      	cmp	r7, r3
  400d3a:	bf04      	itt	eq
  400d3c:	68eb      	ldreq	r3, [r5, #12]
  400d3e:	606b      	streq	r3, [r5, #4]
  400d40:	686b      	ldr	r3, [r5, #4]
  400d42:	68dc      	ldr	r4, [r3, #12]
			{
				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxEndOfStack );
			}
			#else
			{
				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
  400d44:	6b22      	ldr	r2, [r4, #48]	; 0x30

	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte )
	{
	register unsigned short usCount = 0;

		while( *pucStackByte == tskSTACK_FILL_BYTE )
  400d46:	7813      	ldrb	r3, [r2, #0]
  400d48:	2ba5      	cmp	r3, #165	; 0xa5
  400d4a:	d107      	bne.n	400d5c <prvListTaskWithinSingleList+0x58>
  400d4c:	2300      	movs	r3, #0
		{
			pucStackByte -= portSTACK_GROWTH;
			usCount++;
  400d4e:	3301      	adds	r3, #1
  400d50:	b29b      	uxth	r3, r3

	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte )
	{
	register unsigned short usCount = 0;

		while( *pucStackByte == tskSTACK_FILL_BYTE )
  400d52:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  400d56:	29a5      	cmp	r1, #165	; 0xa5
  400d58:	d0f9      	beq.n	400d4e <prvListTaskWithinSingleList+0x4a>
  400d5a:	e000      	b.n	400d5e <prvListTaskWithinSingleList+0x5a>

#if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )

	static unsigned short usTaskCheckFreeStackSpace( const unsigned char * pucStackByte )
	{
	register unsigned short usCount = 0;
  400d5c:	2300      	movs	r3, #0
			{
				usStackRemaining = usTaskCheckFreeStackSpace( ( unsigned char * ) pxNextTCB->pxStack );
			}
			#endif

			sprintf( pcStatusString, ( char * ) "%s\t\t%c\t%u\t%u\t%u\r\n", pxNextTCB->pcTaskName, cStatus, ( unsigned int ) pxNextTCB->uxPriority, usStackRemaining, ( unsigned int ) pxNextTCB->uxTCBNumber );
  400d5e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  400d60:	6c61      	ldr	r1, [r4, #68]	; 0x44
  400d62:	9102      	str	r1, [sp, #8]
  400d64:	089b      	lsrs	r3, r3, #2
  400d66:	9301      	str	r3, [sp, #4]
  400d68:	9200      	str	r2, [sp, #0]
  400d6a:	465b      	mov	r3, fp
  400d6c:	f104 0234 	add.w	r2, r4, #52	; 0x34
  400d70:	4649      	mov	r1, r9
  400d72:	4630      	mov	r0, r6
  400d74:	47c0      	blx	r8
			strcat( ( char * ) pcWriteBuffer, ( char * ) pcStatusString );
  400d76:	4631      	mov	r1, r6
  400d78:	9805      	ldr	r0, [sp, #20]
  400d7a:	4b04      	ldr	r3, [pc, #16]	; (400d8c <prvListTaskWithinSingleList+0x88>)
  400d7c:	4798      	blx	r3

		} while( pxNextTCB != pxFirstTCB );
  400d7e:	45a2      	cmp	sl, r4
  400d80:	d1d7      	bne.n	400d32 <prvListTaskWithinSingleList+0x2e>
	}
  400d82:	b007      	add	sp, #28
  400d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400d88:	200009e4 	.word	0x200009e4
  400d8c:	004020dd 	.word	0x004020dd
  400d90:	00408030 	.word	0x00408030
  400d94:	00402091 	.word	0x00402091

00400d98 <xTaskGenericCreate>:
/*-----------------------------------------------------------
 * TASK CREATION API documented in task.h
 *----------------------------------------------------------*/

signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, unsigned short usStackDepth, void *pvParameters, unsigned portBASE_TYPE uxPriority, xTaskHandle *pxCreatedTask, portSTACK_TYPE *puxStackBuffer, const xMemoryRegion * const xRegions )
{
  400d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d9c:	b083      	sub	sp, #12
  400d9e:	4683      	mov	fp, r0
  400da0:	460e      	mov	r6, r1
  400da2:	4615      	mov	r5, r2
  400da4:	9301      	str	r3, [sp, #4]
  400da6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
  400daa:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  400dae:	9f0e      	ldr	r7, [sp, #56]	; 0x38
{
tskTCB *pxNewTCB;

	/* Allocate space for the TCB.  Where the memory comes from depends on
	the implementation of the port malloc function. */
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
  400db0:	204c      	movs	r0, #76	; 0x4c
  400db2:	4b56      	ldr	r3, [pc, #344]	; (400f0c <xTaskGenericCreate+0x174>)
  400db4:	4798      	blx	r3

	if( pxNewTCB != NULL )
  400db6:	2800      	cmp	r0, #0
  400db8:	f000 80a2 	beq.w	400f00 <xTaskGenericCreate+0x168>
  400dbc:	4604      	mov	r4, r0
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
  400dbe:	2f00      	cmp	r7, #0
  400dc0:	f040 809b 	bne.w	400efa <xTaskGenericCreate+0x162>
  400dc4:	00a8      	lsls	r0, r5, #2
  400dc6:	4b51      	ldr	r3, [pc, #324]	; (400f0c <xTaskGenericCreate+0x174>)
  400dc8:	4798      	blx	r3
  400dca:	6320      	str	r0, [r4, #48]	; 0x30

		if( pxNewTCB->pxStack == NULL )
  400dcc:	b918      	cbnz	r0, 400dd6 <xTaskGenericCreate+0x3e>
		{
			/* Could not allocate the stack.  Delete the allocated TCB. */
			vPortFree( pxNewTCB );
  400dce:	4620      	mov	r0, r4
  400dd0:	4b4f      	ldr	r3, [pc, #316]	; (400f10 <xTaskGenericCreate+0x178>)
  400dd2:	4798      	blx	r3
  400dd4:	e094      	b.n	400f00 <xTaskGenericCreate+0x168>
			pxNewTCB = NULL;
		}
		else
		{
			/* Just to help debugging. */
			memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
  400dd6:	00aa      	lsls	r2, r5, #2
  400dd8:	21a5      	movs	r1, #165	; 0xa5
  400dda:	4b4e      	ldr	r3, [pc, #312]	; (400f14 <xTaskGenericCreate+0x17c>)
  400ddc:	4798      	blx	r3
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( unsigned long ) pxTopOfStack ) & ( ( unsigned long ) ~portBYTE_ALIGNMENT_MASK  ) );
  400dde:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
  400de2:	3d01      	subs	r5, #1
  400de4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  400de6:	eb03 0585 	add.w	r5, r3, r5, lsl #2
  400dea:	f025 0507 	bic.w	r5, r5, #7
{
	/* Store the function name in the TCB. */
	#if configMAX_TASK_NAME_LEN > 1
	{
		/* Don't bring strncpy into the build unnecessarily. */
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
  400dee:	2210      	movs	r2, #16
  400df0:	4631      	mov	r1, r6
  400df2:	f104 0034 	add.w	r0, r4, #52	; 0x34
  400df6:	4b48      	ldr	r3, [pc, #288]	; (400f18 <xTaskGenericCreate+0x180>)
  400df8:	4798      	blx	r3
	}
	#endif
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
  400dfa:	2300      	movs	r3, #0
  400dfc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  400e00:	4656      	mov	r6, sl
  400e02:	2e04      	cmp	r6, #4
  400e04:	bf28      	it	cs
  400e06:	2604      	movcs	r6, #4
	if( uxPriority >= configMAX_PRIORITIES )
	{
		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
	}

	pxTCB->uxPriority = uxPriority;
  400e08:	62e6      	str	r6, [r4, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxTCB->uxBasePriority = uxPriority;
  400e0a:	64a6      	str	r6, [r4, #72]	; 0x48
	}
	#endif

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
  400e0c:	1d27      	adds	r7, r4, #4
  400e0e:	4638      	mov	r0, r7
  400e10:	f8df 8150 	ldr.w	r8, [pc, #336]	; 400f64 <xTaskGenericCreate+0x1cc>
  400e14:	47c0      	blx	r8
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
  400e16:	f104 0018 	add.w	r0, r4, #24
  400e1a:	47c0      	blx	r8

	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
  400e1c:	6124      	str	r4, [r4, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
  400e1e:	f1c6 0605 	rsb	r6, r6, #5
  400e22:	61a6      	str	r6, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
  400e24:	6264      	str	r4, [r4, #36]	; 0x24
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
  400e26:	9a01      	ldr	r2, [sp, #4]
  400e28:	4659      	mov	r1, fp
  400e2a:	4628      	mov	r0, r5
  400e2c:	4b3b      	ldr	r3, [pc, #236]	; (400f1c <xTaskGenericCreate+0x184>)
  400e2e:	4798      	blx	r3
  400e30:	6020      	str	r0, [r4, #0]
		#endif

		/* Check the alignment of the initialised stack. */
		configASSERT( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );

		if( ( void * ) pxCreatedTask != NULL )
  400e32:	f1b9 0f00 	cmp.w	r9, #0
  400e36:	d001      	beq.n	400e3c <xTaskGenericCreate+0xa4>
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
  400e38:	f8c9 4000 	str.w	r4, [r9]
		}

		/* We are going to manipulate the task queues to add this task to a
		ready list, so must make sure no interrupts occur. */
		taskENTER_CRITICAL();
  400e3c:	4b38      	ldr	r3, [pc, #224]	; (400f20 <xTaskGenericCreate+0x188>)
  400e3e:	4798      	blx	r3
		{
			uxCurrentNumberOfTasks++;
  400e40:	4a38      	ldr	r2, [pc, #224]	; (400f24 <xTaskGenericCreate+0x18c>)
  400e42:	6813      	ldr	r3, [r2, #0]
  400e44:	3301      	adds	r3, #1
  400e46:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
  400e48:	4b37      	ldr	r3, [pc, #220]	; (400f28 <xTaskGenericCreate+0x190>)
  400e4a:	681b      	ldr	r3, [r3, #0]
  400e4c:	b9fb      	cbnz	r3, 400e8e <xTaskGenericCreate+0xf6>
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
  400e4e:	4b36      	ldr	r3, [pc, #216]	; (400f28 <xTaskGenericCreate+0x190>)
  400e50:	601c      	str	r4, [r3, #0]

				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
  400e52:	6813      	ldr	r3, [r2, #0]
  400e54:	2b01      	cmp	r3, #1
  400e56:	d124      	bne.n	400ea2 <xTaskGenericCreate+0x10a>
  400e58:	4d34      	ldr	r5, [pc, #208]	; (400f2c <xTaskGenericCreate+0x194>)
  400e5a:	f105 0864 	add.w	r8, r5, #100	; 0x64
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
  400e5e:	4e34      	ldr	r6, [pc, #208]	; (400f30 <xTaskGenericCreate+0x198>)
  400e60:	4628      	mov	r0, r5
  400e62:	47b0      	blx	r6
  400e64:	3514      	adds	r5, #20

static void prvInitialiseTaskLists( void )
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
  400e66:	4545      	cmp	r5, r8
  400e68:	d1fa      	bne.n	400e60 <xTaskGenericCreate+0xc8>
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
	}

	vListInitialise( ( xList * ) &xDelayedTaskList1 );
  400e6a:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 400f68 <xTaskGenericCreate+0x1d0>
  400e6e:	4640      	mov	r0, r8
  400e70:	4d2f      	ldr	r5, [pc, #188]	; (400f30 <xTaskGenericCreate+0x198>)
  400e72:	47a8      	blx	r5
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
  400e74:	4e2f      	ldr	r6, [pc, #188]	; (400f34 <xTaskGenericCreate+0x19c>)
  400e76:	4630      	mov	r0, r6
  400e78:	47a8      	blx	r5
	vListInitialise( ( xList * ) &xPendingReadyList );
  400e7a:	482f      	ldr	r0, [pc, #188]	; (400f38 <xTaskGenericCreate+0x1a0>)
  400e7c:	47a8      	blx	r5
	}
	#endif

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( ( xList * ) &xSuspendedTaskList );
  400e7e:	482f      	ldr	r0, [pc, #188]	; (400f3c <xTaskGenericCreate+0x1a4>)
  400e80:	47a8      	blx	r5
	}
	#endif

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
  400e82:	4b2f      	ldr	r3, [pc, #188]	; (400f40 <xTaskGenericCreate+0x1a8>)
  400e84:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
  400e88:	4b2e      	ldr	r3, [pc, #184]	; (400f44 <xTaskGenericCreate+0x1ac>)
  400e8a:	601e      	str	r6, [r3, #0]
  400e8c:	e009      	b.n	400ea2 <xTaskGenericCreate+0x10a>
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
  400e8e:	4b2e      	ldr	r3, [pc, #184]	; (400f48 <xTaskGenericCreate+0x1b0>)
  400e90:	681b      	ldr	r3, [r3, #0]
  400e92:	b933      	cbnz	r3, 400ea2 <xTaskGenericCreate+0x10a>
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
  400e94:	4b24      	ldr	r3, [pc, #144]	; (400f28 <xTaskGenericCreate+0x190>)
  400e96:	681b      	ldr	r3, [r3, #0]
  400e98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  400e9a:	459a      	cmp	sl, r3
					{
						pxCurrentTCB = pxNewTCB;
  400e9c:	bf24      	itt	cs
  400e9e:	4b22      	ldrcs	r3, [pc, #136]	; (400f28 <xTaskGenericCreate+0x190>)
  400ea0:	601c      	strcs	r4, [r3, #0]
				}
			}

			/* Remember the top priority to make context switching faster.  Use
			the priority in pxNewTCB as this has been capped to a valid value. */
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
  400ea2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  400ea4:	4b29      	ldr	r3, [pc, #164]	; (400f4c <xTaskGenericCreate+0x1b4>)
  400ea6:	681b      	ldr	r3, [r3, #0]
  400ea8:	4298      	cmp	r0, r3
			{
				uxTopUsedPriority = pxNewTCB->uxPriority;
  400eaa:	bf84      	itt	hi
  400eac:	4b27      	ldrhi	r3, [pc, #156]	; (400f4c <xTaskGenericCreate+0x1b4>)
  400eae:	6018      	strhi	r0, [r3, #0]
			}

			#if ( configUSE_TRACE_FACILITY == 1 )
			{
				/* Add a counter into the TCB for tracing only. */
				pxNewTCB->uxTCBNumber = uxTaskNumber;
  400eb0:	4a27      	ldr	r2, [pc, #156]	; (400f50 <xTaskGenericCreate+0x1b8>)
  400eb2:	6813      	ldr	r3, [r2, #0]
  400eb4:	6463      	str	r3, [r4, #68]	; 0x44
			}
			#endif
			uxTaskNumber++;
  400eb6:	3301      	adds	r3, #1
  400eb8:	6013      	str	r3, [r2, #0]

			prvAddTaskToReadyQueue( pxNewTCB );
  400eba:	4b26      	ldr	r3, [pc, #152]	; (400f54 <xTaskGenericCreate+0x1bc>)
  400ebc:	681b      	ldr	r3, [r3, #0]
  400ebe:	4298      	cmp	r0, r3
  400ec0:	bf84      	itt	hi
  400ec2:	4b24      	ldrhi	r3, [pc, #144]	; (400f54 <xTaskGenericCreate+0x1bc>)
  400ec4:	6018      	strhi	r0, [r3, #0]
  400ec6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  400eca:	4639      	mov	r1, r7
  400ecc:	4b17      	ldr	r3, [pc, #92]	; (400f2c <xTaskGenericCreate+0x194>)
  400ece:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  400ed2:	4b21      	ldr	r3, [pc, #132]	; (400f58 <xTaskGenericCreate+0x1c0>)
  400ed4:	4798      	blx	r3

			xReturn = pdPASS;
			traceTASK_CREATE( pxNewTCB );
		}
		taskEXIT_CRITICAL();
  400ed6:	4b21      	ldr	r3, [pc, #132]	; (400f5c <xTaskGenericCreate+0x1c4>)
  400ed8:	4798      	blx	r3
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
	{
		if( xSchedulerRunning != pdFALSE )
  400eda:	4b1b      	ldr	r3, [pc, #108]	; (400f48 <xTaskGenericCreate+0x1b0>)
  400edc:	681b      	ldr	r3, [r3, #0]
  400ede:	b143      	cbz	r3, 400ef2 <xTaskGenericCreate+0x15a>
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
  400ee0:	4b11      	ldr	r3, [pc, #68]	; (400f28 <xTaskGenericCreate+0x190>)
  400ee2:	681b      	ldr	r3, [r3, #0]
  400ee4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  400ee6:	459a      	cmp	sl, r3
  400ee8:	d905      	bls.n	400ef6 <xTaskGenericCreate+0x15e>
			{
				portYIELD_WITHIN_API();
  400eea:	4b1d      	ldr	r3, [pc, #116]	; (400f60 <xTaskGenericCreate+0x1c8>)
  400eec:	4798      	blx	r3
  400eee:	2001      	movs	r0, #1
  400ef0:	e008      	b.n	400f04 <xTaskGenericCreate+0x16c>
  400ef2:	2001      	movs	r0, #1
  400ef4:	e006      	b.n	400f04 <xTaskGenericCreate+0x16c>
  400ef6:	2001      	movs	r0, #1
  400ef8:	e004      	b.n	400f04 <xTaskGenericCreate+0x16c>
	if( pxNewTCB != NULL )
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
  400efa:	6307      	str	r7, [r0, #48]	; 0x30
  400efc:	4638      	mov	r0, r7
  400efe:	e76a      	b.n	400dd6 <xTaskGenericCreate+0x3e>
		}
		taskEXIT_CRITICAL();
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
  400f00:	f04f 30ff 	mov.w	r0, #4294967295
			}
		}
	}

	return xReturn;
}
  400f04:	b003      	add	sp, #12
  400f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400f0a:	bf00      	nop
  400f0c:	00400c51 	.word	0x00400c51
  400f10:	00400c75 	.word	0x00400c75
  400f14:	00401e69 	.word	0x00401e69
  400f18:	004022dd 	.word	0x004022dd
  400f1c:	00400b49 	.word	0x00400b49
  400f20:	00400be5 	.word	0x00400be5
  400f24:	200009b8 	.word	0x200009b8
  400f28:	200009e0 	.word	0x200009e0
  400f2c:	20000948 	.word	0x20000948
  400f30:	00400aad 	.word	0x00400aad
  400f34:	20000a40 	.word	0x20000a40
  400f38:	200009bc 	.word	0x200009bc
  400f3c:	20000a18 	.word	0x20000a18
  400f40:	200009b4 	.word	0x200009b4
  400f44:	200009ac 	.word	0x200009ac
  400f48:	200009d0 	.word	0x200009d0
  400f4c:	20000a64 	.word	0x20000a64
  400f50:	200009d8 	.word	0x200009d8
  400f54:	20000940 	.word	0x20000940
  400f58:	00400acd 	.word	0x00400acd
  400f5c:	00400bfd 	.word	0x00400bfd
  400f60:	00400bd5 	.word	0x00400bd5
  400f64:	00400ac5 	.word	0x00400ac5
  400f68:	20000a2c 	.word	0x20000a2c

00400f6c <vTaskStartScheduler>:
 * PUBLIC SCHEDULER CONTROL documented in task.h
 *----------------------------------------------------------*/


void vTaskStartScheduler( void )
{
  400f6c:	b510      	push	{r4, lr}
  400f6e:	b084      	sub	sp, #16
portBASE_TYPE xReturn;

	/* Add the idle task at the lowest priority. */
	xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), ( xTaskHandle * ) NULL );
  400f70:	2300      	movs	r3, #0
  400f72:	9303      	str	r3, [sp, #12]
  400f74:	9302      	str	r3, [sp, #8]
  400f76:	9301      	str	r3, [sp, #4]
  400f78:	9300      	str	r3, [sp, #0]
  400f7a:	2246      	movs	r2, #70	; 0x46
  400f7c:	4909      	ldr	r1, [pc, #36]	; (400fa4 <vTaskStartScheduler+0x38>)
  400f7e:	480a      	ldr	r0, [pc, #40]	; (400fa8 <vTaskStartScheduler+0x3c>)
  400f80:	4c0a      	ldr	r4, [pc, #40]	; (400fac <vTaskStartScheduler+0x40>)
  400f82:	47a0      	blx	r4
			xReturn = xTimerCreateTimerTask();
		}
	}
	#endif

	if( xReturn == pdPASS )
  400f84:	2801      	cmp	r0, #1
  400f86:	d10b      	bne.n	400fa0 <vTaskStartScheduler+0x34>
		so interrupts will automatically get re-enabled when the first task
		starts to run.

		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
		portDISABLE_INTERRUPTS();
  400f88:	f04f 0050 	mov.w	r0, #80	; 0x50
  400f8c:	f380 8811 	msr	BASEPRI, r0

		xSchedulerRunning = pdTRUE;
  400f90:	2201      	movs	r2, #1
  400f92:	4b07      	ldr	r3, [pc, #28]	; (400fb0 <vTaskStartScheduler+0x44>)
  400f94:	601a      	str	r2, [r3, #0]
		xTickCount = ( portTickType ) 0;
  400f96:	2200      	movs	r2, #0
  400f98:	4b06      	ldr	r3, [pc, #24]	; (400fb4 <vTaskStartScheduler+0x48>)
  400f9a:	601a      	str	r2, [r3, #0]
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() )
  400f9c:	4b06      	ldr	r3, [pc, #24]	; (400fb8 <vTaskStartScheduler+0x4c>)
  400f9e:	4798      	blx	r3
		}
	}

	/* This line will only be reached if the kernel could not be started. */
	configASSERT( xReturn );
}
  400fa0:	b004      	add	sp, #16
  400fa2:	bd10      	pop	{r4, pc}
  400fa4:	00408044 	.word	0x00408044
  400fa8:	00400cf1 	.word	0x00400cf1
  400fac:	00400d99 	.word	0x00400d99
  400fb0:	200009d0 	.word	0x200009d0
  400fb4:	20000944 	.word	0x20000944
  400fb8:	00400b95 	.word	0x00400b95

00400fbc <vTaskSuspendAll>:

void vTaskSuspendAll( void )
{
	/* A critical section is not required as the variable is of type
	portBASE_TYPE. */
	++uxSchedulerSuspended;
  400fbc:	4a02      	ldr	r2, [pc, #8]	; (400fc8 <vTaskSuspendAll+0xc>)
  400fbe:	6813      	ldr	r3, [r2, #0]
  400fc0:	3301      	adds	r3, #1
  400fc2:	6013      	str	r3, [r2, #0]
  400fc4:	4770      	bx	lr
  400fc6:	bf00      	nop
  400fc8:	20000a54 	.word	0x20000a54

00400fcc <uxTaskGetNumberOfTasks>:

unsigned portBASE_TYPE uxTaskGetNumberOfTasks( void )
{
	/* A critical section is not required because the variables are of type
	portBASE_TYPE. */
	return uxCurrentNumberOfTasks;
  400fcc:	4b01      	ldr	r3, [pc, #4]	; (400fd4 <uxTaskGetNumberOfTasks+0x8>)
  400fce:	6818      	ldr	r0, [r3, #0]
}
  400fd0:	4770      	bx	lr
  400fd2:	bf00      	nop
  400fd4:	200009b8 	.word	0x200009b8

00400fd8 <vTaskIncrementTick>:
 * documented in task.h
 *----------------------------------------------------------*/


void vTaskIncrementTick( void )
{
  400fd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
tskTCB * pxTCB;

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
  400fdc:	4b39      	ldr	r3, [pc, #228]	; (4010c4 <vTaskIncrementTick+0xec>)
  400fde:	681b      	ldr	r3, [r3, #0]
  400fe0:	2b00      	cmp	r3, #0
  400fe2:	d161      	bne.n	4010a8 <vTaskIncrementTick+0xd0>
	{
		++xTickCount;
  400fe4:	4b38      	ldr	r3, [pc, #224]	; (4010c8 <vTaskIncrementTick+0xf0>)
  400fe6:	681a      	ldr	r2, [r3, #0]
  400fe8:	3201      	adds	r2, #1
  400fea:	601a      	str	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0 )
  400fec:	681b      	ldr	r3, [r3, #0]
  400fee:	b9c3      	cbnz	r3, 401022 <vTaskIncrementTick+0x4a>
			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );

			pxTemp = pxDelayedTaskList;
  400ff0:	4b36      	ldr	r3, [pc, #216]	; (4010cc <vTaskIncrementTick+0xf4>)
  400ff2:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
  400ff4:	4a36      	ldr	r2, [pc, #216]	; (4010d0 <vTaskIncrementTick+0xf8>)
  400ff6:	6810      	ldr	r0, [r2, #0]
  400ff8:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
  400ffa:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
  400ffc:	4935      	ldr	r1, [pc, #212]	; (4010d4 <vTaskIncrementTick+0xfc>)
  400ffe:	680a      	ldr	r2, [r1, #0]
  401000:	3201      	adds	r2, #1
  401002:	600a      	str	r2, [r1, #0]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  401004:	681b      	ldr	r3, [r3, #0]
  401006:	681b      	ldr	r3, [r3, #0]
  401008:	b923      	cbnz	r3, 401014 <vTaskIncrementTick+0x3c>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
  40100a:	f04f 32ff 	mov.w	r2, #4294967295
  40100e:	4b32      	ldr	r3, [pc, #200]	; (4010d8 <vTaskIncrementTick+0x100>)
  401010:	601a      	str	r2, [r3, #0]
  401012:	e006      	b.n	401022 <vTaskIncrementTick+0x4a>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  401014:	4b2d      	ldr	r3, [pc, #180]	; (4010cc <vTaskIncrementTick+0xf4>)
  401016:	681b      	ldr	r3, [r3, #0]
  401018:	68db      	ldr	r3, [r3, #12]
  40101a:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
  40101c:	685a      	ldr	r2, [r3, #4]
  40101e:	4b2e      	ldr	r3, [pc, #184]	; (4010d8 <vTaskIncrementTick+0x100>)
  401020:	601a      	str	r2, [r3, #0]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
  401022:	4b29      	ldr	r3, [pc, #164]	; (4010c8 <vTaskIncrementTick+0xf0>)
  401024:	681a      	ldr	r2, [r3, #0]
  401026:	4b2c      	ldr	r3, [pc, #176]	; (4010d8 <vTaskIncrementTick+0x100>)
  401028:	681b      	ldr	r3, [r3, #0]
  40102a:	429a      	cmp	r2, r3
  40102c:	d342      	bcc.n	4010b4 <vTaskIncrementTick+0xdc>
  40102e:	4b27      	ldr	r3, [pc, #156]	; (4010cc <vTaskIncrementTick+0xf4>)
  401030:	681b      	ldr	r3, [r3, #0]
  401032:	681b      	ldr	r3, [r3, #0]
  401034:	b16b      	cbz	r3, 401052 <vTaskIncrementTick+0x7a>
  401036:	4b25      	ldr	r3, [pc, #148]	; (4010cc <vTaskIncrementTick+0xf4>)
  401038:	681b      	ldr	r3, [r3, #0]
  40103a:	68db      	ldr	r3, [r3, #12]
  40103c:	68dc      	ldr	r4, [r3, #12]
  40103e:	6863      	ldr	r3, [r4, #4]
  401040:	4a21      	ldr	r2, [pc, #132]	; (4010c8 <vTaskIncrementTick+0xf0>)
  401042:	6812      	ldr	r2, [r2, #0]
  401044:	4293      	cmp	r3, r2
  401046:	d812      	bhi.n	40106e <vTaskIncrementTick+0x96>
  401048:	4e24      	ldr	r6, [pc, #144]	; (4010dc <vTaskIncrementTick+0x104>)
  40104a:	4f25      	ldr	r7, [pc, #148]	; (4010e0 <vTaskIncrementTick+0x108>)
  40104c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 4010f0 <vTaskIncrementTick+0x118>
  401050:	e010      	b.n	401074 <vTaskIncrementTick+0x9c>
  401052:	f04f 32ff 	mov.w	r2, #4294967295
  401056:	4b20      	ldr	r3, [pc, #128]	; (4010d8 <vTaskIncrementTick+0x100>)
  401058:	601a      	str	r2, [r3, #0]
  40105a:	e02b      	b.n	4010b4 <vTaskIncrementTick+0xdc>
  40105c:	4b1b      	ldr	r3, [pc, #108]	; (4010cc <vTaskIncrementTick+0xf4>)
  40105e:	681b      	ldr	r3, [r3, #0]
  401060:	68db      	ldr	r3, [r3, #12]
  401062:	68dc      	ldr	r4, [r3, #12]
  401064:	6863      	ldr	r3, [r4, #4]
  401066:	4a18      	ldr	r2, [pc, #96]	; (4010c8 <vTaskIncrementTick+0xf0>)
  401068:	6812      	ldr	r2, [r2, #0]
  40106a:	4293      	cmp	r3, r2
  40106c:	d902      	bls.n	401074 <vTaskIncrementTick+0x9c>
  40106e:	4a1a      	ldr	r2, [pc, #104]	; (4010d8 <vTaskIncrementTick+0x100>)
  401070:	6013      	str	r3, [r2, #0]
  401072:	e01f      	b.n	4010b4 <vTaskIncrementTick+0xdc>
  401074:	1d25      	adds	r5, r4, #4
  401076:	4628      	mov	r0, r5
  401078:	47b0      	blx	r6
  40107a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  40107c:	b113      	cbz	r3, 401084 <vTaskIncrementTick+0xac>
  40107e:	f104 0018 	add.w	r0, r4, #24
  401082:	47b0      	blx	r6
  401084:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401086:	683b      	ldr	r3, [r7, #0]
  401088:	4298      	cmp	r0, r3
  40108a:	bf88      	it	hi
  40108c:	6038      	strhi	r0, [r7, #0]
  40108e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401092:	4629      	mov	r1, r5
  401094:	eb08 0080 	add.w	r0, r8, r0, lsl #2
  401098:	4b12      	ldr	r3, [pc, #72]	; (4010e4 <vTaskIncrementTick+0x10c>)
  40109a:	4798      	blx	r3
  40109c:	4b0b      	ldr	r3, [pc, #44]	; (4010cc <vTaskIncrementTick+0xf4>)
  40109e:	681b      	ldr	r3, [r3, #0]
  4010a0:	681b      	ldr	r3, [r3, #0]
  4010a2:	2b00      	cmp	r3, #0
  4010a4:	d1da      	bne.n	40105c <vTaskIncrementTick+0x84>
  4010a6:	e7d4      	b.n	401052 <vTaskIncrementTick+0x7a>
	}
	else
	{
		++uxMissedTicks;
  4010a8:	4a0f      	ldr	r2, [pc, #60]	; (4010e8 <vTaskIncrementTick+0x110>)
  4010aa:	6813      	ldr	r3, [r2, #0]
  4010ac:	3301      	adds	r3, #1
  4010ae:	6013      	str	r3, [r2, #0]

		/* The tick hook gets called at regular intervals, even if the
		scheduler is locked. */
		#if ( configUSE_TICK_HOOK == 1 )
		{
			vApplicationTickHook();
  4010b0:	4b0e      	ldr	r3, [pc, #56]	; (4010ec <vTaskIncrementTick+0x114>)
  4010b2:	4798      	blx	r3

	#if ( configUSE_TICK_HOOK == 1 )
	{
		/* Guard against the tick hook being called when the missed tick
		count is being unwound (when the scheduler is being unlocked. */
		if( uxMissedTicks == ( unsigned portBASE_TYPE ) 0U )
  4010b4:	4b0c      	ldr	r3, [pc, #48]	; (4010e8 <vTaskIncrementTick+0x110>)
  4010b6:	681b      	ldr	r3, [r3, #0]
  4010b8:	b90b      	cbnz	r3, 4010be <vTaskIncrementTick+0xe6>
		{
			vApplicationTickHook();
  4010ba:	4b0c      	ldr	r3, [pc, #48]	; (4010ec <vTaskIncrementTick+0x114>)
  4010bc:	4798      	blx	r3
  4010be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4010c2:	bf00      	nop
  4010c4:	20000a54 	.word	0x20000a54
  4010c8:	20000944 	.word	0x20000944
  4010cc:	200009b4 	.word	0x200009b4
  4010d0:	200009ac 	.word	0x200009ac
  4010d4:	20000a60 	.word	0x20000a60
  4010d8:	2000000c 	.word	0x2000000c
  4010dc:	00400b25 	.word	0x00400b25
  4010e0:	20000940 	.word	0x20000940
  4010e4:	00400acd 	.word	0x00400acd
  4010e8:	20000a58 	.word	0x20000a58
  4010ec:	004015ad 	.word	0x004015ad
  4010f0:	20000948 	.word	0x20000948

004010f4 <xTaskResumeAll>:
	++uxSchedulerSuspended;
}
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
  4010f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
  4010f8:	4b2c      	ldr	r3, [pc, #176]	; (4011ac <xTaskResumeAll+0xb8>)
  4010fa:	4798      	blx	r3
	{
		--uxSchedulerSuspended;
  4010fc:	4b2c      	ldr	r3, [pc, #176]	; (4011b0 <xTaskResumeAll+0xbc>)
  4010fe:	681a      	ldr	r2, [r3, #0]
  401100:	3a01      	subs	r2, #1
  401102:	601a      	str	r2, [r3, #0]

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
  401104:	681b      	ldr	r3, [r3, #0]
  401106:	2b00      	cmp	r3, #0
  401108:	d148      	bne.n	40119c <xTaskResumeAll+0xa8>
		{
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0 )
  40110a:	4b2a      	ldr	r3, [pc, #168]	; (4011b4 <xTaskResumeAll+0xc0>)
  40110c:	681b      	ldr	r3, [r3, #0]
  40110e:	bb03      	cbnz	r3, 401152 <xTaskResumeAll+0x5e>
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
  401110:	2400      	movs	r4, #0
  401112:	e046      	b.n	4011a2 <xTaskResumeAll+0xae>

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
  401114:	68fb      	ldr	r3, [r7, #12]
  401116:	68dc      	ldr	r4, [r3, #12]
					vListRemove( &( pxTCB->xEventListItem ) );
  401118:	f104 0018 	add.w	r0, r4, #24
  40111c:	47c0      	blx	r8
					vListRemove( &( pxTCB->xGenericListItem ) );
  40111e:	1d25      	adds	r5, r4, #4
  401120:	4628      	mov	r0, r5
  401122:	47c0      	blx	r8
					prvAddTaskToReadyQueue( pxTCB );
  401124:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401126:	f8d9 3000 	ldr.w	r3, [r9]
  40112a:	4298      	cmp	r0, r3
  40112c:	bf88      	it	hi
  40112e:	f8c9 0000 	strhi.w	r0, [r9]
  401132:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401136:	4629      	mov	r1, r5
  401138:	4b1f      	ldr	r3, [pc, #124]	; (4011b8 <xTaskResumeAll+0xc4>)
  40113a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  40113e:	4b1f      	ldr	r3, [pc, #124]	; (4011bc <xTaskResumeAll+0xc8>)
  401140:	4798      	blx	r3

					/* If we have moved a task that has a priority higher than
					the current task then we should yield. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  401142:	4b1f      	ldr	r3, [pc, #124]	; (4011c0 <xTaskResumeAll+0xcc>)
  401144:	681b      	ldr	r3, [r3, #0]
  401146:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  401148:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					{
						xYieldRequired = pdTRUE;
  40114a:	429a      	cmp	r2, r3
  40114c:	bf28      	it	cs
  40114e:	2601      	movcs	r6, #1
  401150:	e005      	b.n	40115e <xTaskResumeAll+0x6a>
  401152:	2600      	movs	r6, #0
			{
				portBASE_TYPE xYieldRequired = pdFALSE;

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
  401154:	4f1b      	ldr	r7, [pc, #108]	; (4011c4 <xTaskResumeAll+0xd0>)
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
					vListRemove( &( pxTCB->xEventListItem ) );
  401156:	f8df 8084 	ldr.w	r8, [pc, #132]	; 4011dc <xTaskResumeAll+0xe8>
					vListRemove( &( pxTCB->xGenericListItem ) );
					prvAddTaskToReadyQueue( pxTCB );
  40115a:	f8df 9084 	ldr.w	r9, [pc, #132]	; 4011e0 <xTaskResumeAll+0xec>
			{
				portBASE_TYPE xYieldRequired = pdFALSE;

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
  40115e:	683b      	ldr	r3, [r7, #0]
  401160:	2b00      	cmp	r3, #0
  401162:	d1d7      	bne.n	401114 <xTaskResumeAll+0x20>
				}

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
  401164:	4b18      	ldr	r3, [pc, #96]	; (4011c8 <xTaskResumeAll+0xd4>)
  401166:	681b      	ldr	r3, [r3, #0]
  401168:	b15b      	cbz	r3, 401182 <xTaskResumeAll+0x8e>
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
  40116a:	4b17      	ldr	r3, [pc, #92]	; (4011c8 <xTaskResumeAll+0xd4>)
  40116c:	681b      	ldr	r3, [r3, #0]
  40116e:	b143      	cbz	r3, 401182 <xTaskResumeAll+0x8e>
					{
						vTaskIncrementTick();
  401170:	4d16      	ldr	r5, [pc, #88]	; (4011cc <xTaskResumeAll+0xd8>)
						--uxMissedTicks;
  401172:	4c15      	ldr	r4, [pc, #84]	; (4011c8 <xTaskResumeAll+0xd4>)
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
					{
						vTaskIncrementTick();
  401174:	47a8      	blx	r5
						--uxMissedTicks;
  401176:	6823      	ldr	r3, [r4, #0]
  401178:	3b01      	subs	r3, #1
  40117a:	6023      	str	r3, [r4, #0]
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0 )
  40117c:	6823      	ldr	r3, [r4, #0]
  40117e:	2b00      	cmp	r3, #0
  401180:	d1f8      	bne.n	401174 <xTaskResumeAll+0x80>
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
  401182:	2e01      	cmp	r6, #1
  401184:	d003      	beq.n	40118e <xTaskResumeAll+0x9a>
  401186:	4b12      	ldr	r3, [pc, #72]	; (4011d0 <xTaskResumeAll+0xdc>)
  401188:	681b      	ldr	r3, [r3, #0]
  40118a:	2b01      	cmp	r3, #1
  40118c:	d108      	bne.n	4011a0 <xTaskResumeAll+0xac>
				{
					xAlreadyYielded = pdTRUE;
					xMissedYield = pdFALSE;
  40118e:	2200      	movs	r2, #0
  401190:	4b0f      	ldr	r3, [pc, #60]	; (4011d0 <xTaskResumeAll+0xdc>)
  401192:	601a      	str	r2, [r3, #0]
					portYIELD_WITHIN_API();
  401194:	4b0f      	ldr	r3, [pc, #60]	; (4011d4 <xTaskResumeAll+0xe0>)
  401196:	4798      	blx	r3
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
				{
					xAlreadyYielded = pdTRUE;
  401198:	2401      	movs	r4, #1
  40119a:	e002      	b.n	4011a2 <xTaskResumeAll+0xae>
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
  40119c:	2400      	movs	r4, #0
  40119e:	e000      	b.n	4011a2 <xTaskResumeAll+0xae>
  4011a0:	2400      	movs	r4, #0
					portYIELD_WITHIN_API();
				}
			}
		}
	}
	taskEXIT_CRITICAL();
  4011a2:	4b0d      	ldr	r3, [pc, #52]	; (4011d8 <xTaskResumeAll+0xe4>)
  4011a4:	4798      	blx	r3

	return xAlreadyYielded;
}
  4011a6:	4620      	mov	r0, r4
  4011a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011ac:	00400be5 	.word	0x00400be5
  4011b0:	20000a54 	.word	0x20000a54
  4011b4:	200009b8 	.word	0x200009b8
  4011b8:	20000948 	.word	0x20000948
  4011bc:	00400acd 	.word	0x00400acd
  4011c0:	200009e0 	.word	0x200009e0
  4011c4:	200009bc 	.word	0x200009bc
  4011c8:	20000a58 	.word	0x20000a58
  4011cc:	00400fd9 	.word	0x00400fd9
  4011d0:	200009d4 	.word	0x200009d4
  4011d4:	00400bd5 	.word	0x00400bd5
  4011d8:	00400bfd 	.word	0x00400bfd
  4011dc:	00400b25 	.word	0x00400b25
  4011e0:	20000940 	.word	0x20000940

004011e4 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
  4011e4:	b510      	push	{r4, lr}
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0 )
  4011e6:	b180      	cbz	r0, 40120a <vTaskDelay+0x26>
  4011e8:	4604      	mov	r4, r0
		{
			vTaskSuspendAll();
  4011ea:	4b09      	ldr	r3, [pc, #36]	; (401210 <vTaskDelay+0x2c>)
  4011ec:	4798      	blx	r3
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
  4011ee:	4b09      	ldr	r3, [pc, #36]	; (401214 <vTaskDelay+0x30>)
  4011f0:	681b      	ldr	r3, [r3, #0]
  4011f2:	441c      	add	r4, r3

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
  4011f4:	4b08      	ldr	r3, [pc, #32]	; (401218 <vTaskDelay+0x34>)
  4011f6:	6818      	ldr	r0, [r3, #0]
  4011f8:	3004      	adds	r0, #4
  4011fa:	4b08      	ldr	r3, [pc, #32]	; (40121c <vTaskDelay+0x38>)
  4011fc:	4798      	blx	r3
				prvAddCurrentTaskToDelayedList( xTimeToWake );
  4011fe:	4620      	mov	r0, r4
  401200:	4b07      	ldr	r3, [pc, #28]	; (401220 <vTaskDelay+0x3c>)
  401202:	4798      	blx	r3
			}
			xAlreadyYielded = xTaskResumeAll();
  401204:	4b07      	ldr	r3, [pc, #28]	; (401224 <vTaskDelay+0x40>)
  401206:	4798      	blx	r3
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( !xAlreadyYielded )
  401208:	b908      	cbnz	r0, 40120e <vTaskDelay+0x2a>
		{
			portYIELD_WITHIN_API();
  40120a:	4b07      	ldr	r3, [pc, #28]	; (401228 <vTaskDelay+0x44>)
  40120c:	4798      	blx	r3
  40120e:	bd10      	pop	{r4, pc}
  401210:	00400fbd 	.word	0x00400fbd
  401214:	20000944 	.word	0x20000944
  401218:	200009e0 	.word	0x200009e0
  40121c:	00400b25 	.word	0x00400b25
  401220:	00400c99 	.word	0x00400c99
  401224:	004010f5 	.word	0x004010f5
  401228:	00400bd5 	.word	0x00400bd5

0040122c <vTaskList>:
/*-----------------------------------------------------------*/

#if ( configUSE_TRACE_FACILITY == 1 )

	void vTaskList( signed char *pcWriteBuffer )
	{
  40122c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401230:	4606      	mov	r6, r0
	unsigned portBASE_TYPE uxQueue;

		/* This is a VERY costly function that should be used for debug only.
		It leaves interrupts disabled for a LONG time. */

		vTaskSuspendAll();
  401232:	4b24      	ldr	r3, [pc, #144]	; (4012c4 <vTaskList+0x98>)
  401234:	4798      	blx	r3
		{
			/* Run through all the lists that could potentially contain a TCB and
			report the task name, state and stack high water mark. */

			*pcWriteBuffer = ( signed char ) 0x00;
  401236:	2300      	movs	r3, #0
  401238:	7033      	strb	r3, [r6, #0]
			strcat( ( char * ) pcWriteBuffer, ( const char * ) "\r\n" );
  40123a:	4630      	mov	r0, r6
  40123c:	4b22      	ldr	r3, [pc, #136]	; (4012c8 <vTaskList+0x9c>)
  40123e:	4798      	blx	r3
  401240:	1832      	adds	r2, r6, r0
  401242:	4b22      	ldr	r3, [pc, #136]	; (4012cc <vTaskList+0xa0>)
  401244:	8819      	ldrh	r1, [r3, #0]
  401246:	789b      	ldrb	r3, [r3, #2]
  401248:	5231      	strh	r1, [r6, r0]
  40124a:	7093      	strb	r3, [r2, #2]

			uxQueue = uxTopUsedPriority + ( unsigned portBASE_TYPE ) 1U;
  40124c:	4b20      	ldr	r3, [pc, #128]	; (4012d0 <vTaskList+0xa4>)
  40124e:	681c      	ldr	r4, [r3, #0]
  401250:	3401      	adds	r4, #1
  401252:	eb04 0584 	add.w	r5, r4, r4, lsl #2
  401256:	4b1f      	ldr	r3, [pc, #124]	; (4012d4 <vTaskList+0xa8>)
  401258:	eb03 0585 	add.w	r5, r3, r5, lsl #2
  40125c:	3d14      	subs	r5, #20

			do
			{
				uxQueue--;

				if( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) == pdFALSE )
  40125e:	461f      	mov	r7, r3
				{
					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tskREADY_CHAR );
  401260:	f04f 0952 	mov.w	r9, #82	; 0x52
  401264:	f8df 8074 	ldr.w	r8, [pc, #116]	; 4012dc <vTaskList+0xb0>

			uxQueue = uxTopUsedPriority + ( unsigned portBASE_TYPE ) 1U;

			do
			{
				uxQueue--;
  401268:	3c01      	subs	r4, #1

				if( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxQueue ] ) ) == pdFALSE )
  40126a:	eb04 0384 	add.w	r3, r4, r4, lsl #2
  40126e:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
  401272:	b11b      	cbz	r3, 40127c <vTaskList+0x50>
				{
					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &( pxReadyTasksLists[ uxQueue ] ), tskREADY_CHAR );
  401274:	464a      	mov	r2, r9
  401276:	4629      	mov	r1, r5
  401278:	4630      	mov	r0, r6
  40127a:	47c0      	blx	r8
  40127c:	3d14      	subs	r5, #20
				}
			}while( uxQueue > ( unsigned short ) tskIDLE_PRIORITY );
  40127e:	2c00      	cmp	r4, #0
  401280:	d1f2      	bne.n	401268 <vTaskList+0x3c>

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) == pdFALSE )
  401282:	4b15      	ldr	r3, [pc, #84]	; (4012d8 <vTaskList+0xac>)
  401284:	681b      	ldr	r3, [r3, #0]
  401286:	681b      	ldr	r3, [r3, #0]
  401288:	b12b      	cbz	r3, 401296 <vTaskList+0x6a>
			{
				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxDelayedTaskList, tskBLOCKED_CHAR );
  40128a:	4b13      	ldr	r3, [pc, #76]	; (4012d8 <vTaskList+0xac>)
  40128c:	6819      	ldr	r1, [r3, #0]
  40128e:	2242      	movs	r2, #66	; 0x42
  401290:	4630      	mov	r0, r6
  401292:	4b12      	ldr	r3, [pc, #72]	; (4012dc <vTaskList+0xb0>)
  401294:	4798      	blx	r3
			}

			if( listLIST_IS_EMPTY( pxOverflowDelayedTaskList ) == pdFALSE )
  401296:	4b12      	ldr	r3, [pc, #72]	; (4012e0 <vTaskList+0xb4>)
  401298:	681b      	ldr	r3, [r3, #0]
  40129a:	681b      	ldr	r3, [r3, #0]
  40129c:	b12b      	cbz	r3, 4012aa <vTaskList+0x7e>
			{
				prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) pxOverflowDelayedTaskList, tskBLOCKED_CHAR );
  40129e:	4b10      	ldr	r3, [pc, #64]	; (4012e0 <vTaskList+0xb4>)
  4012a0:	6819      	ldr	r1, [r3, #0]
  4012a2:	2242      	movs	r2, #66	; 0x42
  4012a4:	4630      	mov	r0, r6
  4012a6:	4b0d      	ldr	r3, [pc, #52]	; (4012dc <vTaskList+0xb0>)
  4012a8:	4798      	blx	r3
			}
			#endif

			#if ( INCLUDE_vTaskSuspend == 1 )
			{
				if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
  4012aa:	4b0e      	ldr	r3, [pc, #56]	; (4012e4 <vTaskList+0xb8>)
  4012ac:	681b      	ldr	r3, [r3, #0]
  4012ae:	b123      	cbz	r3, 4012ba <vTaskList+0x8e>
				{
					prvListTaskWithinSingleList( pcWriteBuffer, ( xList * ) &xSuspendedTaskList, tskSUSPENDED_CHAR );
  4012b0:	2253      	movs	r2, #83	; 0x53
  4012b2:	490c      	ldr	r1, [pc, #48]	; (4012e4 <vTaskList+0xb8>)
  4012b4:	4630      	mov	r0, r6
  4012b6:	4b09      	ldr	r3, [pc, #36]	; (4012dc <vTaskList+0xb0>)
  4012b8:	4798      	blx	r3
				}
			}
			#endif
		}
		xTaskResumeAll();
  4012ba:	4b0b      	ldr	r3, [pc, #44]	; (4012e8 <vTaskList+0xbc>)
  4012bc:	4798      	blx	r3
  4012be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4012c2:	bf00      	nop
  4012c4:	00400fbd 	.word	0x00400fbd
  4012c8:	00402201 	.word	0x00402201
  4012cc:	00408084 	.word	0x00408084
  4012d0:	20000a64 	.word	0x20000a64
  4012d4:	20000948 	.word	0x20000948
  4012d8:	200009b4 	.word	0x200009b4
  4012dc:	00400d05 	.word	0x00400d05
  4012e0:	200009ac 	.word	0x200009ac
  4012e4:	20000a18 	.word	0x20000a18
  4012e8:	004010f5 	.word	0x004010f5

004012ec <vTaskSwitchContext>:
#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
  4012ec:	4b3e      	ldr	r3, [pc, #248]	; (4013e8 <vTaskSwitchContext+0xfc>)
  4012ee:	681b      	ldr	r3, [r3, #0]
  4012f0:	b11b      	cbz	r3, 4012fa <vTaskSwitchContext+0xe>
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
  4012f2:	2201      	movs	r2, #1
  4012f4:	4b3d      	ldr	r3, [pc, #244]	; (4013ec <vTaskSwitchContext+0x100>)
  4012f6:	601a      	str	r2, [r3, #0]
  4012f8:	4770      	bx	lr

#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
  4012fa:	b510      	push	{r4, lr}
				pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
				ulTaskSwitchedInTime = ulTempCounter;
		}
		#endif

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
  4012fc:	4b3c      	ldr	r3, [pc, #240]	; (4013f0 <vTaskSwitchContext+0x104>)
  4012fe:	681a      	ldr	r2, [r3, #0]
  401300:	681b      	ldr	r3, [r3, #0]
  401302:	6812      	ldr	r2, [r2, #0]
  401304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401306:	429a      	cmp	r2, r3
  401308:	d805      	bhi.n	401316 <vTaskSwitchContext+0x2a>
  40130a:	4b39      	ldr	r3, [pc, #228]	; (4013f0 <vTaskSwitchContext+0x104>)
  40130c:	6818      	ldr	r0, [r3, #0]
  40130e:	6819      	ldr	r1, [r3, #0]
  401310:	3134      	adds	r1, #52	; 0x34
  401312:	4b38      	ldr	r3, [pc, #224]	; (4013f4 <vTaskSwitchContext+0x108>)
  401314:	4798      	blx	r3
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
  401316:	4b36      	ldr	r3, [pc, #216]	; (4013f0 <vTaskSwitchContext+0x104>)
  401318:	681b      	ldr	r3, [r3, #0]
  40131a:	2214      	movs	r2, #20
  40131c:	4936      	ldr	r1, [pc, #216]	; (4013f8 <vTaskSwitchContext+0x10c>)
  40131e:	6b18      	ldr	r0, [r3, #48]	; 0x30
  401320:	4b36      	ldr	r3, [pc, #216]	; (4013fc <vTaskSwitchContext+0x110>)
  401322:	4798      	blx	r3
  401324:	b128      	cbz	r0, 401332 <vTaskSwitchContext+0x46>
  401326:	4b32      	ldr	r3, [pc, #200]	; (4013f0 <vTaskSwitchContext+0x104>)
  401328:	6818      	ldr	r0, [r3, #0]
  40132a:	6819      	ldr	r1, [r3, #0]
  40132c:	3134      	adds	r1, #52	; 0x34
  40132e:	4b31      	ldr	r3, [pc, #196]	; (4013f4 <vTaskSwitchContext+0x108>)
  401330:	4798      	blx	r3

		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
  401332:	4b33      	ldr	r3, [pc, #204]	; (401400 <vTaskSwitchContext+0x114>)
  401334:	681b      	ldr	r3, [r3, #0]
  401336:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40133a:	009b      	lsls	r3, r3, #2
  40133c:	4a31      	ldr	r2, [pc, #196]	; (401404 <vTaskSwitchContext+0x118>)
  40133e:	58d3      	ldr	r3, [r2, r3]
  401340:	b95b      	cbnz	r3, 40135a <vTaskSwitchContext+0x6e>
		{
			configASSERT( uxTopReadyPriority );
			--uxTopReadyPriority;
  401342:	4a2f      	ldr	r2, [pc, #188]	; (401400 <vTaskSwitchContext+0x114>)

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
  401344:	492f      	ldr	r1, [pc, #188]	; (401404 <vTaskSwitchContext+0x118>)
		{
			configASSERT( uxTopReadyPriority );
			--uxTopReadyPriority;
  401346:	6813      	ldr	r3, [r2, #0]
  401348:	3b01      	subs	r3, #1
  40134a:	6013      	str	r3, [r2, #0]

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
  40134c:	6813      	ldr	r3, [r2, #0]
  40134e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401352:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
  401356:	2b00      	cmp	r3, #0
  401358:	d0f5      	beq.n	401346 <vTaskSwitchContext+0x5a>
			--uxTopReadyPriority;
		}

		/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
		same priority get an equal share of the processor time. */
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
  40135a:	4b29      	ldr	r3, [pc, #164]	; (401400 <vTaskSwitchContext+0x114>)
  40135c:	681b      	ldr	r3, [r3, #0]
  40135e:	4a29      	ldr	r2, [pc, #164]	; (401404 <vTaskSwitchContext+0x118>)
  401360:	0099      	lsls	r1, r3, #2
  401362:	18c8      	adds	r0, r1, r3
  401364:	eb02 0080 	add.w	r0, r2, r0, lsl #2
  401368:	6844      	ldr	r4, [r0, #4]
  40136a:	6864      	ldr	r4, [r4, #4]
  40136c:	6044      	str	r4, [r0, #4]
  40136e:	4602      	mov	r2, r0
  401370:	3208      	adds	r2, #8
  401372:	4294      	cmp	r4, r2
  401374:	d106      	bne.n	401384 <vTaskSwitchContext+0x98>
  401376:	6860      	ldr	r0, [r4, #4]
  401378:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40137c:	4921      	ldr	r1, [pc, #132]	; (401404 <vTaskSwitchContext+0x118>)
  40137e:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  401382:	6050      	str	r0, [r2, #4]
  401384:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401388:	4a1e      	ldr	r2, [pc, #120]	; (401404 <vTaskSwitchContext+0x118>)
  40138a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40138e:	685b      	ldr	r3, [r3, #4]
  401390:	68da      	ldr	r2, [r3, #12]
  401392:	4b17      	ldr	r3, [pc, #92]	; (4013f0 <vTaskSwitchContext+0x104>)
  401394:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();
		vWriteTraceToBuffer();
  401396:	4b1c      	ldr	r3, [pc, #112]	; (401408 <vTaskSwitchContext+0x11c>)
  401398:	681b      	ldr	r3, [r3, #0]
  40139a:	b31b      	cbz	r3, 4013e4 <vTaskSwitchContext+0xf8>
  40139c:	4b14      	ldr	r3, [pc, #80]	; (4013f0 <vTaskSwitchContext+0x104>)
  40139e:	681b      	ldr	r3, [r3, #0]
  4013a0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  4013a2:	4b1a      	ldr	r3, [pc, #104]	; (40140c <vTaskSwitchContext+0x120>)
  4013a4:	681b      	ldr	r3, [r3, #0]
  4013a6:	429a      	cmp	r2, r3
  4013a8:	d01c      	beq.n	4013e4 <vTaskSwitchContext+0xf8>
  4013aa:	4b19      	ldr	r3, [pc, #100]	; (401410 <vTaskSwitchContext+0x124>)
  4013ac:	681b      	ldr	r3, [r3, #0]
  4013ae:	3308      	adds	r3, #8
  4013b0:	4a18      	ldr	r2, [pc, #96]	; (401414 <vTaskSwitchContext+0x128>)
  4013b2:	6812      	ldr	r2, [r2, #0]
  4013b4:	429a      	cmp	r2, r3
  4013b6:	d912      	bls.n	4013de <vTaskSwitchContext+0xf2>
  4013b8:	4b0d      	ldr	r3, [pc, #52]	; (4013f0 <vTaskSwitchContext+0x104>)
  4013ba:	681b      	ldr	r3, [r3, #0]
  4013bc:	6c59      	ldr	r1, [r3, #68]	; 0x44
  4013be:	4b13      	ldr	r3, [pc, #76]	; (40140c <vTaskSwitchContext+0x120>)
  4013c0:	6019      	str	r1, [r3, #0]
  4013c2:	4b13      	ldr	r3, [pc, #76]	; (401410 <vTaskSwitchContext+0x124>)
  4013c4:	681a      	ldr	r2, [r3, #0]
  4013c6:	4814      	ldr	r0, [pc, #80]	; (401418 <vTaskSwitchContext+0x12c>)
  4013c8:	6800      	ldr	r0, [r0, #0]
  4013ca:	6010      	str	r0, [r2, #0]
  4013cc:	681a      	ldr	r2, [r3, #0]
  4013ce:	3204      	adds	r2, #4
  4013d0:	601a      	str	r2, [r3, #0]
  4013d2:	681a      	ldr	r2, [r3, #0]
  4013d4:	6011      	str	r1, [r2, #0]
  4013d6:	681a      	ldr	r2, [r3, #0]
  4013d8:	3204      	adds	r2, #4
  4013da:	601a      	str	r2, [r3, #0]
  4013dc:	bd10      	pop	{r4, pc}
  4013de:	2200      	movs	r2, #0
  4013e0:	4b09      	ldr	r3, [pc, #36]	; (401408 <vTaskSwitchContext+0x11c>)
  4013e2:	601a      	str	r2, [r3, #0]
  4013e4:	bd10      	pop	{r4, pc}
  4013e6:	bf00      	nop
  4013e8:	20000a54 	.word	0x20000a54
  4013ec:	200009d4 	.word	0x200009d4
  4013f0:	200009e0 	.word	0x200009e0
  4013f4:	00401591 	.word	0x00401591
  4013f8:	0040801c 	.word	0x0040801c
  4013fc:	00401cd1 	.word	0x00401cd1
  401400:	20000940 	.word	0x20000940
  401404:	20000948 	.word	0x20000948
  401408:	200009b0 	.word	0x200009b0
  40140c:	20000008 	.word	0x20000008
  401410:	200009dc 	.word	0x200009dc
  401414:	20000a5c 	.word	0x20000a5c
  401418:	20000944 	.word	0x20000944

0040141c <task_led>:

/**
 * \brief This task, when activated, make LED blink at a fixed rate
 */
static void task_led(void *pvParameters)
{
  40141c:	b508      	push	{r3, lr}
	UNUSED(pvParameters);
	for (;;) {

		LED_Toggle(LED0);
  40141e:	4e06      	ldr	r6, [pc, #24]	; (401438 <task_led+0x1c>)
		/* Output demo infomation. */
		printf("-- TASK LED OK --\n\r");
  401420:	4d06      	ldr	r5, [pc, #24]	; (40143c <task_led+0x20>)
  401422:	4c07      	ldr	r4, [pc, #28]	; (401440 <task_led+0x24>)
static void task_led(void *pvParameters)
{
	UNUSED(pvParameters);
	for (;;) {

		LED_Toggle(LED0);
  401424:	2013      	movs	r0, #19
  401426:	47b0      	blx	r6
		/* Output demo infomation. */
		printf("-- TASK LED OK --\n\r");
  401428:	4628      	mov	r0, r5
  40142a:	47a0      	blx	r4
		vTaskDelay(1000);
  40142c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  401430:	4b04      	ldr	r3, [pc, #16]	; (401444 <task_led+0x28>)
  401432:	4798      	blx	r3
  401434:	e7f6      	b.n	401424 <task_led+0x8>
  401436:	bf00      	nop
  401438:	00400371 	.word	0x00400371
  40143c:	0040804c 	.word	0x0040804c
  401440:	00401719 	.word	0x00401719
  401444:	004011e5 	.word	0x004011e5

00401448 <task_monitor>:
/**
 * \brief This task, when activated, send every ten seconds on debug UART
 * the whole report of free heap and total tasks status
 */
static void task_monitor(void *pvParameters)
{
  401448:	b580      	push	{r7, lr}
	static portCHAR szList[256];
	UNUSED(pvParameters);

	for (;;) {
		printf("--- task ## %u", (unsigned int)uxTaskGetNumberOfTasks());
  40144a:	4f09      	ldr	r7, [pc, #36]	; (401470 <task_monitor+0x28>)
  40144c:	4e09      	ldr	r6, [pc, #36]	; (401474 <task_monitor+0x2c>)
  40144e:	4d0a      	ldr	r5, [pc, #40]	; (401478 <task_monitor+0x30>)
  401450:	47b8      	blx	r7
  401452:	4601      	mov	r1, r0
  401454:	4630      	mov	r0, r6
  401456:	47a8      	blx	r5
		vTaskList((signed portCHAR *)szList);
  401458:	4c08      	ldr	r4, [pc, #32]	; (40147c <task_monitor+0x34>)
  40145a:	4620      	mov	r0, r4
  40145c:	4b08      	ldr	r3, [pc, #32]	; (401480 <task_monitor+0x38>)
  40145e:	4798      	blx	r3
		printf(szList);
  401460:	4620      	mov	r0, r4
  401462:	47a8      	blx	r5
		vTaskDelay(1000);
  401464:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  401468:	4b06      	ldr	r3, [pc, #24]	; (401484 <task_monitor+0x3c>)
  40146a:	4798      	blx	r3
  40146c:	e7f0      	b.n	401450 <task_monitor+0x8>
  40146e:	bf00      	nop
  401470:	00400fcd 	.word	0x00400fcd
  401474:	00408060 	.word	0x00408060
  401478:	00401719 	.word	0x00401719
  40147c:	20000a68 	.word	0x20000a68
  401480:	0040122d 	.word	0x0040122d
  401484:	004011e5 	.word	0x004011e5

00401488 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  401488:	b5f0      	push	{r4, r5, r6, r7, lr}
  40148a:	b083      	sub	sp, #12
  40148c:	4605      	mov	r5, r0
  40148e:	460c      	mov	r4, r1
	uint32_t val = 0;
  401490:	2300      	movs	r3, #0
  401492:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401494:	4b18      	ldr	r3, [pc, #96]	; (4014f8 <usart_serial_getchar+0x70>)
  401496:	4298      	cmp	r0, r3
  401498:	d107      	bne.n	4014aa <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  40149a:	461f      	mov	r7, r3
  40149c:	4e17      	ldr	r6, [pc, #92]	; (4014fc <usart_serial_getchar+0x74>)
  40149e:	4621      	mov	r1, r4
  4014a0:	4638      	mov	r0, r7
  4014a2:	47b0      	blx	r6
  4014a4:	2800      	cmp	r0, #0
  4014a6:	d1fa      	bne.n	40149e <usart_serial_getchar+0x16>
  4014a8:	e017      	b.n	4014da <usart_serial_getchar+0x52>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4014aa:	4b15      	ldr	r3, [pc, #84]	; (401500 <usart_serial_getchar+0x78>)
  4014ac:	4298      	cmp	r0, r3
  4014ae:	d107      	bne.n	4014c0 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  4014b0:	461e      	mov	r6, r3
  4014b2:	4d12      	ldr	r5, [pc, #72]	; (4014fc <usart_serial_getchar+0x74>)
  4014b4:	4621      	mov	r1, r4
  4014b6:	4630      	mov	r0, r6
  4014b8:	47a8      	blx	r5
  4014ba:	2800      	cmp	r0, #0
  4014bc:	d1fa      	bne.n	4014b4 <usart_serial_getchar+0x2c>
  4014be:	e018      	b.n	4014f2 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4014c0:	4b10      	ldr	r3, [pc, #64]	; (401504 <usart_serial_getchar+0x7c>)
  4014c2:	4298      	cmp	r0, r3
  4014c4:	d109      	bne.n	4014da <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
  4014c6:	461e      	mov	r6, r3
  4014c8:	4d0f      	ldr	r5, [pc, #60]	; (401508 <usart_serial_getchar+0x80>)
  4014ca:	a901      	add	r1, sp, #4
  4014cc:	4630      	mov	r0, r6
  4014ce:	47a8      	blx	r5
  4014d0:	2800      	cmp	r0, #0
  4014d2:	d1fa      	bne.n	4014ca <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
  4014d4:	9b01      	ldr	r3, [sp, #4]
  4014d6:	7023      	strb	r3, [r4, #0]
  4014d8:	e00b      	b.n	4014f2 <usart_serial_getchar+0x6a>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4014da:	4b0c      	ldr	r3, [pc, #48]	; (40150c <usart_serial_getchar+0x84>)
  4014dc:	429d      	cmp	r5, r3
  4014de:	d108      	bne.n	4014f2 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
  4014e0:	461e      	mov	r6, r3
  4014e2:	4d09      	ldr	r5, [pc, #36]	; (401508 <usart_serial_getchar+0x80>)
  4014e4:	a901      	add	r1, sp, #4
  4014e6:	4630      	mov	r0, r6
  4014e8:	47a8      	blx	r5
  4014ea:	2800      	cmp	r0, #0
  4014ec:	d1fa      	bne.n	4014e4 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
  4014ee:	9b01      	ldr	r3, [sp, #4]
  4014f0:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  4014f2:	b003      	add	sp, #12
  4014f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4014f6:	bf00      	nop
  4014f8:	400e0600 	.word	0x400e0600
  4014fc:	004007c1 	.word	0x004007c1
  401500:	400e0800 	.word	0x400e0800
  401504:	40024000 	.word	0x40024000
  401508:	004007e9 	.word	0x004007e9
  40150c:	40028000 	.word	0x40028000

00401510 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  401510:	b570      	push	{r4, r5, r6, lr}
  401512:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401514:	4b18      	ldr	r3, [pc, #96]	; (401578 <usart_serial_putchar+0x68>)
  401516:	4298      	cmp	r0, r3
  401518:	d108      	bne.n	40152c <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  40151a:	461e      	mov	r6, r3
  40151c:	4d17      	ldr	r5, [pc, #92]	; (40157c <usart_serial_putchar+0x6c>)
  40151e:	4621      	mov	r1, r4
  401520:	4630      	mov	r0, r6
  401522:	47a8      	blx	r5
  401524:	2800      	cmp	r0, #0
  401526:	d1fa      	bne.n	40151e <usart_serial_putchar+0xe>
		return 1;
  401528:	2001      	movs	r0, #1
  40152a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40152c:	4b14      	ldr	r3, [pc, #80]	; (401580 <usart_serial_putchar+0x70>)
  40152e:	4298      	cmp	r0, r3
  401530:	d108      	bne.n	401544 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  401532:	461e      	mov	r6, r3
  401534:	4d11      	ldr	r5, [pc, #68]	; (40157c <usart_serial_putchar+0x6c>)
  401536:	4621      	mov	r1, r4
  401538:	4630      	mov	r0, r6
  40153a:	47a8      	blx	r5
  40153c:	2800      	cmp	r0, #0
  40153e:	d1fa      	bne.n	401536 <usart_serial_putchar+0x26>
		return 1;
  401540:	2001      	movs	r0, #1
  401542:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  401544:	4b0f      	ldr	r3, [pc, #60]	; (401584 <usart_serial_putchar+0x74>)
  401546:	4298      	cmp	r0, r3
  401548:	d108      	bne.n	40155c <usart_serial_putchar+0x4c>
		while (usart_write(p_usart, c)!=0);
  40154a:	461e      	mov	r6, r3
  40154c:	4d0e      	ldr	r5, [pc, #56]	; (401588 <usart_serial_putchar+0x78>)
  40154e:	4621      	mov	r1, r4
  401550:	4630      	mov	r0, r6
  401552:	47a8      	blx	r5
  401554:	2800      	cmp	r0, #0
  401556:	d1fa      	bne.n	40154e <usart_serial_putchar+0x3e>
		return 1;
  401558:	2001      	movs	r0, #1
  40155a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  40155c:	4b0b      	ldr	r3, [pc, #44]	; (40158c <usart_serial_putchar+0x7c>)
  40155e:	4298      	cmp	r0, r3
  401560:	d108      	bne.n	401574 <usart_serial_putchar+0x64>
		while (usart_write(p_usart, c)!=0);
  401562:	461e      	mov	r6, r3
  401564:	4d08      	ldr	r5, [pc, #32]	; (401588 <usart_serial_putchar+0x78>)
  401566:	4621      	mov	r1, r4
  401568:	4630      	mov	r0, r6
  40156a:	47a8      	blx	r5
  40156c:	2800      	cmp	r0, #0
  40156e:	d1fa      	bne.n	401566 <usart_serial_putchar+0x56>
		return 1;
  401570:	2001      	movs	r0, #1
  401572:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  401574:	2000      	movs	r0, #0
}
  401576:	bd70      	pop	{r4, r5, r6, pc}
  401578:	400e0600 	.word	0x400e0600
  40157c:	004007b1 	.word	0x004007b1
  401580:	400e0800 	.word	0x400e0800
  401584:	40024000 	.word	0x40024000
  401588:	004007d5 	.word	0x004007d5
  40158c:	40028000 	.word	0x40028000

00401590 <vApplicationStackOverflowHook>:
/**
 * \brief Called if stack overflow during execution
 */
extern void vApplicationStackOverflowHook(xTaskHandle *pxTask,
		signed char *pcTaskName)
{
  401590:	b508      	push	{r3, lr}
	printf("stack overflow %x %s\r\n", pxTask, (portCHAR *)pcTaskName);
  401592:	460a      	mov	r2, r1
  401594:	4601      	mov	r1, r0
  401596:	4802      	ldr	r0, [pc, #8]	; (4015a0 <vApplicationStackOverflowHook+0x10>)
  401598:	4b02      	ldr	r3, [pc, #8]	; (4015a4 <vApplicationStackOverflowHook+0x14>)
  40159a:	4798      	blx	r3
  40159c:	e7fe      	b.n	40159c <vApplicationStackOverflowHook+0xc>
  40159e:	bf00      	nop
  4015a0:	00408070 	.word	0x00408070
  4015a4:	00401719 	.word	0x00401719

004015a8 <vApplicationIdleHook>:

/**
 * \brief This function is called by FreeRTOS idle task
 */
extern void vApplicationIdleHook(void)
{
  4015a8:	4770      	bx	lr
  4015aa:	bf00      	nop

004015ac <vApplicationTickHook>:

/**
 * \brief This function is called by FreeRTOS each tick
 */
extern void vApplicationTickHook(void)
{
  4015ac:	4770      	bx	lr
  4015ae:	bf00      	nop

004015b0 <main>:
 *  \brief FreeRTOS Real Time Kernel example entry point.
 *
 *  \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  4015b0:	b530      	push	{r4, r5, lr}
  4015b2:	b089      	sub	sp, #36	; 0x24
	/* Initialize the SAM system */
	sysclk_init();
  4015b4:	4b29      	ldr	r3, [pc, #164]	; (40165c <main+0xac>)
  4015b6:	4798      	blx	r3
	board_init();
  4015b8:	4b29      	ldr	r3, [pc, #164]	; (401660 <main+0xb0>)
  4015ba:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4015bc:	4c29      	ldr	r4, [pc, #164]	; (401664 <main+0xb4>)
  4015be:	4b2a      	ldr	r3, [pc, #168]	; (401668 <main+0xb8>)
  4015c0:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4015c2:	4a2a      	ldr	r2, [pc, #168]	; (40166c <main+0xbc>)
  4015c4:	4b2a      	ldr	r3, [pc, #168]	; (401670 <main+0xc0>)
  4015c6:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4015c8:	4a2a      	ldr	r2, [pc, #168]	; (401674 <main+0xc4>)
  4015ca:	4b2b      	ldr	r3, [pc, #172]	; (401678 <main+0xc8>)
  4015cc:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  4015ce:	4b2b      	ldr	r3, [pc, #172]	; (40167c <main+0xcc>)
  4015d0:	9305      	str	r3, [sp, #20]
	uart_settings.ul_baudrate = opt->baudrate;
  4015d2:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  4015d6:	9306      	str	r3, [sp, #24]
	uart_settings.ul_mode = opt->paritytype;
  4015d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4015dc:	9307      	str	r3, [sp, #28]
  4015de:	2008      	movs	r0, #8
  4015e0:	4b27      	ldr	r3, [pc, #156]	; (401680 <main+0xd0>)
  4015e2:	4798      	blx	r3
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  4015e4:	a905      	add	r1, sp, #20
  4015e6:	4620      	mov	r0, r4
  4015e8:	4b26      	ldr	r3, [pc, #152]	; (401684 <main+0xd4>)
  4015ea:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4015ec:	4d26      	ldr	r5, [pc, #152]	; (401688 <main+0xd8>)
  4015ee:	682b      	ldr	r3, [r5, #0]
  4015f0:	2100      	movs	r1, #0
  4015f2:	6898      	ldr	r0, [r3, #8]
  4015f4:	4c25      	ldr	r4, [pc, #148]	; (40168c <main+0xdc>)
  4015f6:	47a0      	blx	r4
	setbuf(stdin, NULL);
  4015f8:	682b      	ldr	r3, [r5, #0]
  4015fa:	2100      	movs	r1, #0
  4015fc:	6858      	ldr	r0, [r3, #4]
  4015fe:	47a0      	blx	r4
	/* Configure console UART. */
	stdio_serial_init(CONF_UART, &uart_serial_options);

	/* Specify that stdout should not be buffered. */
#if defined(__GNUC__)
	setbuf(stdout, NULL);
  401600:	682b      	ldr	r3, [r5, #0]
  401602:	2100      	movs	r1, #0
  401604:	6898      	ldr	r0, [r3, #8]
  401606:	47a0      	blx	r4

	/* Initialize the console uart */
	configure_console();

	/* Output demo infomation. */
	printf("-- FreeRTOS Example --\n\r");
  401608:	4821      	ldr	r0, [pc, #132]	; (401690 <main+0xe0>)
  40160a:	4c22      	ldr	r4, [pc, #136]	; (401694 <main+0xe4>)
  40160c:	47a0      	blx	r4
	printf("-- %s\n\r", BOARD_NAME);
  40160e:	4922      	ldr	r1, [pc, #136]	; (401698 <main+0xe8>)
  401610:	4822      	ldr	r0, [pc, #136]	; (40169c <main+0xec>)
  401612:	47a0      	blx	r4
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
  401614:	4a22      	ldr	r2, [pc, #136]	; (4016a0 <main+0xf0>)
  401616:	4923      	ldr	r1, [pc, #140]	; (4016a4 <main+0xf4>)
  401618:	4823      	ldr	r0, [pc, #140]	; (4016a8 <main+0xf8>)
  40161a:	47a0      	blx	r4


	/* Create task to monitor processor activity */
	xTaskCreate(task_monitor, 
  40161c:	2400      	movs	r4, #0
  40161e:	9403      	str	r4, [sp, #12]
  401620:	9402      	str	r4, [sp, #8]
  401622:	9401      	str	r4, [sp, #4]
  401624:	9400      	str	r4, [sp, #0]
  401626:	4623      	mov	r3, r4
  401628:	f44f 7200 	mov.w	r2, #512	; 0x200
  40162c:	491f      	ldr	r1, [pc, #124]	; (4016ac <main+0xfc>)
  40162e:	4820      	ldr	r0, [pc, #128]	; (4016b0 <main+0x100>)
  401630:	4d20      	ldr	r5, [pc, #128]	; (4016b4 <main+0x104>)
  401632:	47a8      	blx	r5
				TASK_MONITOR_STACK_PRIORITY, 
				NULL) ;
				

	/* Create task to make led blink */
	if (xTaskCreate(task_led, "Led", TASK_LED_STACK_SIZE, NULL,
  401634:	9403      	str	r4, [sp, #12]
  401636:	9402      	str	r4, [sp, #8]
  401638:	9401      	str	r4, [sp, #4]
  40163a:	9400      	str	r4, [sp, #0]
  40163c:	4623      	mov	r3, r4
  40163e:	f44f 7280 	mov.w	r2, #256	; 0x100
  401642:	491d      	ldr	r1, [pc, #116]	; (4016b8 <main+0x108>)
  401644:	481d      	ldr	r0, [pc, #116]	; (4016bc <main+0x10c>)
  401646:	47a8      	blx	r5
  401648:	2801      	cmp	r0, #1
  40164a:	d002      	beq.n	401652 <main+0xa2>
			TASK_LED_STACK_PRIORITY, NULL) != pdPASS) {
		printf("Failed to create test led task\r\n");
  40164c:	481c      	ldr	r0, [pc, #112]	; (4016c0 <main+0x110>)
  40164e:	4b11      	ldr	r3, [pc, #68]	; (401694 <main+0xe4>)
  401650:	4798      	blx	r3
	}

	/* Start the scheduler. */
	vTaskStartScheduler();
  401652:	4b1c      	ldr	r3, [pc, #112]	; (4016c4 <main+0x114>)
  401654:	4798      	blx	r3

	/* Will only get here if there was insufficient memory to create the idle task. */
	return 0;
}
  401656:	2000      	movs	r0, #0
  401658:	b009      	add	sp, #36	; 0x24
  40165a:	bd30      	pop	{r4, r5, pc}
  40165c:	00400129 	.word	0x00400129
  401660:	00400219 	.word	0x00400219
  401664:	400e0600 	.word	0x400e0600
  401668:	20000ba4 	.word	0x20000ba4
  40166c:	00401511 	.word	0x00401511
  401670:	20000ba0 	.word	0x20000ba0
  401674:	00401489 	.word	0x00401489
  401678:	20000b9c 	.word	0x20000b9c
  40167c:	07270e00 	.word	0x07270e00
  401680:	00400725 	.word	0x00400725
  401684:	00400779 	.word	0x00400779
  401688:	20000438 	.word	0x20000438
  40168c:	00401f31 	.word	0x00401f31
  401690:	00408088 	.word	0x00408088
  401694:	00401719 	.word	0x00401719
  401698:	004080a4 	.word	0x004080a4
  40169c:	004080b0 	.word	0x004080b0
  4016a0:	004080b8 	.word	0x004080b8
  4016a4:	004080c4 	.word	0x004080c4
  4016a8:	004080d0 	.word	0x004080d0
  4016ac:	004080e8 	.word	0x004080e8
  4016b0:	00401449 	.word	0x00401449
  4016b4:	00400d99 	.word	0x00400d99
  4016b8:	004080f0 	.word	0x004080f0
  4016bc:	0040141d 	.word	0x0040141d
  4016c0:	004080f4 	.word	0x004080f4
  4016c4:	00400f6d 	.word	0x00400f6d

004016c8 <__libc_init_array>:
  4016c8:	b570      	push	{r4, r5, r6, lr}
  4016ca:	4e0f      	ldr	r6, [pc, #60]	; (401708 <__libc_init_array+0x40>)
  4016cc:	4d0f      	ldr	r5, [pc, #60]	; (40170c <__libc_init_array+0x44>)
  4016ce:	1b76      	subs	r6, r6, r5
  4016d0:	10b6      	asrs	r6, r6, #2
  4016d2:	bf18      	it	ne
  4016d4:	2400      	movne	r4, #0
  4016d6:	d005      	beq.n	4016e4 <__libc_init_array+0x1c>
  4016d8:	3401      	adds	r4, #1
  4016da:	f855 3b04 	ldr.w	r3, [r5], #4
  4016de:	4798      	blx	r3
  4016e0:	42a6      	cmp	r6, r4
  4016e2:	d1f9      	bne.n	4016d8 <__libc_init_array+0x10>
  4016e4:	4e0a      	ldr	r6, [pc, #40]	; (401710 <__libc_init_array+0x48>)
  4016e6:	4d0b      	ldr	r5, [pc, #44]	; (401714 <__libc_init_array+0x4c>)
  4016e8:	1b76      	subs	r6, r6, r5
  4016ea:	f006 fde7 	bl	4082bc <_init>
  4016ee:	10b6      	asrs	r6, r6, #2
  4016f0:	bf18      	it	ne
  4016f2:	2400      	movne	r4, #0
  4016f4:	d006      	beq.n	401704 <__libc_init_array+0x3c>
  4016f6:	3401      	adds	r4, #1
  4016f8:	f855 3b04 	ldr.w	r3, [r5], #4
  4016fc:	4798      	blx	r3
  4016fe:	42a6      	cmp	r6, r4
  401700:	d1f9      	bne.n	4016f6 <__libc_init_array+0x2e>
  401702:	bd70      	pop	{r4, r5, r6, pc}
  401704:	bd70      	pop	{r4, r5, r6, pc}
  401706:	bf00      	nop
  401708:	004082c8 	.word	0x004082c8
  40170c:	004082c8 	.word	0x004082c8
  401710:	004082d0 	.word	0x004082d0
  401714:	004082c8 	.word	0x004082c8

00401718 <iprintf>:
  401718:	b40f      	push	{r0, r1, r2, r3}
  40171a:	b500      	push	{lr}
  40171c:	4907      	ldr	r1, [pc, #28]	; (40173c <iprintf+0x24>)
  40171e:	b083      	sub	sp, #12
  401720:	ab04      	add	r3, sp, #16
  401722:	6808      	ldr	r0, [r1, #0]
  401724:	f853 2b04 	ldr.w	r2, [r3], #4
  401728:	6881      	ldr	r1, [r0, #8]
  40172a:	9301      	str	r3, [sp, #4]
  40172c:	f002 f994 	bl	403a58 <_vfiprintf_r>
  401730:	b003      	add	sp, #12
  401732:	f85d eb04 	ldr.w	lr, [sp], #4
  401736:	b004      	add	sp, #16
  401738:	4770      	bx	lr
  40173a:	bf00      	nop
  40173c:	20000438 	.word	0x20000438

00401740 <malloc>:
  401740:	4b02      	ldr	r3, [pc, #8]	; (40174c <malloc+0xc>)
  401742:	4601      	mov	r1, r0
  401744:	6818      	ldr	r0, [r3, #0]
  401746:	f000 b80b 	b.w	401760 <_malloc_r>
  40174a:	bf00      	nop
  40174c:	20000438 	.word	0x20000438

00401750 <free>:
  401750:	4b02      	ldr	r3, [pc, #8]	; (40175c <free+0xc>)
  401752:	4601      	mov	r1, r0
  401754:	6818      	ldr	r0, [r3, #0]
  401756:	f004 bae9 	b.w	405d2c <_free_r>
  40175a:	bf00      	nop
  40175c:	20000438 	.word	0x20000438

00401760 <_malloc_r>:
  401760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401764:	f101 050b 	add.w	r5, r1, #11
  401768:	2d16      	cmp	r5, #22
  40176a:	b083      	sub	sp, #12
  40176c:	4606      	mov	r6, r0
  40176e:	f240 809f 	bls.w	4018b0 <_malloc_r+0x150>
  401772:	f035 0507 	bics.w	r5, r5, #7
  401776:	f100 80bf 	bmi.w	4018f8 <_malloc_r+0x198>
  40177a:	42a9      	cmp	r1, r5
  40177c:	f200 80bc 	bhi.w	4018f8 <_malloc_r+0x198>
  401780:	f000 fbc0 	bl	401f04 <__malloc_lock>
  401784:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  401788:	f0c0 829c 	bcc.w	401cc4 <_malloc_r+0x564>
  40178c:	0a6b      	lsrs	r3, r5, #9
  40178e:	f000 80ba 	beq.w	401906 <_malloc_r+0x1a6>
  401792:	2b04      	cmp	r3, #4
  401794:	f200 8183 	bhi.w	401a9e <_malloc_r+0x33e>
  401798:	09a8      	lsrs	r0, r5, #6
  40179a:	f100 0e39 	add.w	lr, r0, #57	; 0x39
  40179e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  4017a2:	3038      	adds	r0, #56	; 0x38
  4017a4:	4fc4      	ldr	r7, [pc, #784]	; (401ab8 <_malloc_r+0x358>)
  4017a6:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  4017aa:	f1a3 0108 	sub.w	r1, r3, #8
  4017ae:	685c      	ldr	r4, [r3, #4]
  4017b0:	42a1      	cmp	r1, r4
  4017b2:	d107      	bne.n	4017c4 <_malloc_r+0x64>
  4017b4:	e0ac      	b.n	401910 <_malloc_r+0x1b0>
  4017b6:	2a00      	cmp	r2, #0
  4017b8:	f280 80ac 	bge.w	401914 <_malloc_r+0x1b4>
  4017bc:	68e4      	ldr	r4, [r4, #12]
  4017be:	42a1      	cmp	r1, r4
  4017c0:	f000 80a6 	beq.w	401910 <_malloc_r+0x1b0>
  4017c4:	6863      	ldr	r3, [r4, #4]
  4017c6:	f023 0303 	bic.w	r3, r3, #3
  4017ca:	1b5a      	subs	r2, r3, r5
  4017cc:	2a0f      	cmp	r2, #15
  4017ce:	ddf2      	ble.n	4017b6 <_malloc_r+0x56>
  4017d0:	49b9      	ldr	r1, [pc, #740]	; (401ab8 <_malloc_r+0x358>)
  4017d2:	693c      	ldr	r4, [r7, #16]
  4017d4:	f101 0e08 	add.w	lr, r1, #8
  4017d8:	4574      	cmp	r4, lr
  4017da:	f000 81b3 	beq.w	401b44 <_malloc_r+0x3e4>
  4017de:	6863      	ldr	r3, [r4, #4]
  4017e0:	f023 0303 	bic.w	r3, r3, #3
  4017e4:	1b5a      	subs	r2, r3, r5
  4017e6:	2a0f      	cmp	r2, #15
  4017e8:	f300 8199 	bgt.w	401b1e <_malloc_r+0x3be>
  4017ec:	2a00      	cmp	r2, #0
  4017ee:	f8c1 e014 	str.w	lr, [r1, #20]
  4017f2:	f8c1 e010 	str.w	lr, [r1, #16]
  4017f6:	f280 809e 	bge.w	401936 <_malloc_r+0x1d6>
  4017fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4017fe:	f080 8167 	bcs.w	401ad0 <_malloc_r+0x370>
  401802:	08db      	lsrs	r3, r3, #3
  401804:	f103 0c01 	add.w	ip, r3, #1
  401808:	2201      	movs	r2, #1
  40180a:	109b      	asrs	r3, r3, #2
  40180c:	fa02 f303 	lsl.w	r3, r2, r3
  401810:	684a      	ldr	r2, [r1, #4]
  401812:	f851 803c 	ldr.w	r8, [r1, ip, lsl #3]
  401816:	f8c4 8008 	str.w	r8, [r4, #8]
  40181a:	eb01 09cc 	add.w	r9, r1, ip, lsl #3
  40181e:	431a      	orrs	r2, r3
  401820:	f1a9 0308 	sub.w	r3, r9, #8
  401824:	60e3      	str	r3, [r4, #12]
  401826:	604a      	str	r2, [r1, #4]
  401828:	f841 403c 	str.w	r4, [r1, ip, lsl #3]
  40182c:	f8c8 400c 	str.w	r4, [r8, #12]
  401830:	1083      	asrs	r3, r0, #2
  401832:	2401      	movs	r4, #1
  401834:	409c      	lsls	r4, r3
  401836:	4294      	cmp	r4, r2
  401838:	f200 808a 	bhi.w	401950 <_malloc_r+0x1f0>
  40183c:	4214      	tst	r4, r2
  40183e:	d106      	bne.n	40184e <_malloc_r+0xee>
  401840:	f020 0003 	bic.w	r0, r0, #3
  401844:	0064      	lsls	r4, r4, #1
  401846:	4214      	tst	r4, r2
  401848:	f100 0004 	add.w	r0, r0, #4
  40184c:	d0fa      	beq.n	401844 <_malloc_r+0xe4>
  40184e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  401852:	46cc      	mov	ip, r9
  401854:	4680      	mov	r8, r0
  401856:	f8dc 100c 	ldr.w	r1, [ip, #12]
  40185a:	458c      	cmp	ip, r1
  40185c:	d107      	bne.n	40186e <_malloc_r+0x10e>
  40185e:	e173      	b.n	401b48 <_malloc_r+0x3e8>
  401860:	2a00      	cmp	r2, #0
  401862:	f280 8181 	bge.w	401b68 <_malloc_r+0x408>
  401866:	68c9      	ldr	r1, [r1, #12]
  401868:	458c      	cmp	ip, r1
  40186a:	f000 816d 	beq.w	401b48 <_malloc_r+0x3e8>
  40186e:	684b      	ldr	r3, [r1, #4]
  401870:	f023 0303 	bic.w	r3, r3, #3
  401874:	1b5a      	subs	r2, r3, r5
  401876:	2a0f      	cmp	r2, #15
  401878:	ddf2      	ble.n	401860 <_malloc_r+0x100>
  40187a:	460c      	mov	r4, r1
  40187c:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  401880:	f854 8f08 	ldr.w	r8, [r4, #8]!
  401884:	194b      	adds	r3, r1, r5
  401886:	f045 0501 	orr.w	r5, r5, #1
  40188a:	604d      	str	r5, [r1, #4]
  40188c:	f042 0101 	orr.w	r1, r2, #1
  401890:	f8c8 c00c 	str.w	ip, [r8, #12]
  401894:	4630      	mov	r0, r6
  401896:	f8cc 8008 	str.w	r8, [ip, #8]
  40189a:	617b      	str	r3, [r7, #20]
  40189c:	613b      	str	r3, [r7, #16]
  40189e:	f8c3 e00c 	str.w	lr, [r3, #12]
  4018a2:	f8c3 e008 	str.w	lr, [r3, #8]
  4018a6:	6059      	str	r1, [r3, #4]
  4018a8:	509a      	str	r2, [r3, r2]
  4018aa:	f000 fb2d 	bl	401f08 <__malloc_unlock>
  4018ae:	e01f      	b.n	4018f0 <_malloc_r+0x190>
  4018b0:	2910      	cmp	r1, #16
  4018b2:	d821      	bhi.n	4018f8 <_malloc_r+0x198>
  4018b4:	f000 fb26 	bl	401f04 <__malloc_lock>
  4018b8:	2510      	movs	r5, #16
  4018ba:	2306      	movs	r3, #6
  4018bc:	2002      	movs	r0, #2
  4018be:	4f7e      	ldr	r7, [pc, #504]	; (401ab8 <_malloc_r+0x358>)
  4018c0:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  4018c4:	f1a3 0208 	sub.w	r2, r3, #8
  4018c8:	685c      	ldr	r4, [r3, #4]
  4018ca:	4294      	cmp	r4, r2
  4018cc:	f000 8145 	beq.w	401b5a <_malloc_r+0x3fa>
  4018d0:	6863      	ldr	r3, [r4, #4]
  4018d2:	68e1      	ldr	r1, [r4, #12]
  4018d4:	68a5      	ldr	r5, [r4, #8]
  4018d6:	f023 0303 	bic.w	r3, r3, #3
  4018da:	4423      	add	r3, r4
  4018dc:	4630      	mov	r0, r6
  4018de:	685a      	ldr	r2, [r3, #4]
  4018e0:	60e9      	str	r1, [r5, #12]
  4018e2:	f042 0201 	orr.w	r2, r2, #1
  4018e6:	608d      	str	r5, [r1, #8]
  4018e8:	605a      	str	r2, [r3, #4]
  4018ea:	f000 fb0d 	bl	401f08 <__malloc_unlock>
  4018ee:	3408      	adds	r4, #8
  4018f0:	4620      	mov	r0, r4
  4018f2:	b003      	add	sp, #12
  4018f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018f8:	2400      	movs	r4, #0
  4018fa:	230c      	movs	r3, #12
  4018fc:	4620      	mov	r0, r4
  4018fe:	6033      	str	r3, [r6, #0]
  401900:	b003      	add	sp, #12
  401902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401906:	2380      	movs	r3, #128	; 0x80
  401908:	f04f 0e40 	mov.w	lr, #64	; 0x40
  40190c:	203f      	movs	r0, #63	; 0x3f
  40190e:	e749      	b.n	4017a4 <_malloc_r+0x44>
  401910:	4670      	mov	r0, lr
  401912:	e75d      	b.n	4017d0 <_malloc_r+0x70>
  401914:	4423      	add	r3, r4
  401916:	68e1      	ldr	r1, [r4, #12]
  401918:	685a      	ldr	r2, [r3, #4]
  40191a:	68a5      	ldr	r5, [r4, #8]
  40191c:	f042 0201 	orr.w	r2, r2, #1
  401920:	60e9      	str	r1, [r5, #12]
  401922:	4630      	mov	r0, r6
  401924:	608d      	str	r5, [r1, #8]
  401926:	605a      	str	r2, [r3, #4]
  401928:	f000 faee 	bl	401f08 <__malloc_unlock>
  40192c:	3408      	adds	r4, #8
  40192e:	4620      	mov	r0, r4
  401930:	b003      	add	sp, #12
  401932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401936:	4423      	add	r3, r4
  401938:	4630      	mov	r0, r6
  40193a:	685a      	ldr	r2, [r3, #4]
  40193c:	f042 0201 	orr.w	r2, r2, #1
  401940:	605a      	str	r2, [r3, #4]
  401942:	f000 fae1 	bl	401f08 <__malloc_unlock>
  401946:	3408      	adds	r4, #8
  401948:	4620      	mov	r0, r4
  40194a:	b003      	add	sp, #12
  40194c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401950:	68bc      	ldr	r4, [r7, #8]
  401952:	6863      	ldr	r3, [r4, #4]
  401954:	f023 0803 	bic.w	r8, r3, #3
  401958:	45a8      	cmp	r8, r5
  40195a:	d304      	bcc.n	401966 <_malloc_r+0x206>
  40195c:	ebc5 0308 	rsb	r3, r5, r8
  401960:	2b0f      	cmp	r3, #15
  401962:	f300 808c 	bgt.w	401a7e <_malloc_r+0x31e>
  401966:	4b55      	ldr	r3, [pc, #340]	; (401abc <_malloc_r+0x35c>)
  401968:	f8df 9160 	ldr.w	r9, [pc, #352]	; 401acc <_malloc_r+0x36c>
  40196c:	681a      	ldr	r2, [r3, #0]
  40196e:	f8d9 3000 	ldr.w	r3, [r9]
  401972:	3301      	adds	r3, #1
  401974:	442a      	add	r2, r5
  401976:	eb04 0a08 	add.w	sl, r4, r8
  40197a:	f000 8160 	beq.w	401c3e <_malloc_r+0x4de>
  40197e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  401982:	320f      	adds	r2, #15
  401984:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  401988:	f022 020f 	bic.w	r2, r2, #15
  40198c:	4611      	mov	r1, r2
  40198e:	4630      	mov	r0, r6
  401990:	9201      	str	r2, [sp, #4]
  401992:	f000 fabb 	bl	401f0c <_sbrk_r>
  401996:	f1b0 3fff 	cmp.w	r0, #4294967295
  40199a:	4683      	mov	fp, r0
  40199c:	9a01      	ldr	r2, [sp, #4]
  40199e:	f000 8158 	beq.w	401c52 <_malloc_r+0x4f2>
  4019a2:	4582      	cmp	sl, r0
  4019a4:	f200 80fc 	bhi.w	401ba0 <_malloc_r+0x440>
  4019a8:	4b45      	ldr	r3, [pc, #276]	; (401ac0 <_malloc_r+0x360>)
  4019aa:	6819      	ldr	r1, [r3, #0]
  4019ac:	45da      	cmp	sl, fp
  4019ae:	4411      	add	r1, r2
  4019b0:	6019      	str	r1, [r3, #0]
  4019b2:	f000 8153 	beq.w	401c5c <_malloc_r+0x4fc>
  4019b6:	f8d9 0000 	ldr.w	r0, [r9]
  4019ba:	f8df e110 	ldr.w	lr, [pc, #272]	; 401acc <_malloc_r+0x36c>
  4019be:	3001      	adds	r0, #1
  4019c0:	bf1b      	ittet	ne
  4019c2:	ebca 0a0b 	rsbne	sl, sl, fp
  4019c6:	4451      	addne	r1, sl
  4019c8:	f8ce b000 	streq.w	fp, [lr]
  4019cc:	6019      	strne	r1, [r3, #0]
  4019ce:	f01b 0107 	ands.w	r1, fp, #7
  4019d2:	f000 8117 	beq.w	401c04 <_malloc_r+0x4a4>
  4019d6:	f1c1 0008 	rsb	r0, r1, #8
  4019da:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4019de:	4483      	add	fp, r0
  4019e0:	3108      	adds	r1, #8
  4019e2:	445a      	add	r2, fp
  4019e4:	f3c2 020b 	ubfx	r2, r2, #0, #12
  4019e8:	ebc2 0901 	rsb	r9, r2, r1
  4019ec:	4649      	mov	r1, r9
  4019ee:	4630      	mov	r0, r6
  4019f0:	9301      	str	r3, [sp, #4]
  4019f2:	f000 fa8b 	bl	401f0c <_sbrk_r>
  4019f6:	1c43      	adds	r3, r0, #1
  4019f8:	9b01      	ldr	r3, [sp, #4]
  4019fa:	f000 813f 	beq.w	401c7c <_malloc_r+0x51c>
  4019fe:	ebcb 0200 	rsb	r2, fp, r0
  401a02:	444a      	add	r2, r9
  401a04:	f042 0201 	orr.w	r2, r2, #1
  401a08:	6819      	ldr	r1, [r3, #0]
  401a0a:	f8c7 b008 	str.w	fp, [r7, #8]
  401a0e:	4449      	add	r1, r9
  401a10:	42bc      	cmp	r4, r7
  401a12:	f8cb 2004 	str.w	r2, [fp, #4]
  401a16:	6019      	str	r1, [r3, #0]
  401a18:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 401ac0 <_malloc_r+0x360>
  401a1c:	d016      	beq.n	401a4c <_malloc_r+0x2ec>
  401a1e:	f1b8 0f0f 	cmp.w	r8, #15
  401a22:	f240 80fd 	bls.w	401c20 <_malloc_r+0x4c0>
  401a26:	6862      	ldr	r2, [r4, #4]
  401a28:	f1a8 030c 	sub.w	r3, r8, #12
  401a2c:	f023 0307 	bic.w	r3, r3, #7
  401a30:	18e0      	adds	r0, r4, r3
  401a32:	f002 0201 	and.w	r2, r2, #1
  401a36:	f04f 0e05 	mov.w	lr, #5
  401a3a:	431a      	orrs	r2, r3
  401a3c:	2b0f      	cmp	r3, #15
  401a3e:	6062      	str	r2, [r4, #4]
  401a40:	f8c0 e004 	str.w	lr, [r0, #4]
  401a44:	f8c0 e008 	str.w	lr, [r0, #8]
  401a48:	f200 811c 	bhi.w	401c84 <_malloc_r+0x524>
  401a4c:	4b1d      	ldr	r3, [pc, #116]	; (401ac4 <_malloc_r+0x364>)
  401a4e:	68bc      	ldr	r4, [r7, #8]
  401a50:	681a      	ldr	r2, [r3, #0]
  401a52:	4291      	cmp	r1, r2
  401a54:	bf88      	it	hi
  401a56:	6019      	strhi	r1, [r3, #0]
  401a58:	4b1b      	ldr	r3, [pc, #108]	; (401ac8 <_malloc_r+0x368>)
  401a5a:	681a      	ldr	r2, [r3, #0]
  401a5c:	4291      	cmp	r1, r2
  401a5e:	6862      	ldr	r2, [r4, #4]
  401a60:	bf88      	it	hi
  401a62:	6019      	strhi	r1, [r3, #0]
  401a64:	f022 0203 	bic.w	r2, r2, #3
  401a68:	4295      	cmp	r5, r2
  401a6a:	eba2 0305 	sub.w	r3, r2, r5
  401a6e:	d801      	bhi.n	401a74 <_malloc_r+0x314>
  401a70:	2b0f      	cmp	r3, #15
  401a72:	dc04      	bgt.n	401a7e <_malloc_r+0x31e>
  401a74:	4630      	mov	r0, r6
  401a76:	f000 fa47 	bl	401f08 <__malloc_unlock>
  401a7a:	2400      	movs	r4, #0
  401a7c:	e738      	b.n	4018f0 <_malloc_r+0x190>
  401a7e:	1962      	adds	r2, r4, r5
  401a80:	f043 0301 	orr.w	r3, r3, #1
  401a84:	f045 0501 	orr.w	r5, r5, #1
  401a88:	6065      	str	r5, [r4, #4]
  401a8a:	4630      	mov	r0, r6
  401a8c:	60ba      	str	r2, [r7, #8]
  401a8e:	6053      	str	r3, [r2, #4]
  401a90:	f000 fa3a 	bl	401f08 <__malloc_unlock>
  401a94:	3408      	adds	r4, #8
  401a96:	4620      	mov	r0, r4
  401a98:	b003      	add	sp, #12
  401a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a9e:	2b14      	cmp	r3, #20
  401aa0:	d971      	bls.n	401b86 <_malloc_r+0x426>
  401aa2:	2b54      	cmp	r3, #84	; 0x54
  401aa4:	f200 80a4 	bhi.w	401bf0 <_malloc_r+0x490>
  401aa8:	0b28      	lsrs	r0, r5, #12
  401aaa:	f100 0e6f 	add.w	lr, r0, #111	; 0x6f
  401aae:	ea4f 034e 	mov.w	r3, lr, lsl #1
  401ab2:	306e      	adds	r0, #110	; 0x6e
  401ab4:	e676      	b.n	4017a4 <_malloc_r+0x44>
  401ab6:	bf00      	nop
  401ab8:	2000043c 	.word	0x2000043c
  401abc:	20000b70 	.word	0x20000b70
  401ac0:	20000b74 	.word	0x20000b74
  401ac4:	20000b6c 	.word	0x20000b6c
  401ac8:	20000b68 	.word	0x20000b68
  401acc:	20000848 	.word	0x20000848
  401ad0:	0a5a      	lsrs	r2, r3, #9
  401ad2:	2a04      	cmp	r2, #4
  401ad4:	d95e      	bls.n	401b94 <_malloc_r+0x434>
  401ad6:	2a14      	cmp	r2, #20
  401ad8:	f200 80b3 	bhi.w	401c42 <_malloc_r+0x4e2>
  401adc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  401ae0:	0049      	lsls	r1, r1, #1
  401ae2:	325b      	adds	r2, #91	; 0x5b
  401ae4:	eb07 0c81 	add.w	ip, r7, r1, lsl #2
  401ae8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
  401aec:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 401ccc <_malloc_r+0x56c>
  401af0:	f1ac 0c08 	sub.w	ip, ip, #8
  401af4:	458c      	cmp	ip, r1
  401af6:	f000 8088 	beq.w	401c0a <_malloc_r+0x4aa>
  401afa:	684a      	ldr	r2, [r1, #4]
  401afc:	f022 0203 	bic.w	r2, r2, #3
  401b00:	4293      	cmp	r3, r2
  401b02:	d202      	bcs.n	401b0a <_malloc_r+0x3aa>
  401b04:	6889      	ldr	r1, [r1, #8]
  401b06:	458c      	cmp	ip, r1
  401b08:	d1f7      	bne.n	401afa <_malloc_r+0x39a>
  401b0a:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  401b0e:	687a      	ldr	r2, [r7, #4]
  401b10:	f8c4 c00c 	str.w	ip, [r4, #12]
  401b14:	60a1      	str	r1, [r4, #8]
  401b16:	f8cc 4008 	str.w	r4, [ip, #8]
  401b1a:	60cc      	str	r4, [r1, #12]
  401b1c:	e688      	b.n	401830 <_malloc_r+0xd0>
  401b1e:	1963      	adds	r3, r4, r5
  401b20:	f042 0701 	orr.w	r7, r2, #1
  401b24:	f045 0501 	orr.w	r5, r5, #1
  401b28:	6065      	str	r5, [r4, #4]
  401b2a:	4630      	mov	r0, r6
  401b2c:	614b      	str	r3, [r1, #20]
  401b2e:	610b      	str	r3, [r1, #16]
  401b30:	f8c3 e00c 	str.w	lr, [r3, #12]
  401b34:	f8c3 e008 	str.w	lr, [r3, #8]
  401b38:	605f      	str	r7, [r3, #4]
  401b3a:	509a      	str	r2, [r3, r2]
  401b3c:	3408      	adds	r4, #8
  401b3e:	f000 f9e3 	bl	401f08 <__malloc_unlock>
  401b42:	e6d5      	b.n	4018f0 <_malloc_r+0x190>
  401b44:	684a      	ldr	r2, [r1, #4]
  401b46:	e673      	b.n	401830 <_malloc_r+0xd0>
  401b48:	f108 0801 	add.w	r8, r8, #1
  401b4c:	f018 0f03 	tst.w	r8, #3
  401b50:	f10c 0c08 	add.w	ip, ip, #8
  401b54:	f47f ae7f 	bne.w	401856 <_malloc_r+0xf6>
  401b58:	e030      	b.n	401bbc <_malloc_r+0x45c>
  401b5a:	68dc      	ldr	r4, [r3, #12]
  401b5c:	42a3      	cmp	r3, r4
  401b5e:	bf08      	it	eq
  401b60:	3002      	addeq	r0, #2
  401b62:	f43f ae35 	beq.w	4017d0 <_malloc_r+0x70>
  401b66:	e6b3      	b.n	4018d0 <_malloc_r+0x170>
  401b68:	440b      	add	r3, r1
  401b6a:	460c      	mov	r4, r1
  401b6c:	685a      	ldr	r2, [r3, #4]
  401b6e:	68c9      	ldr	r1, [r1, #12]
  401b70:	f854 5f08 	ldr.w	r5, [r4, #8]!
  401b74:	f042 0201 	orr.w	r2, r2, #1
  401b78:	605a      	str	r2, [r3, #4]
  401b7a:	4630      	mov	r0, r6
  401b7c:	60e9      	str	r1, [r5, #12]
  401b7e:	608d      	str	r5, [r1, #8]
  401b80:	f000 f9c2 	bl	401f08 <__malloc_unlock>
  401b84:	e6b4      	b.n	4018f0 <_malloc_r+0x190>
  401b86:	f103 0e5c 	add.w	lr, r3, #92	; 0x5c
  401b8a:	f103 005b 	add.w	r0, r3, #91	; 0x5b
  401b8e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  401b92:	e607      	b.n	4017a4 <_malloc_r+0x44>
  401b94:	099a      	lsrs	r2, r3, #6
  401b96:	f102 0139 	add.w	r1, r2, #57	; 0x39
  401b9a:	0049      	lsls	r1, r1, #1
  401b9c:	3238      	adds	r2, #56	; 0x38
  401b9e:	e7a1      	b.n	401ae4 <_malloc_r+0x384>
  401ba0:	42bc      	cmp	r4, r7
  401ba2:	4b4a      	ldr	r3, [pc, #296]	; (401ccc <_malloc_r+0x56c>)
  401ba4:	f43f af00 	beq.w	4019a8 <_malloc_r+0x248>
  401ba8:	689c      	ldr	r4, [r3, #8]
  401baa:	6862      	ldr	r2, [r4, #4]
  401bac:	f022 0203 	bic.w	r2, r2, #3
  401bb0:	e75a      	b.n	401a68 <_malloc_r+0x308>
  401bb2:	f859 3908 	ldr.w	r3, [r9], #-8
  401bb6:	4599      	cmp	r9, r3
  401bb8:	f040 8082 	bne.w	401cc0 <_malloc_r+0x560>
  401bbc:	f010 0f03 	tst.w	r0, #3
  401bc0:	f100 30ff 	add.w	r0, r0, #4294967295
  401bc4:	d1f5      	bne.n	401bb2 <_malloc_r+0x452>
  401bc6:	687b      	ldr	r3, [r7, #4]
  401bc8:	ea23 0304 	bic.w	r3, r3, r4
  401bcc:	607b      	str	r3, [r7, #4]
  401bce:	0064      	lsls	r4, r4, #1
  401bd0:	429c      	cmp	r4, r3
  401bd2:	f63f aebd 	bhi.w	401950 <_malloc_r+0x1f0>
  401bd6:	2c00      	cmp	r4, #0
  401bd8:	f43f aeba 	beq.w	401950 <_malloc_r+0x1f0>
  401bdc:	421c      	tst	r4, r3
  401bde:	4640      	mov	r0, r8
  401be0:	f47f ae35 	bne.w	40184e <_malloc_r+0xee>
  401be4:	0064      	lsls	r4, r4, #1
  401be6:	421c      	tst	r4, r3
  401be8:	f100 0004 	add.w	r0, r0, #4
  401bec:	d0fa      	beq.n	401be4 <_malloc_r+0x484>
  401bee:	e62e      	b.n	40184e <_malloc_r+0xee>
  401bf0:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  401bf4:	d818      	bhi.n	401c28 <_malloc_r+0x4c8>
  401bf6:	0be8      	lsrs	r0, r5, #15
  401bf8:	f100 0e78 	add.w	lr, r0, #120	; 0x78
  401bfc:	ea4f 034e 	mov.w	r3, lr, lsl #1
  401c00:	3077      	adds	r0, #119	; 0x77
  401c02:	e5cf      	b.n	4017a4 <_malloc_r+0x44>
  401c04:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  401c08:	e6eb      	b.n	4019e2 <_malloc_r+0x282>
  401c0a:	2101      	movs	r1, #1
  401c0c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  401c10:	1092      	asrs	r2, r2, #2
  401c12:	fa01 f202 	lsl.w	r2, r1, r2
  401c16:	431a      	orrs	r2, r3
  401c18:	f8c8 2004 	str.w	r2, [r8, #4]
  401c1c:	4661      	mov	r1, ip
  401c1e:	e777      	b.n	401b10 <_malloc_r+0x3b0>
  401c20:	2301      	movs	r3, #1
  401c22:	f8cb 3004 	str.w	r3, [fp, #4]
  401c26:	e725      	b.n	401a74 <_malloc_r+0x314>
  401c28:	f240 5254 	movw	r2, #1364	; 0x554
  401c2c:	4293      	cmp	r3, r2
  401c2e:	d820      	bhi.n	401c72 <_malloc_r+0x512>
  401c30:	0ca8      	lsrs	r0, r5, #18
  401c32:	f100 0e7d 	add.w	lr, r0, #125	; 0x7d
  401c36:	ea4f 034e 	mov.w	r3, lr, lsl #1
  401c3a:	307c      	adds	r0, #124	; 0x7c
  401c3c:	e5b2      	b.n	4017a4 <_malloc_r+0x44>
  401c3e:	3210      	adds	r2, #16
  401c40:	e6a4      	b.n	40198c <_malloc_r+0x22c>
  401c42:	2a54      	cmp	r2, #84	; 0x54
  401c44:	d826      	bhi.n	401c94 <_malloc_r+0x534>
  401c46:	0b1a      	lsrs	r2, r3, #12
  401c48:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  401c4c:	0049      	lsls	r1, r1, #1
  401c4e:	326e      	adds	r2, #110	; 0x6e
  401c50:	e748      	b.n	401ae4 <_malloc_r+0x384>
  401c52:	68bc      	ldr	r4, [r7, #8]
  401c54:	6862      	ldr	r2, [r4, #4]
  401c56:	f022 0203 	bic.w	r2, r2, #3
  401c5a:	e705      	b.n	401a68 <_malloc_r+0x308>
  401c5c:	f3ca 000b 	ubfx	r0, sl, #0, #12
  401c60:	2800      	cmp	r0, #0
  401c62:	f47f aea8 	bne.w	4019b6 <_malloc_r+0x256>
  401c66:	4442      	add	r2, r8
  401c68:	68bb      	ldr	r3, [r7, #8]
  401c6a:	f042 0201 	orr.w	r2, r2, #1
  401c6e:	605a      	str	r2, [r3, #4]
  401c70:	e6ec      	b.n	401a4c <_malloc_r+0x2ec>
  401c72:	23fe      	movs	r3, #254	; 0xfe
  401c74:	f04f 0e7f 	mov.w	lr, #127	; 0x7f
  401c78:	207e      	movs	r0, #126	; 0x7e
  401c7a:	e593      	b.n	4017a4 <_malloc_r+0x44>
  401c7c:	2201      	movs	r2, #1
  401c7e:	f04f 0900 	mov.w	r9, #0
  401c82:	e6c1      	b.n	401a08 <_malloc_r+0x2a8>
  401c84:	f104 0108 	add.w	r1, r4, #8
  401c88:	4630      	mov	r0, r6
  401c8a:	f004 f84f 	bl	405d2c <_free_r>
  401c8e:	f8d9 1000 	ldr.w	r1, [r9]
  401c92:	e6db      	b.n	401a4c <_malloc_r+0x2ec>
  401c94:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  401c98:	d805      	bhi.n	401ca6 <_malloc_r+0x546>
  401c9a:	0bda      	lsrs	r2, r3, #15
  401c9c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  401ca0:	0049      	lsls	r1, r1, #1
  401ca2:	3277      	adds	r2, #119	; 0x77
  401ca4:	e71e      	b.n	401ae4 <_malloc_r+0x384>
  401ca6:	f240 5154 	movw	r1, #1364	; 0x554
  401caa:	428a      	cmp	r2, r1
  401cac:	d805      	bhi.n	401cba <_malloc_r+0x55a>
  401cae:	0c9a      	lsrs	r2, r3, #18
  401cb0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  401cb4:	0049      	lsls	r1, r1, #1
  401cb6:	327c      	adds	r2, #124	; 0x7c
  401cb8:	e714      	b.n	401ae4 <_malloc_r+0x384>
  401cba:	21fe      	movs	r1, #254	; 0xfe
  401cbc:	227e      	movs	r2, #126	; 0x7e
  401cbe:	e711      	b.n	401ae4 <_malloc_r+0x384>
  401cc0:	687b      	ldr	r3, [r7, #4]
  401cc2:	e784      	b.n	401bce <_malloc_r+0x46e>
  401cc4:	08e8      	lsrs	r0, r5, #3
  401cc6:	1c43      	adds	r3, r0, #1
  401cc8:	005b      	lsls	r3, r3, #1
  401cca:	e5f8      	b.n	4018be <_malloc_r+0x15e>
  401ccc:	2000043c 	.word	0x2000043c

00401cd0 <memcmp>:
  401cd0:	2a03      	cmp	r2, #3
  401cd2:	b470      	push	{r4, r5, r6}
  401cd4:	d926      	bls.n	401d24 <memcmp+0x54>
  401cd6:	ea40 0301 	orr.w	r3, r0, r1
  401cda:	079b      	lsls	r3, r3, #30
  401cdc:	d011      	beq.n	401d02 <memcmp+0x32>
  401cde:	7804      	ldrb	r4, [r0, #0]
  401ce0:	780d      	ldrb	r5, [r1, #0]
  401ce2:	42ac      	cmp	r4, r5
  401ce4:	d122      	bne.n	401d2c <memcmp+0x5c>
  401ce6:	4402      	add	r2, r0
  401ce8:	1c43      	adds	r3, r0, #1
  401cea:	e005      	b.n	401cf8 <memcmp+0x28>
  401cec:	f813 4b01 	ldrb.w	r4, [r3], #1
  401cf0:	f811 5f01 	ldrb.w	r5, [r1, #1]!
  401cf4:	42ac      	cmp	r4, r5
  401cf6:	d119      	bne.n	401d2c <memcmp+0x5c>
  401cf8:	4293      	cmp	r3, r2
  401cfa:	d1f7      	bne.n	401cec <memcmp+0x1c>
  401cfc:	2000      	movs	r0, #0
  401cfe:	bc70      	pop	{r4, r5, r6}
  401d00:	4770      	bx	lr
  401d02:	460c      	mov	r4, r1
  401d04:	4603      	mov	r3, r0
  401d06:	681e      	ldr	r6, [r3, #0]
  401d08:	6825      	ldr	r5, [r4, #0]
  401d0a:	42ae      	cmp	r6, r5
  401d0c:	4618      	mov	r0, r3
  401d0e:	4621      	mov	r1, r4
  401d10:	f103 0304 	add.w	r3, r3, #4
  401d14:	f104 0404 	add.w	r4, r4, #4
  401d18:	d1e1      	bne.n	401cde <memcmp+0xe>
  401d1a:	3a04      	subs	r2, #4
  401d1c:	2a03      	cmp	r2, #3
  401d1e:	4618      	mov	r0, r3
  401d20:	4621      	mov	r1, r4
  401d22:	d8f0      	bhi.n	401d06 <memcmp+0x36>
  401d24:	2a00      	cmp	r2, #0
  401d26:	d1da      	bne.n	401cde <memcmp+0xe>
  401d28:	4610      	mov	r0, r2
  401d2a:	e7e8      	b.n	401cfe <memcmp+0x2e>
  401d2c:	1b60      	subs	r0, r4, r5
  401d2e:	bc70      	pop	{r4, r5, r6}
  401d30:	4770      	bx	lr
  401d32:	bf00      	nop

00401d34 <memcpy>:
  401d34:	4684      	mov	ip, r0
  401d36:	ea41 0300 	orr.w	r3, r1, r0
  401d3a:	f013 0303 	ands.w	r3, r3, #3
  401d3e:	d16d      	bne.n	401e1c <memcpy+0xe8>
  401d40:	3a40      	subs	r2, #64	; 0x40
  401d42:	d341      	bcc.n	401dc8 <memcpy+0x94>
  401d44:	f851 3b04 	ldr.w	r3, [r1], #4
  401d48:	f840 3b04 	str.w	r3, [r0], #4
  401d4c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d50:	f840 3b04 	str.w	r3, [r0], #4
  401d54:	f851 3b04 	ldr.w	r3, [r1], #4
  401d58:	f840 3b04 	str.w	r3, [r0], #4
  401d5c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d60:	f840 3b04 	str.w	r3, [r0], #4
  401d64:	f851 3b04 	ldr.w	r3, [r1], #4
  401d68:	f840 3b04 	str.w	r3, [r0], #4
  401d6c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d70:	f840 3b04 	str.w	r3, [r0], #4
  401d74:	f851 3b04 	ldr.w	r3, [r1], #4
  401d78:	f840 3b04 	str.w	r3, [r0], #4
  401d7c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d80:	f840 3b04 	str.w	r3, [r0], #4
  401d84:	f851 3b04 	ldr.w	r3, [r1], #4
  401d88:	f840 3b04 	str.w	r3, [r0], #4
  401d8c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d90:	f840 3b04 	str.w	r3, [r0], #4
  401d94:	f851 3b04 	ldr.w	r3, [r1], #4
  401d98:	f840 3b04 	str.w	r3, [r0], #4
  401d9c:	f851 3b04 	ldr.w	r3, [r1], #4
  401da0:	f840 3b04 	str.w	r3, [r0], #4
  401da4:	f851 3b04 	ldr.w	r3, [r1], #4
  401da8:	f840 3b04 	str.w	r3, [r0], #4
  401dac:	f851 3b04 	ldr.w	r3, [r1], #4
  401db0:	f840 3b04 	str.w	r3, [r0], #4
  401db4:	f851 3b04 	ldr.w	r3, [r1], #4
  401db8:	f840 3b04 	str.w	r3, [r0], #4
  401dbc:	f851 3b04 	ldr.w	r3, [r1], #4
  401dc0:	f840 3b04 	str.w	r3, [r0], #4
  401dc4:	3a40      	subs	r2, #64	; 0x40
  401dc6:	d2bd      	bcs.n	401d44 <memcpy+0x10>
  401dc8:	3230      	adds	r2, #48	; 0x30
  401dca:	d311      	bcc.n	401df0 <memcpy+0xbc>
  401dcc:	f851 3b04 	ldr.w	r3, [r1], #4
  401dd0:	f840 3b04 	str.w	r3, [r0], #4
  401dd4:	f851 3b04 	ldr.w	r3, [r1], #4
  401dd8:	f840 3b04 	str.w	r3, [r0], #4
  401ddc:	f851 3b04 	ldr.w	r3, [r1], #4
  401de0:	f840 3b04 	str.w	r3, [r0], #4
  401de4:	f851 3b04 	ldr.w	r3, [r1], #4
  401de8:	f840 3b04 	str.w	r3, [r0], #4
  401dec:	3a10      	subs	r2, #16
  401dee:	d2ed      	bcs.n	401dcc <memcpy+0x98>
  401df0:	320c      	adds	r2, #12
  401df2:	d305      	bcc.n	401e00 <memcpy+0xcc>
  401df4:	f851 3b04 	ldr.w	r3, [r1], #4
  401df8:	f840 3b04 	str.w	r3, [r0], #4
  401dfc:	3a04      	subs	r2, #4
  401dfe:	d2f9      	bcs.n	401df4 <memcpy+0xc0>
  401e00:	3204      	adds	r2, #4
  401e02:	d008      	beq.n	401e16 <memcpy+0xe2>
  401e04:	07d2      	lsls	r2, r2, #31
  401e06:	bf1c      	itt	ne
  401e08:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401e0c:	f800 3b01 	strbne.w	r3, [r0], #1
  401e10:	d301      	bcc.n	401e16 <memcpy+0xe2>
  401e12:	880b      	ldrh	r3, [r1, #0]
  401e14:	8003      	strh	r3, [r0, #0]
  401e16:	4660      	mov	r0, ip
  401e18:	4770      	bx	lr
  401e1a:	bf00      	nop
  401e1c:	2a08      	cmp	r2, #8
  401e1e:	d313      	bcc.n	401e48 <memcpy+0x114>
  401e20:	078b      	lsls	r3, r1, #30
  401e22:	d08d      	beq.n	401d40 <memcpy+0xc>
  401e24:	f010 0303 	ands.w	r3, r0, #3
  401e28:	d08a      	beq.n	401d40 <memcpy+0xc>
  401e2a:	f1c3 0304 	rsb	r3, r3, #4
  401e2e:	1ad2      	subs	r2, r2, r3
  401e30:	07db      	lsls	r3, r3, #31
  401e32:	bf1c      	itt	ne
  401e34:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401e38:	f800 3b01 	strbne.w	r3, [r0], #1
  401e3c:	d380      	bcc.n	401d40 <memcpy+0xc>
  401e3e:	f831 3b02 	ldrh.w	r3, [r1], #2
  401e42:	f820 3b02 	strh.w	r3, [r0], #2
  401e46:	e77b      	b.n	401d40 <memcpy+0xc>
  401e48:	3a04      	subs	r2, #4
  401e4a:	d3d9      	bcc.n	401e00 <memcpy+0xcc>
  401e4c:	3a01      	subs	r2, #1
  401e4e:	f811 3b01 	ldrb.w	r3, [r1], #1
  401e52:	f800 3b01 	strb.w	r3, [r0], #1
  401e56:	d2f9      	bcs.n	401e4c <memcpy+0x118>
  401e58:	780b      	ldrb	r3, [r1, #0]
  401e5a:	7003      	strb	r3, [r0, #0]
  401e5c:	784b      	ldrb	r3, [r1, #1]
  401e5e:	7043      	strb	r3, [r0, #1]
  401e60:	788b      	ldrb	r3, [r1, #2]
  401e62:	7083      	strb	r3, [r0, #2]
  401e64:	4660      	mov	r0, ip
  401e66:	4770      	bx	lr

00401e68 <memset>:
  401e68:	b470      	push	{r4, r5, r6}
  401e6a:	0784      	lsls	r4, r0, #30
  401e6c:	d046      	beq.n	401efc <memset+0x94>
  401e6e:	1e54      	subs	r4, r2, #1
  401e70:	2a00      	cmp	r2, #0
  401e72:	d041      	beq.n	401ef8 <memset+0x90>
  401e74:	b2cd      	uxtb	r5, r1
  401e76:	4603      	mov	r3, r0
  401e78:	e002      	b.n	401e80 <memset+0x18>
  401e7a:	1e62      	subs	r2, r4, #1
  401e7c:	b3e4      	cbz	r4, 401ef8 <memset+0x90>
  401e7e:	4614      	mov	r4, r2
  401e80:	f803 5b01 	strb.w	r5, [r3], #1
  401e84:	079a      	lsls	r2, r3, #30
  401e86:	d1f8      	bne.n	401e7a <memset+0x12>
  401e88:	2c03      	cmp	r4, #3
  401e8a:	d92e      	bls.n	401eea <memset+0x82>
  401e8c:	b2cd      	uxtb	r5, r1
  401e8e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401e92:	2c0f      	cmp	r4, #15
  401e94:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401e98:	d919      	bls.n	401ece <memset+0x66>
  401e9a:	f103 0210 	add.w	r2, r3, #16
  401e9e:	4626      	mov	r6, r4
  401ea0:	3e10      	subs	r6, #16
  401ea2:	2e0f      	cmp	r6, #15
  401ea4:	f842 5c10 	str.w	r5, [r2, #-16]
  401ea8:	f842 5c0c 	str.w	r5, [r2, #-12]
  401eac:	f842 5c08 	str.w	r5, [r2, #-8]
  401eb0:	f842 5c04 	str.w	r5, [r2, #-4]
  401eb4:	f102 0210 	add.w	r2, r2, #16
  401eb8:	d8f2      	bhi.n	401ea0 <memset+0x38>
  401eba:	f1a4 0210 	sub.w	r2, r4, #16
  401ebe:	f022 020f 	bic.w	r2, r2, #15
  401ec2:	f004 040f 	and.w	r4, r4, #15
  401ec6:	3210      	adds	r2, #16
  401ec8:	2c03      	cmp	r4, #3
  401eca:	4413      	add	r3, r2
  401ecc:	d90d      	bls.n	401eea <memset+0x82>
  401ece:	461e      	mov	r6, r3
  401ed0:	4622      	mov	r2, r4
  401ed2:	3a04      	subs	r2, #4
  401ed4:	2a03      	cmp	r2, #3
  401ed6:	f846 5b04 	str.w	r5, [r6], #4
  401eda:	d8fa      	bhi.n	401ed2 <memset+0x6a>
  401edc:	1f22      	subs	r2, r4, #4
  401ede:	f022 0203 	bic.w	r2, r2, #3
  401ee2:	3204      	adds	r2, #4
  401ee4:	4413      	add	r3, r2
  401ee6:	f004 0403 	and.w	r4, r4, #3
  401eea:	b12c      	cbz	r4, 401ef8 <memset+0x90>
  401eec:	b2c9      	uxtb	r1, r1
  401eee:	441c      	add	r4, r3
  401ef0:	f803 1b01 	strb.w	r1, [r3], #1
  401ef4:	42a3      	cmp	r3, r4
  401ef6:	d1fb      	bne.n	401ef0 <memset+0x88>
  401ef8:	bc70      	pop	{r4, r5, r6}
  401efa:	4770      	bx	lr
  401efc:	4614      	mov	r4, r2
  401efe:	4603      	mov	r3, r0
  401f00:	e7c2      	b.n	401e88 <memset+0x20>
  401f02:	bf00      	nop

00401f04 <__malloc_lock>:
  401f04:	4770      	bx	lr
  401f06:	bf00      	nop

00401f08 <__malloc_unlock>:
  401f08:	4770      	bx	lr
  401f0a:	bf00      	nop

00401f0c <_sbrk_r>:
  401f0c:	b538      	push	{r3, r4, r5, lr}
  401f0e:	4c07      	ldr	r4, [pc, #28]	; (401f2c <_sbrk_r+0x20>)
  401f10:	2300      	movs	r3, #0
  401f12:	4605      	mov	r5, r0
  401f14:	4608      	mov	r0, r1
  401f16:	6023      	str	r3, [r4, #0]
  401f18:	f7fe fda0 	bl	400a5c <_sbrk>
  401f1c:	1c43      	adds	r3, r0, #1
  401f1e:	d000      	beq.n	401f22 <_sbrk_r+0x16>
  401f20:	bd38      	pop	{r3, r4, r5, pc}
  401f22:	6823      	ldr	r3, [r4, #0]
  401f24:	2b00      	cmp	r3, #0
  401f26:	d0fb      	beq.n	401f20 <_sbrk_r+0x14>
  401f28:	602b      	str	r3, [r5, #0]
  401f2a:	bd38      	pop	{r3, r4, r5, pc}
  401f2c:	20000bac 	.word	0x20000bac

00401f30 <setbuf>:
  401f30:	2900      	cmp	r1, #0
  401f32:	bf0c      	ite	eq
  401f34:	2202      	moveq	r2, #2
  401f36:	2200      	movne	r2, #0
  401f38:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401f3c:	f000 b800 	b.w	401f40 <setvbuf>

00401f40 <setvbuf>:
  401f40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401f44:	4c51      	ldr	r4, [pc, #324]	; (40208c <setvbuf+0x14c>)
  401f46:	6825      	ldr	r5, [r4, #0]
  401f48:	b083      	sub	sp, #12
  401f4a:	4604      	mov	r4, r0
  401f4c:	460f      	mov	r7, r1
  401f4e:	4690      	mov	r8, r2
  401f50:	461e      	mov	r6, r3
  401f52:	b115      	cbz	r5, 401f5a <setvbuf+0x1a>
  401f54:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401f56:	2b00      	cmp	r3, #0
  401f58:	d079      	beq.n	40204e <setvbuf+0x10e>
  401f5a:	f1b8 0f02 	cmp.w	r8, #2
  401f5e:	d004      	beq.n	401f6a <setvbuf+0x2a>
  401f60:	f1b8 0f01 	cmp.w	r8, #1
  401f64:	d87f      	bhi.n	402066 <setvbuf+0x126>
  401f66:	2e00      	cmp	r6, #0
  401f68:	db7d      	blt.n	402066 <setvbuf+0x126>
  401f6a:	4621      	mov	r1, r4
  401f6c:	4628      	mov	r0, r5
  401f6e:	f003 fd7f 	bl	405a70 <_fflush_r>
  401f72:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401f74:	b141      	cbz	r1, 401f88 <setvbuf+0x48>
  401f76:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401f7a:	4299      	cmp	r1, r3
  401f7c:	d002      	beq.n	401f84 <setvbuf+0x44>
  401f7e:	4628      	mov	r0, r5
  401f80:	f003 fed4 	bl	405d2c <_free_r>
  401f84:	2300      	movs	r3, #0
  401f86:	6323      	str	r3, [r4, #48]	; 0x30
  401f88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401f8c:	2200      	movs	r2, #0
  401f8e:	61a2      	str	r2, [r4, #24]
  401f90:	6062      	str	r2, [r4, #4]
  401f92:	061a      	lsls	r2, r3, #24
  401f94:	d454      	bmi.n	402040 <setvbuf+0x100>
  401f96:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  401f9a:	f023 0303 	bic.w	r3, r3, #3
  401f9e:	f1b8 0f02 	cmp.w	r8, #2
  401fa2:	81a3      	strh	r3, [r4, #12]
  401fa4:	d039      	beq.n	40201a <setvbuf+0xda>
  401fa6:	ab01      	add	r3, sp, #4
  401fa8:	466a      	mov	r2, sp
  401faa:	4621      	mov	r1, r4
  401fac:	4628      	mov	r0, r5
  401fae:	f004 f95f 	bl	406270 <__swhatbuf_r>
  401fb2:	89a3      	ldrh	r3, [r4, #12]
  401fb4:	4318      	orrs	r0, r3
  401fb6:	81a0      	strh	r0, [r4, #12]
  401fb8:	b326      	cbz	r6, 402004 <setvbuf+0xc4>
  401fba:	b327      	cbz	r7, 402006 <setvbuf+0xc6>
  401fbc:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401fbe:	2b00      	cmp	r3, #0
  401fc0:	d04d      	beq.n	40205e <setvbuf+0x11e>
  401fc2:	9b00      	ldr	r3, [sp, #0]
  401fc4:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  401fc8:	6027      	str	r7, [r4, #0]
  401fca:	429e      	cmp	r6, r3
  401fcc:	bf1c      	itt	ne
  401fce:	f440 6000 	orrne.w	r0, r0, #2048	; 0x800
  401fd2:	81a0      	strhne	r0, [r4, #12]
  401fd4:	f1b8 0f01 	cmp.w	r8, #1
  401fd8:	bf08      	it	eq
  401fda:	f040 0001 	orreq.w	r0, r0, #1
  401fde:	b283      	uxth	r3, r0
  401fe0:	bf08      	it	eq
  401fe2:	81a0      	strheq	r0, [r4, #12]
  401fe4:	f003 0008 	and.w	r0, r3, #8
  401fe8:	b280      	uxth	r0, r0
  401fea:	6127      	str	r7, [r4, #16]
  401fec:	6166      	str	r6, [r4, #20]
  401fee:	b318      	cbz	r0, 402038 <setvbuf+0xf8>
  401ff0:	f013 0001 	ands.w	r0, r3, #1
  401ff4:	d02f      	beq.n	402056 <setvbuf+0x116>
  401ff6:	2000      	movs	r0, #0
  401ff8:	4276      	negs	r6, r6
  401ffa:	61a6      	str	r6, [r4, #24]
  401ffc:	60a0      	str	r0, [r4, #8]
  401ffe:	b003      	add	sp, #12
  402000:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402004:	9e00      	ldr	r6, [sp, #0]
  402006:	4630      	mov	r0, r6
  402008:	f7ff fb9a 	bl	401740 <malloc>
  40200c:	4607      	mov	r7, r0
  40200e:	b368      	cbz	r0, 40206c <setvbuf+0x12c>
  402010:	89a3      	ldrh	r3, [r4, #12]
  402012:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402016:	81a3      	strh	r3, [r4, #12]
  402018:	e7d0      	b.n	401fbc <setvbuf+0x7c>
  40201a:	2000      	movs	r0, #0
  40201c:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402020:	f043 0302 	orr.w	r3, r3, #2
  402024:	2500      	movs	r5, #0
  402026:	2101      	movs	r1, #1
  402028:	81a3      	strh	r3, [r4, #12]
  40202a:	60a5      	str	r5, [r4, #8]
  40202c:	6022      	str	r2, [r4, #0]
  40202e:	6122      	str	r2, [r4, #16]
  402030:	6161      	str	r1, [r4, #20]
  402032:	b003      	add	sp, #12
  402034:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402038:	60a0      	str	r0, [r4, #8]
  40203a:	b003      	add	sp, #12
  40203c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402040:	6921      	ldr	r1, [r4, #16]
  402042:	4628      	mov	r0, r5
  402044:	f003 fe72 	bl	405d2c <_free_r>
  402048:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40204c:	e7a3      	b.n	401f96 <setvbuf+0x56>
  40204e:	4628      	mov	r0, r5
  402050:	f003 fda2 	bl	405b98 <__sinit>
  402054:	e781      	b.n	401f5a <setvbuf+0x1a>
  402056:	60a6      	str	r6, [r4, #8]
  402058:	b003      	add	sp, #12
  40205a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40205e:	4628      	mov	r0, r5
  402060:	f003 fd9a 	bl	405b98 <__sinit>
  402064:	e7ad      	b.n	401fc2 <setvbuf+0x82>
  402066:	f04f 30ff 	mov.w	r0, #4294967295
  40206a:	e7e2      	b.n	402032 <setvbuf+0xf2>
  40206c:	f8dd 9000 	ldr.w	r9, [sp]
  402070:	45b1      	cmp	r9, r6
  402072:	d006      	beq.n	402082 <setvbuf+0x142>
  402074:	4648      	mov	r0, r9
  402076:	f7ff fb63 	bl	401740 <malloc>
  40207a:	4607      	mov	r7, r0
  40207c:	b108      	cbz	r0, 402082 <setvbuf+0x142>
  40207e:	464e      	mov	r6, r9
  402080:	e7c6      	b.n	402010 <setvbuf+0xd0>
  402082:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402086:	f04f 30ff 	mov.w	r0, #4294967295
  40208a:	e7c7      	b.n	40201c <setvbuf+0xdc>
  40208c:	20000438 	.word	0x20000438

00402090 <sprintf>:
  402090:	b40e      	push	{r1, r2, r3}
  402092:	b5f0      	push	{r4, r5, r6, r7, lr}
  402094:	b09c      	sub	sp, #112	; 0x70
  402096:	ab21      	add	r3, sp, #132	; 0x84
  402098:	490f      	ldr	r1, [pc, #60]	; (4020d8 <sprintf+0x48>)
  40209a:	f853 2b04 	ldr.w	r2, [r3], #4
  40209e:	9301      	str	r3, [sp, #4]
  4020a0:	4605      	mov	r5, r0
  4020a2:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4020a6:	6808      	ldr	r0, [r1, #0]
  4020a8:	9502      	str	r5, [sp, #8]
  4020aa:	f44f 7702 	mov.w	r7, #520	; 0x208
  4020ae:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4020b2:	a902      	add	r1, sp, #8
  4020b4:	9506      	str	r5, [sp, #24]
  4020b6:	f8ad 7014 	strh.w	r7, [sp, #20]
  4020ba:	9404      	str	r4, [sp, #16]
  4020bc:	9407      	str	r4, [sp, #28]
  4020be:	f8ad 6016 	strh.w	r6, [sp, #22]
  4020c2:	f000 f93f 	bl	402344 <_svfprintf_r>
  4020c6:	9b02      	ldr	r3, [sp, #8]
  4020c8:	2200      	movs	r2, #0
  4020ca:	701a      	strb	r2, [r3, #0]
  4020cc:	b01c      	add	sp, #112	; 0x70
  4020ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4020d2:	b003      	add	sp, #12
  4020d4:	4770      	bx	lr
  4020d6:	bf00      	nop
  4020d8:	20000438 	.word	0x20000438

004020dc <strcat>:
  4020dc:	0783      	lsls	r3, r0, #30
  4020de:	b510      	push	{r4, lr}
  4020e0:	4604      	mov	r4, r0
  4020e2:	d110      	bne.n	402106 <strcat+0x2a>
  4020e4:	6802      	ldr	r2, [r0, #0]
  4020e6:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  4020ea:	ea23 0302 	bic.w	r3, r3, r2
  4020ee:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  4020f2:	d108      	bne.n	402106 <strcat+0x2a>
  4020f4:	f850 2f04 	ldr.w	r2, [r0, #4]!
  4020f8:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  4020fc:	ea23 0302 	bic.w	r3, r3, r2
  402100:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402104:	d0f6      	beq.n	4020f4 <strcat+0x18>
  402106:	7803      	ldrb	r3, [r0, #0]
  402108:	b11b      	cbz	r3, 402112 <strcat+0x36>
  40210a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  40210e:	2b00      	cmp	r3, #0
  402110:	d1fb      	bne.n	40210a <strcat+0x2e>
  402112:	f000 f803 	bl	40211c <strcpy>
  402116:	4620      	mov	r0, r4
  402118:	bd10      	pop	{r4, pc}
  40211a:	bf00      	nop

0040211c <strcpy>:
  40211c:	ea80 0201 	eor.w	r2, r0, r1
  402120:	4684      	mov	ip, r0
  402122:	f012 0f03 	tst.w	r2, #3
  402126:	d14f      	bne.n	4021c8 <strcpy+0xac>
  402128:	f011 0f03 	tst.w	r1, #3
  40212c:	d132      	bne.n	402194 <strcpy+0x78>
  40212e:	f84d 4d04 	str.w	r4, [sp, #-4]!
  402132:	f011 0f04 	tst.w	r1, #4
  402136:	f851 3b04 	ldr.w	r3, [r1], #4
  40213a:	d00b      	beq.n	402154 <strcpy+0x38>
  40213c:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402140:	439a      	bics	r2, r3
  402142:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402146:	bf04      	itt	eq
  402148:	f84c 3b04 	streq.w	r3, [ip], #4
  40214c:	f851 3b04 	ldreq.w	r3, [r1], #4
  402150:	d116      	bne.n	402180 <strcpy+0x64>
  402152:	bf00      	nop
  402154:	f851 4b04 	ldr.w	r4, [r1], #4
  402158:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  40215c:	439a      	bics	r2, r3
  40215e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402162:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  402166:	d10b      	bne.n	402180 <strcpy+0x64>
  402168:	f84c 3b04 	str.w	r3, [ip], #4
  40216c:	43a2      	bics	r2, r4
  40216e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402172:	bf04      	itt	eq
  402174:	f851 3b04 	ldreq.w	r3, [r1], #4
  402178:	f84c 4b04 	streq.w	r4, [ip], #4
  40217c:	d0ea      	beq.n	402154 <strcpy+0x38>
  40217e:	4623      	mov	r3, r4
  402180:	f80c 3b01 	strb.w	r3, [ip], #1
  402184:	f013 0fff 	tst.w	r3, #255	; 0xff
  402188:	ea4f 2333 	mov.w	r3, r3, ror #8
  40218c:	d1f8      	bne.n	402180 <strcpy+0x64>
  40218e:	f85d 4b04 	ldr.w	r4, [sp], #4
  402192:	4770      	bx	lr
  402194:	f011 0f01 	tst.w	r1, #1
  402198:	d006      	beq.n	4021a8 <strcpy+0x8c>
  40219a:	f811 2b01 	ldrb.w	r2, [r1], #1
  40219e:	f80c 2b01 	strb.w	r2, [ip], #1
  4021a2:	2a00      	cmp	r2, #0
  4021a4:	bf08      	it	eq
  4021a6:	4770      	bxeq	lr
  4021a8:	f011 0f02 	tst.w	r1, #2
  4021ac:	d0bf      	beq.n	40212e <strcpy+0x12>
  4021ae:	f831 2b02 	ldrh.w	r2, [r1], #2
  4021b2:	f012 0fff 	tst.w	r2, #255	; 0xff
  4021b6:	bf16      	itet	ne
  4021b8:	f82c 2b02 	strhne.w	r2, [ip], #2
  4021bc:	f88c 2000 	strbeq.w	r2, [ip]
  4021c0:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  4021c4:	d1b3      	bne.n	40212e <strcpy+0x12>
  4021c6:	4770      	bx	lr
  4021c8:	f811 2b01 	ldrb.w	r2, [r1], #1
  4021cc:	f80c 2b01 	strb.w	r2, [ip], #1
  4021d0:	2a00      	cmp	r2, #0
  4021d2:	d1f9      	bne.n	4021c8 <strcpy+0xac>
  4021d4:	4770      	bx	lr
  4021d6:	bf00      	nop
	...

00402200 <strlen>:
  402200:	f890 f000 	pld	[r0]
  402204:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402208:	f020 0107 	bic.w	r1, r0, #7
  40220c:	f06f 0c00 	mvn.w	ip, #0
  402210:	f010 0407 	ands.w	r4, r0, #7
  402214:	f891 f020 	pld	[r1, #32]
  402218:	f040 8049 	bne.w	4022ae <strlen+0xae>
  40221c:	f04f 0400 	mov.w	r4, #0
  402220:	f06f 0007 	mvn.w	r0, #7
  402224:	e9d1 2300 	ldrd	r2, r3, [r1]
  402228:	f891 f040 	pld	[r1, #64]	; 0x40
  40222c:	f100 0008 	add.w	r0, r0, #8
  402230:	fa82 f24c 	uadd8	r2, r2, ip
  402234:	faa4 f28c 	sel	r2, r4, ip
  402238:	fa83 f34c 	uadd8	r3, r3, ip
  40223c:	faa2 f38c 	sel	r3, r2, ip
  402240:	bb4b      	cbnz	r3, 402296 <strlen+0x96>
  402242:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402246:	fa82 f24c 	uadd8	r2, r2, ip
  40224a:	f100 0008 	add.w	r0, r0, #8
  40224e:	faa4 f28c 	sel	r2, r4, ip
  402252:	fa83 f34c 	uadd8	r3, r3, ip
  402256:	faa2 f38c 	sel	r3, r2, ip
  40225a:	b9e3      	cbnz	r3, 402296 <strlen+0x96>
  40225c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  402260:	fa82 f24c 	uadd8	r2, r2, ip
  402264:	f100 0008 	add.w	r0, r0, #8
  402268:	faa4 f28c 	sel	r2, r4, ip
  40226c:	fa83 f34c 	uadd8	r3, r3, ip
  402270:	faa2 f38c 	sel	r3, r2, ip
  402274:	b97b      	cbnz	r3, 402296 <strlen+0x96>
  402276:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40227a:	f101 0120 	add.w	r1, r1, #32
  40227e:	fa82 f24c 	uadd8	r2, r2, ip
  402282:	f100 0008 	add.w	r0, r0, #8
  402286:	faa4 f28c 	sel	r2, r4, ip
  40228a:	fa83 f34c 	uadd8	r3, r3, ip
  40228e:	faa2 f38c 	sel	r3, r2, ip
  402292:	2b00      	cmp	r3, #0
  402294:	d0c6      	beq.n	402224 <strlen+0x24>
  402296:	2a00      	cmp	r2, #0
  402298:	bf04      	itt	eq
  40229a:	3004      	addeq	r0, #4
  40229c:	461a      	moveq	r2, r3
  40229e:	ba12      	rev	r2, r2
  4022a0:	fab2 f282 	clz	r2, r2
  4022a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4022a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4022ac:	4770      	bx	lr
  4022ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4022b2:	f004 0503 	and.w	r5, r4, #3
  4022b6:	f1c4 0000 	rsb	r0, r4, #0
  4022ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4022be:	f014 0f04 	tst.w	r4, #4
  4022c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4022c6:	fa0c f505 	lsl.w	r5, ip, r5
  4022ca:	ea62 0205 	orn	r2, r2, r5
  4022ce:	bf1c      	itt	ne
  4022d0:	ea63 0305 	ornne	r3, r3, r5
  4022d4:	4662      	movne	r2, ip
  4022d6:	f04f 0400 	mov.w	r4, #0
  4022da:	e7a9      	b.n	402230 <strlen+0x30>

004022dc <strncpy>:
  4022dc:	ea40 0301 	orr.w	r3, r0, r1
  4022e0:	079b      	lsls	r3, r3, #30
  4022e2:	b470      	push	{r4, r5, r6}
  4022e4:	d12b      	bne.n	40233e <strncpy+0x62>
  4022e6:	2a03      	cmp	r2, #3
  4022e8:	d929      	bls.n	40233e <strncpy+0x62>
  4022ea:	460c      	mov	r4, r1
  4022ec:	4603      	mov	r3, r0
  4022ee:	4621      	mov	r1, r4
  4022f0:	f854 6b04 	ldr.w	r6, [r4], #4
  4022f4:	f1a6 3501 	sub.w	r5, r6, #16843009	; 0x1010101
  4022f8:	ea25 0506 	bic.w	r5, r5, r6
  4022fc:	f015 3f80 	tst.w	r5, #2155905152	; 0x80808080
  402300:	d106      	bne.n	402310 <strncpy+0x34>
  402302:	3a04      	subs	r2, #4
  402304:	2a03      	cmp	r2, #3
  402306:	f843 6b04 	str.w	r6, [r3], #4
  40230a:	4621      	mov	r1, r4
  40230c:	d8ef      	bhi.n	4022ee <strncpy+0x12>
  40230e:	b1a2      	cbz	r2, 40233a <strncpy+0x5e>
  402310:	780c      	ldrb	r4, [r1, #0]
  402312:	701c      	strb	r4, [r3, #0]
  402314:	3a01      	subs	r2, #1
  402316:	3301      	adds	r3, #1
  402318:	3101      	adds	r1, #1
  40231a:	b13c      	cbz	r4, 40232c <strncpy+0x50>
  40231c:	b16a      	cbz	r2, 40233a <strncpy+0x5e>
  40231e:	f811 4b01 	ldrb.w	r4, [r1], #1
  402322:	f803 4b01 	strb.w	r4, [r3], #1
  402326:	3a01      	subs	r2, #1
  402328:	2c00      	cmp	r4, #0
  40232a:	d1f7      	bne.n	40231c <strncpy+0x40>
  40232c:	b12a      	cbz	r2, 40233a <strncpy+0x5e>
  40232e:	441a      	add	r2, r3
  402330:	2100      	movs	r1, #0
  402332:	f803 1b01 	strb.w	r1, [r3], #1
  402336:	429a      	cmp	r2, r3
  402338:	d1fb      	bne.n	402332 <strncpy+0x56>
  40233a:	bc70      	pop	{r4, r5, r6}
  40233c:	4770      	bx	lr
  40233e:	4603      	mov	r3, r0
  402340:	e7e5      	b.n	40230e <strncpy+0x32>
  402342:	bf00      	nop

00402344 <_svfprintf_r>:
  402344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402348:	b0c1      	sub	sp, #260	; 0x104
  40234a:	460c      	mov	r4, r1
  40234c:	9109      	str	r1, [sp, #36]	; 0x24
  40234e:	4615      	mov	r5, r2
  402350:	930e      	str	r3, [sp, #56]	; 0x38
  402352:	900a      	str	r0, [sp, #40]	; 0x28
  402354:	f003 ff88 	bl	406268 <_localeconv_r>
  402358:	6803      	ldr	r3, [r0, #0]
  40235a:	9317      	str	r3, [sp, #92]	; 0x5c
  40235c:	4618      	mov	r0, r3
  40235e:	f7ff ff4f 	bl	402200 <strlen>
  402362:	89a3      	ldrh	r3, [r4, #12]
  402364:	9016      	str	r0, [sp, #88]	; 0x58
  402366:	061e      	lsls	r6, r3, #24
  402368:	d503      	bpl.n	402372 <_svfprintf_r+0x2e>
  40236a:	6923      	ldr	r3, [r4, #16]
  40236c:	2b00      	cmp	r3, #0
  40236e:	f001 8119 	beq.w	4035a4 <_svfprintf_r+0x1260>
  402372:	2300      	movs	r3, #0
  402374:	461a      	mov	r2, r3
  402376:	9312      	str	r3, [sp, #72]	; 0x48
  402378:	9325      	str	r3, [sp, #148]	; 0x94
  40237a:	9324      	str	r3, [sp, #144]	; 0x90
  40237c:	9319      	str	r3, [sp, #100]	; 0x64
  40237e:	930b      	str	r3, [sp, #44]	; 0x2c
  402380:	f8df a464 	ldr.w	sl, [pc, #1124]	; 4027e8 <_svfprintf_r+0x4a4>
  402384:	9214      	str	r2, [sp, #80]	; 0x50
  402386:	ab30      	add	r3, sp, #192	; 0xc0
  402388:	9323      	str	r3, [sp, #140]	; 0x8c
  40238a:	4699      	mov	r9, r3
  40238c:	9215      	str	r2, [sp, #84]	; 0x54
  40238e:	46a8      	mov	r8, r5
  402390:	f898 3000 	ldrb.w	r3, [r8]
  402394:	4644      	mov	r4, r8
  402396:	b1eb      	cbz	r3, 4023d4 <_svfprintf_r+0x90>
  402398:	2b25      	cmp	r3, #37	; 0x25
  40239a:	d102      	bne.n	4023a2 <_svfprintf_r+0x5e>
  40239c:	e01a      	b.n	4023d4 <_svfprintf_r+0x90>
  40239e:	2b25      	cmp	r3, #37	; 0x25
  4023a0:	d003      	beq.n	4023aa <_svfprintf_r+0x66>
  4023a2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4023a6:	2b00      	cmp	r3, #0
  4023a8:	d1f9      	bne.n	40239e <_svfprintf_r+0x5a>
  4023aa:	ebc8 0504 	rsb	r5, r8, r4
  4023ae:	b18d      	cbz	r5, 4023d4 <_svfprintf_r+0x90>
  4023b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4023b2:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4023b4:	f8c9 8000 	str.w	r8, [r9]
  4023b8:	3301      	adds	r3, #1
  4023ba:	442a      	add	r2, r5
  4023bc:	2b07      	cmp	r3, #7
  4023be:	f8c9 5004 	str.w	r5, [r9, #4]
  4023c2:	9225      	str	r2, [sp, #148]	; 0x94
  4023c4:	9324      	str	r3, [sp, #144]	; 0x90
  4023c6:	f300 80a6 	bgt.w	402516 <_svfprintf_r+0x1d2>
  4023ca:	f109 0908 	add.w	r9, r9, #8
  4023ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4023d0:	442b      	add	r3, r5
  4023d2:	930b      	str	r3, [sp, #44]	; 0x2c
  4023d4:	7823      	ldrb	r3, [r4, #0]
  4023d6:	2b00      	cmp	r3, #0
  4023d8:	f000 80a6 	beq.w	402528 <_svfprintf_r+0x1e4>
  4023dc:	2300      	movs	r3, #0
  4023de:	461a      	mov	r2, r3
  4023e0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4023e4:	4619      	mov	r1, r3
  4023e6:	930c      	str	r3, [sp, #48]	; 0x30
  4023e8:	9307      	str	r3, [sp, #28]
  4023ea:	f04f 3bff 	mov.w	fp, #4294967295
  4023ee:	7863      	ldrb	r3, [r4, #1]
  4023f0:	f104 0801 	add.w	r8, r4, #1
  4023f4:	465d      	mov	r5, fp
  4023f6:	f108 0801 	add.w	r8, r8, #1
  4023fa:	f1a3 0020 	sub.w	r0, r3, #32
  4023fe:	2858      	cmp	r0, #88	; 0x58
  402400:	f200 8425 	bhi.w	402c4e <_svfprintf_r+0x90a>
  402404:	e8df f010 	tbh	[pc, r0, lsl #1]
  402408:	04230388 	.word	0x04230388
  40240c:	03900423 	.word	0x03900423
  402410:	04230423 	.word	0x04230423
  402414:	04230423 	.word	0x04230423
  402418:	04230423 	.word	0x04230423
  40241c:	03a50397 	.word	0x03a50397
  402420:	005d0423 	.word	0x005d0423
  402424:	042300e2 	.word	0x042300e2
  402428:	010500fe 	.word	0x010500fe
  40242c:	01050105 	.word	0x01050105
  402430:	01050105 	.word	0x01050105
  402434:	01050105 	.word	0x01050105
  402438:	01050105 	.word	0x01050105
  40243c:	04230423 	.word	0x04230423
  402440:	04230423 	.word	0x04230423
  402444:	04230423 	.word	0x04230423
  402448:	04230423 	.word	0x04230423
  40244c:	04230423 	.word	0x04230423
  402450:	02810115 	.word	0x02810115
  402454:	02810423 	.word	0x02810423
  402458:	04230423 	.word	0x04230423
  40245c:	04230423 	.word	0x04230423
  402460:	042302c6 	.word	0x042302c6
  402464:	02cd0423 	.word	0x02cd0423
  402468:	04230423 	.word	0x04230423
  40246c:	04230423 	.word	0x04230423
  402470:	02f70423 	.word	0x02f70423
  402474:	04230423 	.word	0x04230423
  402478:	04230325 	.word	0x04230325
  40247c:	04230423 	.word	0x04230423
  402480:	04230423 	.word	0x04230423
  402484:	04230423 	.word	0x04230423
  402488:	04230423 	.word	0x04230423
  40248c:	03660423 	.word	0x03660423
  402490:	02810379 	.word	0x02810379
  402494:	02810281 	.word	0x02810281
  402498:	03790381 	.word	0x03790381
  40249c:	04230423 	.word	0x04230423
  4024a0:	042303d1 	.word	0x042303d1
  4024a4:	00a303db 	.word	0x00a303db
  4024a8:	03ee0064 	.word	0x03ee0064
  4024ac:	03f50423 	.word	0x03f50423
  4024b0:	03aa0423 	.word	0x03aa0423
  4024b4:	04230423 	.word	0x04230423
  4024b8:	03bc      	.short	0x03bc
  4024ba:	980c      	ldr	r0, [sp, #48]	; 0x30
  4024bc:	930e      	str	r3, [sp, #56]	; 0x38
  4024be:	4240      	negs	r0, r0
  4024c0:	900c      	str	r0, [sp, #48]	; 0x30
  4024c2:	9b07      	ldr	r3, [sp, #28]
  4024c4:	f043 0304 	orr.w	r3, r3, #4
  4024c8:	9307      	str	r3, [sp, #28]
  4024ca:	f898 3000 	ldrb.w	r3, [r8]
  4024ce:	e792      	b.n	4023f6 <_svfprintf_r+0xb2>
  4024d0:	980e      	ldr	r0, [sp, #56]	; 0x38
  4024d2:	46ab      	mov	fp, r5
  4024d4:	2100      	movs	r1, #0
  4024d6:	6804      	ldr	r4, [r0, #0]
  4024d8:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4024dc:	1d07      	adds	r7, r0, #4
  4024de:	9807      	ldr	r0, [sp, #28]
  4024e0:	2330      	movs	r3, #48	; 0x30
  4024e2:	2278      	movs	r2, #120	; 0x78
  4024e4:	458b      	cmp	fp, r1
  4024e6:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  4024ea:	f04f 0500 	mov.w	r5, #0
  4024ee:	f88d 2071 	strb.w	r2, [sp, #113]	; 0x71
  4024f2:	f040 0302 	orr.w	r3, r0, #2
  4024f6:	f2c0 83c7 	blt.w	402c88 <_svfprintf_r+0x944>
  4024fa:	f020 0380 	bic.w	r3, r0, #128	; 0x80
  4024fe:	f043 0302 	orr.w	r3, r3, #2
  402502:	9307      	str	r3, [sp, #28]
  402504:	ea54 0305 	orrs.w	r3, r4, r5
  402508:	970e      	str	r7, [sp, #56]	; 0x38
  40250a:	f000 8393 	beq.w	402c34 <_svfprintf_r+0x8f0>
  40250e:	460f      	mov	r7, r1
  402510:	9211      	str	r2, [sp, #68]	; 0x44
  402512:	48b3      	ldr	r0, [pc, #716]	; (4027e0 <_svfprintf_r+0x49c>)
  402514:	e2ce      	b.n	402ab4 <_svfprintf_r+0x770>
  402516:	aa23      	add	r2, sp, #140	; 0x8c
  402518:	9909      	ldr	r1, [sp, #36]	; 0x24
  40251a:	980a      	ldr	r0, [sp, #40]	; 0x28
  40251c:	f004 fd16 	bl	406f4c <__ssprint_r>
  402520:	b948      	cbnz	r0, 402536 <_svfprintf_r+0x1f2>
  402522:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402526:	e752      	b.n	4023ce <_svfprintf_r+0x8a>
  402528:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40252a:	b123      	cbz	r3, 402536 <_svfprintf_r+0x1f2>
  40252c:	980a      	ldr	r0, [sp, #40]	; 0x28
  40252e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402530:	aa23      	add	r2, sp, #140	; 0x8c
  402532:	f004 fd0b 	bl	406f4c <__ssprint_r>
  402536:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402538:	899b      	ldrh	r3, [r3, #12]
  40253a:	f013 0f40 	tst.w	r3, #64	; 0x40
  40253e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402540:	bf18      	it	ne
  402542:	f04f 33ff 	movne.w	r3, #4294967295
  402546:	4618      	mov	r0, r3
  402548:	b041      	add	sp, #260	; 0x104
  40254a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40254e:	9311      	str	r3, [sp, #68]	; 0x44
  402550:	46ab      	mov	fp, r5
  402552:	2a00      	cmp	r2, #0
  402554:	f041 8223 	bne.w	40399e <_svfprintf_r+0x165a>
  402558:	9a07      	ldr	r2, [sp, #28]
  40255a:	f012 0320 	ands.w	r3, r2, #32
  40255e:	f000 822e 	beq.w	4029be <_svfprintf_r+0x67a>
  402562:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  402564:	3707      	adds	r7, #7
  402566:	f027 0307 	bic.w	r3, r7, #7
  40256a:	2700      	movs	r7, #0
  40256c:	f103 0108 	add.w	r1, r3, #8
  402570:	45bb      	cmp	fp, r7
  402572:	910e      	str	r1, [sp, #56]	; 0x38
  402574:	e9d3 4500 	ldrd	r4, r5, [r3]
  402578:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  40257c:	f2c0 8752 	blt.w	403424 <_svfprintf_r+0x10e0>
  402580:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  402584:	9307      	str	r3, [sp, #28]
  402586:	ea54 0305 	orrs.w	r3, r4, r5
  40258a:	f000 8375 	beq.w	402c78 <_svfprintf_r+0x934>
  40258e:	ae30      	add	r6, sp, #192	; 0xc0
  402590:	08e2      	lsrs	r2, r4, #3
  402592:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402596:	08e9      	lsrs	r1, r5, #3
  402598:	f004 0307 	and.w	r3, r4, #7
  40259c:	460d      	mov	r5, r1
  40259e:	4614      	mov	r4, r2
  4025a0:	3330      	adds	r3, #48	; 0x30
  4025a2:	ea54 0205 	orrs.w	r2, r4, r5
  4025a6:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4025aa:	d1f1      	bne.n	402590 <_svfprintf_r+0x24c>
  4025ac:	9a07      	ldr	r2, [sp, #28]
  4025ae:	07d1      	lsls	r1, r2, #31
  4025b0:	f140 8084 	bpl.w	4026bc <_svfprintf_r+0x378>
  4025b4:	2b30      	cmp	r3, #48	; 0x30
  4025b6:	f000 8081 	beq.w	4026bc <_svfprintf_r+0x378>
  4025ba:	2230      	movs	r2, #48	; 0x30
  4025bc:	1e73      	subs	r3, r6, #1
  4025be:	f806 2c01 	strb.w	r2, [r6, #-1]
  4025c2:	aa30      	add	r2, sp, #192	; 0xc0
  4025c4:	1ad2      	subs	r2, r2, r3
  4025c6:	920d      	str	r2, [sp, #52]	; 0x34
  4025c8:	461e      	mov	r6, r3
  4025ca:	e07a      	b.n	4026c2 <_svfprintf_r+0x37e>
  4025cc:	f898 3000 	ldrb.w	r3, [r8]
  4025d0:	2b2a      	cmp	r3, #42	; 0x2a
  4025d2:	f108 0401 	add.w	r4, r8, #1
  4025d6:	f001 81b1 	beq.w	40393c <_svfprintf_r+0x15f8>
  4025da:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025de:	2809      	cmp	r0, #9
  4025e0:	bf98      	it	ls
  4025e2:	2500      	movls	r5, #0
  4025e4:	f201 8164 	bhi.w	4038b0 <_svfprintf_r+0x156c>
  4025e8:	f814 3b01 	ldrb.w	r3, [r4], #1
  4025ec:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4025f0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
  4025f4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025f8:	2809      	cmp	r0, #9
  4025fa:	d9f5      	bls.n	4025e8 <_svfprintf_r+0x2a4>
  4025fc:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
  402600:	46a0      	mov	r8, r4
  402602:	e6fa      	b.n	4023fa <_svfprintf_r+0xb6>
  402604:	9b07      	ldr	r3, [sp, #28]
  402606:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40260a:	9307      	str	r3, [sp, #28]
  40260c:	f898 3000 	ldrb.w	r3, [r8]
  402610:	e6f1      	b.n	4023f6 <_svfprintf_r+0xb2>
  402612:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402616:	2300      	movs	r3, #0
  402618:	461c      	mov	r4, r3
  40261a:	f818 3b01 	ldrb.w	r3, [r8], #1
  40261e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402622:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402626:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40262a:	2809      	cmp	r0, #9
  40262c:	d9f5      	bls.n	40261a <_svfprintf_r+0x2d6>
  40262e:	940c      	str	r4, [sp, #48]	; 0x30
  402630:	e6e3      	b.n	4023fa <_svfprintf_r+0xb6>
  402632:	9311      	str	r3, [sp, #68]	; 0x44
  402634:	46ab      	mov	fp, r5
  402636:	2a00      	cmp	r2, #0
  402638:	f041 81c9 	bne.w	4039ce <_svfprintf_r+0x168a>
  40263c:	9b07      	ldr	r3, [sp, #28]
  40263e:	f043 0310 	orr.w	r3, r3, #16
  402642:	9307      	str	r3, [sp, #28]
  402644:	9b07      	ldr	r3, [sp, #28]
  402646:	0698      	lsls	r0, r3, #26
  402648:	f140 8530 	bpl.w	4030ac <_svfprintf_r+0xd68>
  40264c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  40264e:	3707      	adds	r7, #7
  402650:	f027 0707 	bic.w	r7, r7, #7
  402654:	e9d7 2300 	ldrd	r2, r3, [r7]
  402658:	f107 0108 	add.w	r1, r7, #8
  40265c:	910e      	str	r1, [sp, #56]	; 0x38
  40265e:	4614      	mov	r4, r2
  402660:	461d      	mov	r5, r3
  402662:	2a00      	cmp	r2, #0
  402664:	f173 0300 	sbcs.w	r3, r3, #0
  402668:	f2c0 855b 	blt.w	403122 <_svfprintf_r+0xdde>
  40266c:	f1bb 0f00 	cmp.w	fp, #0
  402670:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402674:	f2c0 8538 	blt.w	4030e8 <_svfprintf_r+0xda4>
  402678:	9b07      	ldr	r3, [sp, #28]
  40267a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40267e:	9307      	str	r3, [sp, #28]
  402680:	ea54 0305 	orrs.w	r3, r4, r5
  402684:	f000 81db 	beq.w	402a3e <_svfprintf_r+0x6fa>
  402688:	2d00      	cmp	r5, #0
  40268a:	bf08      	it	eq
  40268c:	2c0a      	cmpeq	r4, #10
  40268e:	f0c0 81db 	bcc.w	402a48 <_svfprintf_r+0x704>
  402692:	ae30      	add	r6, sp, #192	; 0xc0
  402694:	4620      	mov	r0, r4
  402696:	4629      	mov	r1, r5
  402698:	220a      	movs	r2, #10
  40269a:	2300      	movs	r3, #0
  40269c:	f005 fb32 	bl	407d04 <__aeabi_uldivmod>
  4026a0:	3230      	adds	r2, #48	; 0x30
  4026a2:	f806 2d01 	strb.w	r2, [r6, #-1]!
  4026a6:	4620      	mov	r0, r4
  4026a8:	4629      	mov	r1, r5
  4026aa:	2300      	movs	r3, #0
  4026ac:	220a      	movs	r2, #10
  4026ae:	f005 fb29 	bl	407d04 <__aeabi_uldivmod>
  4026b2:	4604      	mov	r4, r0
  4026b4:	460d      	mov	r5, r1
  4026b6:	ea54 0305 	orrs.w	r3, r4, r5
  4026ba:	d1eb      	bne.n	402694 <_svfprintf_r+0x350>
  4026bc:	ab30      	add	r3, sp, #192	; 0xc0
  4026be:	1b9b      	subs	r3, r3, r6
  4026c0:	930d      	str	r3, [sp, #52]	; 0x34
  4026c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4026c4:	455b      	cmp	r3, fp
  4026c6:	bfb8      	it	lt
  4026c8:	465b      	movlt	r3, fp
  4026ca:	9308      	str	r3, [sp, #32]
  4026cc:	2300      	movs	r3, #0
  4026ce:	9313      	str	r3, [sp, #76]	; 0x4c
  4026d0:	b117      	cbz	r7, 4026d8 <_svfprintf_r+0x394>
  4026d2:	9b08      	ldr	r3, [sp, #32]
  4026d4:	3301      	adds	r3, #1
  4026d6:	9308      	str	r3, [sp, #32]
  4026d8:	9b07      	ldr	r3, [sp, #28]
  4026da:	f013 0302 	ands.w	r3, r3, #2
  4026de:	930f      	str	r3, [sp, #60]	; 0x3c
  4026e0:	d002      	beq.n	4026e8 <_svfprintf_r+0x3a4>
  4026e2:	9b08      	ldr	r3, [sp, #32]
  4026e4:	3302      	adds	r3, #2
  4026e6:	9308      	str	r3, [sp, #32]
  4026e8:	9b07      	ldr	r3, [sp, #28]
  4026ea:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  4026ee:	9310      	str	r3, [sp, #64]	; 0x40
  4026f0:	f040 82d7 	bne.w	402ca2 <_svfprintf_r+0x95e>
  4026f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4026f6:	9a08      	ldr	r2, [sp, #32]
  4026f8:	1a9d      	subs	r5, r3, r2
  4026fa:	2d00      	cmp	r5, #0
  4026fc:	f340 82d1 	ble.w	402ca2 <_svfprintf_r+0x95e>
  402700:	2d10      	cmp	r5, #16
  402702:	9925      	ldr	r1, [sp, #148]	; 0x94
  402704:	9a24      	ldr	r2, [sp, #144]	; 0x90
  402706:	4f37      	ldr	r7, [pc, #220]	; (4027e4 <_svfprintf_r+0x4a0>)
  402708:	dd27      	ble.n	40275a <_svfprintf_r+0x416>
  40270a:	9618      	str	r6, [sp, #96]	; 0x60
  40270c:	4648      	mov	r0, r9
  40270e:	2410      	movs	r4, #16
  402710:	46b9      	mov	r9, r7
  402712:	9e09      	ldr	r6, [sp, #36]	; 0x24
  402714:	462f      	mov	r7, r5
  402716:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402718:	e004      	b.n	402724 <_svfprintf_r+0x3e0>
  40271a:	3f10      	subs	r7, #16
  40271c:	2f10      	cmp	r7, #16
  40271e:	f100 0008 	add.w	r0, r0, #8
  402722:	dd16      	ble.n	402752 <_svfprintf_r+0x40e>
  402724:	3201      	adds	r2, #1
  402726:	4b2f      	ldr	r3, [pc, #188]	; (4027e4 <_svfprintf_r+0x4a0>)
  402728:	9224      	str	r2, [sp, #144]	; 0x90
  40272a:	3110      	adds	r1, #16
  40272c:	2a07      	cmp	r2, #7
  40272e:	9125      	str	r1, [sp, #148]	; 0x94
  402730:	e880 0018 	stmia.w	r0, {r3, r4}
  402734:	ddf1      	ble.n	40271a <_svfprintf_r+0x3d6>
  402736:	aa23      	add	r2, sp, #140	; 0x8c
  402738:	4631      	mov	r1, r6
  40273a:	4628      	mov	r0, r5
  40273c:	f004 fc06 	bl	406f4c <__ssprint_r>
  402740:	2800      	cmp	r0, #0
  402742:	f47f aef8 	bne.w	402536 <_svfprintf_r+0x1f2>
  402746:	3f10      	subs	r7, #16
  402748:	2f10      	cmp	r7, #16
  40274a:	9925      	ldr	r1, [sp, #148]	; 0x94
  40274c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40274e:	a830      	add	r0, sp, #192	; 0xc0
  402750:	dce8      	bgt.n	402724 <_svfprintf_r+0x3e0>
  402752:	9e18      	ldr	r6, [sp, #96]	; 0x60
  402754:	463d      	mov	r5, r7
  402756:	464f      	mov	r7, r9
  402758:	4681      	mov	r9, r0
  40275a:	3201      	adds	r2, #1
  40275c:	186c      	adds	r4, r5, r1
  40275e:	2a07      	cmp	r2, #7
  402760:	9425      	str	r4, [sp, #148]	; 0x94
  402762:	9224      	str	r2, [sp, #144]	; 0x90
  402764:	f8c9 7000 	str.w	r7, [r9]
  402768:	f8c9 5004 	str.w	r5, [r9, #4]
  40276c:	f300 8428 	bgt.w	402fc0 <_svfprintf_r+0xc7c>
  402770:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402774:	f109 0908 	add.w	r9, r9, #8
  402778:	b177      	cbz	r7, 402798 <_svfprintf_r+0x454>
  40277a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40277c:	3301      	adds	r3, #1
  40277e:	3401      	adds	r4, #1
  402780:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  402784:	2201      	movs	r2, #1
  402786:	2b07      	cmp	r3, #7
  402788:	9425      	str	r4, [sp, #148]	; 0x94
  40278a:	9324      	str	r3, [sp, #144]	; 0x90
  40278c:	e889 0006 	stmia.w	r9, {r1, r2}
  402790:	f300 83a0 	bgt.w	402ed4 <_svfprintf_r+0xb90>
  402794:	f109 0908 	add.w	r9, r9, #8
  402798:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40279a:	b16b      	cbz	r3, 4027b8 <_svfprintf_r+0x474>
  40279c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40279e:	3301      	adds	r3, #1
  4027a0:	3402      	adds	r4, #2
  4027a2:	a91c      	add	r1, sp, #112	; 0x70
  4027a4:	2202      	movs	r2, #2
  4027a6:	2b07      	cmp	r3, #7
  4027a8:	9425      	str	r4, [sp, #148]	; 0x94
  4027aa:	9324      	str	r3, [sp, #144]	; 0x90
  4027ac:	e889 0006 	stmia.w	r9, {r1, r2}
  4027b0:	f300 839c 	bgt.w	402eec <_svfprintf_r+0xba8>
  4027b4:	f109 0908 	add.w	r9, r9, #8
  4027b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4027ba:	2b80      	cmp	r3, #128	; 0x80
  4027bc:	f000 82d5 	beq.w	402d6a <_svfprintf_r+0xa26>
  4027c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4027c2:	ebc3 070b 	rsb	r7, r3, fp
  4027c6:	2f00      	cmp	r7, #0
  4027c8:	dd39      	ble.n	40283e <_svfprintf_r+0x4fa>
  4027ca:	4a07      	ldr	r2, [pc, #28]	; (4027e8 <_svfprintf_r+0x4a4>)
  4027cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4027ce:	920f      	str	r2, [sp, #60]	; 0x3c
  4027d0:	2f10      	cmp	r7, #16
  4027d2:	dd28      	ble.n	402826 <_svfprintf_r+0x4e2>
  4027d4:	4622      	mov	r2, r4
  4027d6:	f04f 0b10 	mov.w	fp, #16
  4027da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4027dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4027de:	e00a      	b.n	4027f6 <_svfprintf_r+0x4b2>
  4027e0:	00408154 	.word	0x00408154
  4027e4:	00408174 	.word	0x00408174
  4027e8:	00408120 	.word	0x00408120
  4027ec:	3f10      	subs	r7, #16
  4027ee:	2f10      	cmp	r7, #16
  4027f0:	f109 0908 	add.w	r9, r9, #8
  4027f4:	dd16      	ble.n	402824 <_svfprintf_r+0x4e0>
  4027f6:	3301      	adds	r3, #1
  4027f8:	3210      	adds	r2, #16
  4027fa:	2b07      	cmp	r3, #7
  4027fc:	9225      	str	r2, [sp, #148]	; 0x94
  4027fe:	9324      	str	r3, [sp, #144]	; 0x90
  402800:	e889 0c00 	stmia.w	r9, {sl, fp}
  402804:	ddf2      	ble.n	4027ec <_svfprintf_r+0x4a8>
  402806:	aa23      	add	r2, sp, #140	; 0x8c
  402808:	4621      	mov	r1, r4
  40280a:	4628      	mov	r0, r5
  40280c:	f004 fb9e 	bl	406f4c <__ssprint_r>
  402810:	2800      	cmp	r0, #0
  402812:	f47f ae90 	bne.w	402536 <_svfprintf_r+0x1f2>
  402816:	3f10      	subs	r7, #16
  402818:	2f10      	cmp	r7, #16
  40281a:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40281c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40281e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402822:	dce8      	bgt.n	4027f6 <_svfprintf_r+0x4b2>
  402824:	4614      	mov	r4, r2
  402826:	3301      	adds	r3, #1
  402828:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40282a:	9324      	str	r3, [sp, #144]	; 0x90
  40282c:	443c      	add	r4, r7
  40282e:	2b07      	cmp	r3, #7
  402830:	9425      	str	r4, [sp, #148]	; 0x94
  402832:	e889 0084 	stmia.w	r9, {r2, r7}
  402836:	f300 8341 	bgt.w	402ebc <_svfprintf_r+0xb78>
  40283a:	f109 0908 	add.w	r9, r9, #8
  40283e:	9b07      	ldr	r3, [sp, #28]
  402840:	05da      	lsls	r2, r3, #23
  402842:	f100 8230 	bmi.w	402ca6 <_svfprintf_r+0x962>
  402846:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402848:	990d      	ldr	r1, [sp, #52]	; 0x34
  40284a:	f8c9 6000 	str.w	r6, [r9]
  40284e:	3301      	adds	r3, #1
  402850:	440c      	add	r4, r1
  402852:	2b07      	cmp	r3, #7
  402854:	9425      	str	r4, [sp, #148]	; 0x94
  402856:	f8c9 1004 	str.w	r1, [r9, #4]
  40285a:	9324      	str	r3, [sp, #144]	; 0x90
  40285c:	f300 8318 	bgt.w	402e90 <_svfprintf_r+0xb4c>
  402860:	f109 0908 	add.w	r9, r9, #8
  402864:	9b07      	ldr	r3, [sp, #28]
  402866:	0759      	lsls	r1, r3, #29
  402868:	d53f      	bpl.n	4028ea <_svfprintf_r+0x5a6>
  40286a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40286c:	9a08      	ldr	r2, [sp, #32]
  40286e:	1a9d      	subs	r5, r3, r2
  402870:	2d00      	cmp	r5, #0
  402872:	dd3a      	ble.n	4028ea <_svfprintf_r+0x5a6>
  402874:	2d10      	cmp	r5, #16
  402876:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402878:	4fbc      	ldr	r7, [pc, #752]	; (402b6c <_svfprintf_r+0x828>)
  40287a:	dd23      	ble.n	4028c4 <_svfprintf_r+0x580>
  40287c:	4622      	mov	r2, r4
  40287e:	2610      	movs	r6, #16
  402880:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402884:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402886:	e004      	b.n	402892 <_svfprintf_r+0x54e>
  402888:	3d10      	subs	r5, #16
  40288a:	2d10      	cmp	r5, #16
  40288c:	f109 0908 	add.w	r9, r9, #8
  402890:	dd17      	ble.n	4028c2 <_svfprintf_r+0x57e>
  402892:	3301      	adds	r3, #1
  402894:	49b5      	ldr	r1, [pc, #724]	; (402b6c <_svfprintf_r+0x828>)
  402896:	9324      	str	r3, [sp, #144]	; 0x90
  402898:	3210      	adds	r2, #16
  40289a:	2b07      	cmp	r3, #7
  40289c:	9225      	str	r2, [sp, #148]	; 0x94
  40289e:	e889 0042 	stmia.w	r9, {r1, r6}
  4028a2:	ddf1      	ble.n	402888 <_svfprintf_r+0x544>
  4028a4:	aa23      	add	r2, sp, #140	; 0x8c
  4028a6:	4621      	mov	r1, r4
  4028a8:	4658      	mov	r0, fp
  4028aa:	f004 fb4f 	bl	406f4c <__ssprint_r>
  4028ae:	2800      	cmp	r0, #0
  4028b0:	f47f ae41 	bne.w	402536 <_svfprintf_r+0x1f2>
  4028b4:	3d10      	subs	r5, #16
  4028b6:	2d10      	cmp	r5, #16
  4028b8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4028ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4028bc:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4028c0:	dce7      	bgt.n	402892 <_svfprintf_r+0x54e>
  4028c2:	4614      	mov	r4, r2
  4028c4:	3301      	adds	r3, #1
  4028c6:	442c      	add	r4, r5
  4028c8:	2b07      	cmp	r3, #7
  4028ca:	9425      	str	r4, [sp, #148]	; 0x94
  4028cc:	9324      	str	r3, [sp, #144]	; 0x90
  4028ce:	f8c9 7000 	str.w	r7, [r9]
  4028d2:	f8c9 5004 	str.w	r5, [r9, #4]
  4028d6:	dd08      	ble.n	4028ea <_svfprintf_r+0x5a6>
  4028d8:	aa23      	add	r2, sp, #140	; 0x8c
  4028da:	9909      	ldr	r1, [sp, #36]	; 0x24
  4028dc:	980a      	ldr	r0, [sp, #40]	; 0x28
  4028de:	f004 fb35 	bl	406f4c <__ssprint_r>
  4028e2:	2800      	cmp	r0, #0
  4028e4:	f47f ae27 	bne.w	402536 <_svfprintf_r+0x1f2>
  4028e8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4028ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4028ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4028ee:	9908      	ldr	r1, [sp, #32]
  4028f0:	428a      	cmp	r2, r1
  4028f2:	bfac      	ite	ge
  4028f4:	189b      	addge	r3, r3, r2
  4028f6:	185b      	addlt	r3, r3, r1
  4028f8:	930b      	str	r3, [sp, #44]	; 0x2c
  4028fa:	2c00      	cmp	r4, #0
  4028fc:	f040 82d4 	bne.w	402ea8 <_svfprintf_r+0xb64>
  402900:	2300      	movs	r3, #0
  402902:	9324      	str	r3, [sp, #144]	; 0x90
  402904:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402908:	e542      	b.n	402390 <_svfprintf_r+0x4c>
  40290a:	9311      	str	r3, [sp, #68]	; 0x44
  40290c:	46ab      	mov	fp, r5
  40290e:	2a00      	cmp	r2, #0
  402910:	f041 8059 	bne.w	4039c6 <_svfprintf_r+0x1682>
  402914:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  402916:	3707      	adds	r7, #7
  402918:	f027 0307 	bic.w	r3, r7, #7
  40291c:	f103 0208 	add.w	r2, r3, #8
  402920:	920e      	str	r2, [sp, #56]	; 0x38
  402922:	681a      	ldr	r2, [r3, #0]
  402924:	9214      	str	r2, [sp, #80]	; 0x50
  402926:	685b      	ldr	r3, [r3, #4]
  402928:	9315      	str	r3, [sp, #84]	; 0x54
  40292a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40292c:	9d14      	ldr	r5, [sp, #80]	; 0x50
  40292e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402932:	4628      	mov	r0, r5
  402934:	4621      	mov	r1, r4
  402936:	f04f 32ff 	mov.w	r2, #4294967295
  40293a:	4b8d      	ldr	r3, [pc, #564]	; (402b70 <_svfprintf_r+0x82c>)
  40293c:	f005 f9a4 	bl	407c88 <__aeabi_dcmpun>
  402940:	2800      	cmp	r0, #0
  402942:	f040 84c1 	bne.w	4032c8 <_svfprintf_r+0xf84>
  402946:	4628      	mov	r0, r5
  402948:	4621      	mov	r1, r4
  40294a:	f04f 32ff 	mov.w	r2, #4294967295
  40294e:	4b88      	ldr	r3, [pc, #544]	; (402b70 <_svfprintf_r+0x82c>)
  402950:	f005 f97c 	bl	407c4c <__aeabi_dcmple>
  402954:	2800      	cmp	r0, #0
  402956:	f040 84b7 	bne.w	4032c8 <_svfprintf_r+0xf84>
  40295a:	9814      	ldr	r0, [sp, #80]	; 0x50
  40295c:	9915      	ldr	r1, [sp, #84]	; 0x54
  40295e:	2200      	movs	r2, #0
  402960:	2300      	movs	r3, #0
  402962:	f005 f969 	bl	407c38 <__aeabi_dcmplt>
  402966:	2800      	cmp	r0, #0
  402968:	f040 874b 	bne.w	403802 <_svfprintf_r+0x14be>
  40296c:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402970:	4e80      	ldr	r6, [pc, #512]	; (402b74 <_svfprintf_r+0x830>)
  402972:	4b81      	ldr	r3, [pc, #516]	; (402b78 <_svfprintf_r+0x834>)
  402974:	9907      	ldr	r1, [sp, #28]
  402976:	f021 0180 	bic.w	r1, r1, #128	; 0x80
  40297a:	9107      	str	r1, [sp, #28]
  40297c:	9911      	ldr	r1, [sp, #68]	; 0x44
  40297e:	2203      	movs	r2, #3
  402980:	f04f 0b00 	mov.w	fp, #0
  402984:	9208      	str	r2, [sp, #32]
  402986:	2947      	cmp	r1, #71	; 0x47
  402988:	bfd8      	it	le
  40298a:	461e      	movle	r6, r3
  40298c:	920d      	str	r2, [sp, #52]	; 0x34
  40298e:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
  402992:	e69d      	b.n	4026d0 <_svfprintf_r+0x38c>
  402994:	9b07      	ldr	r3, [sp, #28]
  402996:	f043 0308 	orr.w	r3, r3, #8
  40299a:	9307      	str	r3, [sp, #28]
  40299c:	f898 3000 	ldrb.w	r3, [r8]
  4029a0:	e529      	b.n	4023f6 <_svfprintf_r+0xb2>
  4029a2:	9311      	str	r3, [sp, #68]	; 0x44
  4029a4:	46ab      	mov	fp, r5
  4029a6:	2a00      	cmp	r2, #0
  4029a8:	f041 8009 	bne.w	4039be <_svfprintf_r+0x167a>
  4029ac:	9b07      	ldr	r3, [sp, #28]
  4029ae:	f043 0310 	orr.w	r3, r3, #16
  4029b2:	9307      	str	r3, [sp, #28]
  4029b4:	9a07      	ldr	r2, [sp, #28]
  4029b6:	f012 0320 	ands.w	r3, r2, #32
  4029ba:	f47f add2 	bne.w	402562 <_svfprintf_r+0x21e>
  4029be:	9907      	ldr	r1, [sp, #28]
  4029c0:	f011 0210 	ands.w	r2, r1, #16
  4029c4:	f000 8507 	beq.w	4033d6 <_svfprintf_r+0x1092>
  4029c8:	980e      	ldr	r0, [sp, #56]	; 0x38
  4029ca:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4029ce:	f1bb 0f00 	cmp.w	fp, #0
  4029d2:	6804      	ldr	r4, [r0, #0]
  4029d4:	f100 0704 	add.w	r7, r0, #4
  4029d8:	f04f 0500 	mov.w	r5, #0
  4029dc:	f2c0 8521 	blt.w	403422 <_svfprintf_r+0x10de>
  4029e0:	460a      	mov	r2, r1
  4029e2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  4029e6:	9207      	str	r2, [sp, #28]
  4029e8:	ea54 0205 	orrs.w	r2, r4, r5
  4029ec:	970e      	str	r7, [sp, #56]	; 0x38
  4029ee:	f000 8143 	beq.w	402c78 <_svfprintf_r+0x934>
  4029f2:	461f      	mov	r7, r3
  4029f4:	e5cb      	b.n	40258e <_svfprintf_r+0x24a>
  4029f6:	9311      	str	r3, [sp, #68]	; 0x44
  4029f8:	46ab      	mov	fp, r5
  4029fa:	2a00      	cmp	r2, #0
  4029fc:	f040 87d7 	bne.w	4039ae <_svfprintf_r+0x166a>
  402a00:	9b07      	ldr	r3, [sp, #28]
  402a02:	f043 0310 	orr.w	r3, r3, #16
  402a06:	9307      	str	r3, [sp, #28]
  402a08:	9a07      	ldr	r2, [sp, #28]
  402a0a:	f012 0320 	ands.w	r3, r2, #32
  402a0e:	f000 8332 	beq.w	403076 <_svfprintf_r+0xd32>
  402a12:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  402a14:	3707      	adds	r7, #7
  402a16:	f027 0307 	bic.w	r3, r7, #7
  402a1a:	2700      	movs	r7, #0
  402a1c:	f103 0108 	add.w	r1, r3, #8
  402a20:	45bb      	cmp	fp, r7
  402a22:	910e      	str	r1, [sp, #56]	; 0x38
  402a24:	e9d3 4500 	ldrd	r4, r5, [r3]
  402a28:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402a2c:	f2c0 835c 	blt.w	4030e8 <_svfprintf_r+0xda4>
  402a30:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  402a34:	9307      	str	r3, [sp, #28]
  402a36:	ea54 0305 	orrs.w	r3, r4, r5
  402a3a:	f47f ae25 	bne.w	402688 <_svfprintf_r+0x344>
  402a3e:	f1bb 0f00 	cmp.w	fp, #0
  402a42:	f000 80fe 	beq.w	402c42 <_svfprintf_r+0x8fe>
  402a46:	2400      	movs	r4, #0
  402a48:	ae40      	add	r6, sp, #256	; 0x100
  402a4a:	3430      	adds	r4, #48	; 0x30
  402a4c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402a50:	e634      	b.n	4026bc <_svfprintf_r+0x378>
  402a52:	9311      	str	r3, [sp, #68]	; 0x44
  402a54:	46ab      	mov	fp, r5
  402a56:	2a00      	cmp	r2, #0
  402a58:	f040 87a5 	bne.w	4039a6 <_svfprintf_r+0x1662>
  402a5c:	9b07      	ldr	r3, [sp, #28]
  402a5e:	4847      	ldr	r0, [pc, #284]	; (402b7c <_svfprintf_r+0x838>)
  402a60:	069d      	lsls	r5, r3, #26
  402a62:	f140 8097 	bpl.w	402b94 <_svfprintf_r+0x850>
  402a66:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  402a68:	3707      	adds	r7, #7
  402a6a:	f027 0307 	bic.w	r3, r7, #7
  402a6e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402a72:	f103 0208 	add.w	r2, r3, #8
  402a76:	920e      	str	r2, [sp, #56]	; 0x38
  402a78:	9a07      	ldr	r2, [sp, #28]
  402a7a:	f012 0701 	ands.w	r7, r2, #1
  402a7e:	f000 8241 	beq.w	402f04 <_svfprintf_r+0xbc0>
  402a82:	ea54 0305 	orrs.w	r3, r4, r5
  402a86:	f000 84f5 	beq.w	403474 <_svfprintf_r+0x1130>
  402a8a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402a8e:	f88d 2071 	strb.w	r2, [sp, #113]	; 0x71
  402a92:	2700      	movs	r7, #0
  402a94:	9a07      	ldr	r2, [sp, #28]
  402a96:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402a9a:	2330      	movs	r3, #48	; 0x30
  402a9c:	45bb      	cmp	fp, r7
  402a9e:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  402aa2:	f042 0302 	orr.w	r3, r2, #2
  402aa6:	f2c0 86a9 	blt.w	4037fc <_svfprintf_r+0x14b8>
  402aaa:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  402aae:	f043 0302 	orr.w	r3, r3, #2
  402ab2:	9307      	str	r3, [sp, #28]
  402ab4:	ae30      	add	r6, sp, #192	; 0xc0
  402ab6:	0923      	lsrs	r3, r4, #4
  402ab8:	f004 010f 	and.w	r1, r4, #15
  402abc:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402ac0:	092a      	lsrs	r2, r5, #4
  402ac2:	461c      	mov	r4, r3
  402ac4:	4615      	mov	r5, r2
  402ac6:	5c43      	ldrb	r3, [r0, r1]
  402ac8:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402acc:	ea54 0305 	orrs.w	r3, r4, r5
  402ad0:	d1f1      	bne.n	402ab6 <_svfprintf_r+0x772>
  402ad2:	e5f3      	b.n	4026bc <_svfprintf_r+0x378>
  402ad4:	990e      	ldr	r1, [sp, #56]	; 0x38
  402ad6:	9311      	str	r3, [sp, #68]	; 0x44
  402ad8:	680a      	ldr	r2, [r1, #0]
  402ada:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  402ade:	2300      	movs	r3, #0
  402ae0:	460a      	mov	r2, r1
  402ae2:	461f      	mov	r7, r3
  402ae4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402ae8:	3204      	adds	r2, #4
  402aea:	2301      	movs	r3, #1
  402aec:	9308      	str	r3, [sp, #32]
  402aee:	46bb      	mov	fp, r7
  402af0:	9713      	str	r7, [sp, #76]	; 0x4c
  402af2:	920e      	str	r2, [sp, #56]	; 0x38
  402af4:	930d      	str	r3, [sp, #52]	; 0x34
  402af6:	ae26      	add	r6, sp, #152	; 0x98
  402af8:	e5ee      	b.n	4026d8 <_svfprintf_r+0x394>
  402afa:	9311      	str	r3, [sp, #68]	; 0x44
  402afc:	46ab      	mov	fp, r5
  402afe:	2a00      	cmp	r2, #0
  402b00:	f43f ada0 	beq.w	402644 <_svfprintf_r+0x300>
  402b04:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402b08:	e59c      	b.n	402644 <_svfprintf_r+0x300>
  402b0a:	9b07      	ldr	r3, [sp, #28]
  402b0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402b10:	9307      	str	r3, [sp, #28]
  402b12:	f898 3000 	ldrb.w	r3, [r8]
  402b16:	e46e      	b.n	4023f6 <_svfprintf_r+0xb2>
  402b18:	f898 3000 	ldrb.w	r3, [r8]
  402b1c:	2900      	cmp	r1, #0
  402b1e:	f47f ac6a 	bne.w	4023f6 <_svfprintf_r+0xb2>
  402b22:	2201      	movs	r2, #1
  402b24:	2120      	movs	r1, #32
  402b26:	e466      	b.n	4023f6 <_svfprintf_r+0xb2>
  402b28:	9b07      	ldr	r3, [sp, #28]
  402b2a:	f043 0301 	orr.w	r3, r3, #1
  402b2e:	9307      	str	r3, [sp, #28]
  402b30:	f898 3000 	ldrb.w	r3, [r8]
  402b34:	e45f      	b.n	4023f6 <_svfprintf_r+0xb2>
  402b36:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402b38:	6823      	ldr	r3, [r4, #0]
  402b3a:	930c      	str	r3, [sp, #48]	; 0x30
  402b3c:	4618      	mov	r0, r3
  402b3e:	2800      	cmp	r0, #0
  402b40:	4623      	mov	r3, r4
  402b42:	f103 0304 	add.w	r3, r3, #4
  402b46:	f6ff acb8 	blt.w	4024ba <_svfprintf_r+0x176>
  402b4a:	930e      	str	r3, [sp, #56]	; 0x38
  402b4c:	f898 3000 	ldrb.w	r3, [r8]
  402b50:	e451      	b.n	4023f6 <_svfprintf_r+0xb2>
  402b52:	f898 3000 	ldrb.w	r3, [r8]
  402b56:	2201      	movs	r2, #1
  402b58:	212b      	movs	r1, #43	; 0x2b
  402b5a:	e44c      	b.n	4023f6 <_svfprintf_r+0xb2>
  402b5c:	9311      	str	r3, [sp, #68]	; 0x44
  402b5e:	46ab      	mov	fp, r5
  402b60:	2a00      	cmp	r2, #0
  402b62:	f43f af51 	beq.w	402a08 <_svfprintf_r+0x6c4>
  402b66:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402b6a:	e74d      	b.n	402a08 <_svfprintf_r+0x6c4>
  402b6c:	00408174 	.word	0x00408174
  402b70:	7fefffff 	.word	0x7fefffff
  402b74:	00408134 	.word	0x00408134
  402b78:	00408130 	.word	0x00408130
  402b7c:	00408140 	.word	0x00408140
  402b80:	9311      	str	r3, [sp, #68]	; 0x44
  402b82:	46ab      	mov	fp, r5
  402b84:	2a00      	cmp	r2, #0
  402b86:	f040 8703 	bne.w	403990 <_svfprintf_r+0x164c>
  402b8a:	9b07      	ldr	r3, [sp, #28]
  402b8c:	4899      	ldr	r0, [pc, #612]	; (402df4 <_svfprintf_r+0xab0>)
  402b8e:	069d      	lsls	r5, r3, #26
  402b90:	f53f af69 	bmi.w	402a66 <_svfprintf_r+0x722>
  402b94:	9b07      	ldr	r3, [sp, #28]
  402b96:	06dc      	lsls	r4, r3, #27
  402b98:	f140 845e 	bpl.w	403458 <_svfprintf_r+0x1114>
  402b9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402b9e:	4613      	mov	r3, r2
  402ba0:	3304      	adds	r3, #4
  402ba2:	6814      	ldr	r4, [r2, #0]
  402ba4:	930e      	str	r3, [sp, #56]	; 0x38
  402ba6:	2500      	movs	r5, #0
  402ba8:	e766      	b.n	402a78 <_svfprintf_r+0x734>
  402baa:	f898 3000 	ldrb.w	r3, [r8]
  402bae:	2b6c      	cmp	r3, #108	; 0x6c
  402bb0:	f000 84e1 	beq.w	403576 <_svfprintf_r+0x1232>
  402bb4:	9807      	ldr	r0, [sp, #28]
  402bb6:	f040 0010 	orr.w	r0, r0, #16
  402bba:	9007      	str	r0, [sp, #28]
  402bbc:	e41b      	b.n	4023f6 <_svfprintf_r+0xb2>
  402bbe:	2a00      	cmp	r2, #0
  402bc0:	f040 86db 	bne.w	40397a <_svfprintf_r+0x1636>
  402bc4:	9b07      	ldr	r3, [sp, #28]
  402bc6:	069b      	lsls	r3, r3, #26
  402bc8:	f140 842f 	bpl.w	40342a <_svfprintf_r+0x10e6>
  402bcc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402bce:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bd0:	6813      	ldr	r3, [r2, #0]
  402bd2:	17cd      	asrs	r5, r1, #31
  402bd4:	4608      	mov	r0, r1
  402bd6:	3204      	adds	r2, #4
  402bd8:	4629      	mov	r1, r5
  402bda:	920e      	str	r2, [sp, #56]	; 0x38
  402bdc:	e9c3 0100 	strd	r0, r1, [r3]
  402be0:	f7ff bbd6 	b.w	402390 <_svfprintf_r+0x4c>
  402be4:	9b07      	ldr	r3, [sp, #28]
  402be6:	f043 0320 	orr.w	r3, r3, #32
  402bea:	9307      	str	r3, [sp, #28]
  402bec:	f898 3000 	ldrb.w	r3, [r8]
  402bf0:	e401      	b.n	4023f6 <_svfprintf_r+0xb2>
  402bf2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402bf4:	9311      	str	r3, [sp, #68]	; 0x44
  402bf6:	6816      	ldr	r6, [r2, #0]
  402bf8:	2400      	movs	r4, #0
  402bfa:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  402bfe:	1d17      	adds	r7, r2, #4
  402c00:	2e00      	cmp	r6, #0
  402c02:	f000 85bd 	beq.w	403780 <_svfprintf_r+0x143c>
  402c06:	2d00      	cmp	r5, #0
  402c08:	f2c0 850f 	blt.w	40362a <_svfprintf_r+0x12e6>
  402c0c:	462a      	mov	r2, r5
  402c0e:	4621      	mov	r1, r4
  402c10:	4630      	mov	r0, r6
  402c12:	f003 fba5 	bl	406360 <memchr>
  402c16:	2800      	cmp	r0, #0
  402c18:	f000 8604 	beq.w	403824 <_svfprintf_r+0x14e0>
  402c1c:	1b83      	subs	r3, r0, r6
  402c1e:	930d      	str	r3, [sp, #52]	; 0x34
  402c20:	46a3      	mov	fp, r4
  402c22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402c26:	970e      	str	r7, [sp, #56]	; 0x38
  402c28:	9308      	str	r3, [sp, #32]
  402c2a:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
  402c2e:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402c32:	e54d      	b.n	4026d0 <_svfprintf_r+0x38c>
  402c34:	486f      	ldr	r0, [pc, #444]	; (402df4 <_svfprintf_r+0xab0>)
  402c36:	9211      	str	r2, [sp, #68]	; 0x44
  402c38:	f1bb 0f00 	cmp.w	fp, #0
  402c3c:	f040 8173 	bne.w	402f26 <_svfprintf_r+0xbe2>
  402c40:	465f      	mov	r7, fp
  402c42:	f04f 0b00 	mov.w	fp, #0
  402c46:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  402c4a:	ae30      	add	r6, sp, #192	; 0xc0
  402c4c:	e539      	b.n	4026c2 <_svfprintf_r+0x37e>
  402c4e:	9311      	str	r3, [sp, #68]	; 0x44
  402c50:	2a00      	cmp	r2, #0
  402c52:	f040 86b0 	bne.w	4039b6 <_svfprintf_r+0x1672>
  402c56:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402c58:	2a00      	cmp	r2, #0
  402c5a:	f43f ac65 	beq.w	402528 <_svfprintf_r+0x1e4>
  402c5e:	2300      	movs	r3, #0
  402c60:	2101      	movs	r1, #1
  402c62:	461f      	mov	r7, r3
  402c64:	9108      	str	r1, [sp, #32]
  402c66:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  402c6a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402c6e:	469b      	mov	fp, r3
  402c70:	9313      	str	r3, [sp, #76]	; 0x4c
  402c72:	910d      	str	r1, [sp, #52]	; 0x34
  402c74:	ae26      	add	r6, sp, #152	; 0x98
  402c76:	e52f      	b.n	4026d8 <_svfprintf_r+0x394>
  402c78:	f1bb 0f00 	cmp.w	fp, #0
  402c7c:	f000 85dd 	beq.w	40383a <_svfprintf_r+0x14f6>
  402c80:	2700      	movs	r7, #0
  402c82:	2400      	movs	r4, #0
  402c84:	2500      	movs	r5, #0
  402c86:	e482      	b.n	40258e <_svfprintf_r+0x24a>
  402c88:	485a      	ldr	r0, [pc, #360]	; (402df4 <_svfprintf_r+0xab0>)
  402c8a:	9307      	str	r3, [sp, #28]
  402c8c:	9211      	str	r2, [sp, #68]	; 0x44
  402c8e:	ea54 0305 	orrs.w	r3, r4, r5
  402c92:	970e      	str	r7, [sp, #56]	; 0x38
  402c94:	f04f 0700 	mov.w	r7, #0
  402c98:	f47f af0c 	bne.w	402ab4 <_svfprintf_r+0x770>
  402c9c:	2400      	movs	r4, #0
  402c9e:	2500      	movs	r5, #0
  402ca0:	e708      	b.n	402ab4 <_svfprintf_r+0x770>
  402ca2:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ca4:	e568      	b.n	402778 <_svfprintf_r+0x434>
  402ca6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ca8:	2b65      	cmp	r3, #101	; 0x65
  402caa:	f340 80a9 	ble.w	402e00 <_svfprintf_r+0xabc>
  402cae:	9814      	ldr	r0, [sp, #80]	; 0x50
  402cb0:	9915      	ldr	r1, [sp, #84]	; 0x54
  402cb2:	2200      	movs	r2, #0
  402cb4:	2300      	movs	r3, #0
  402cb6:	f004 ffb5 	bl	407c24 <__aeabi_dcmpeq>
  402cba:	2800      	cmp	r0, #0
  402cbc:	f000 8135 	beq.w	402f2a <_svfprintf_r+0xbe6>
  402cc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402cc2:	4a4d      	ldr	r2, [pc, #308]	; (402df8 <_svfprintf_r+0xab4>)
  402cc4:	f8c9 2000 	str.w	r2, [r9]
  402cc8:	3301      	adds	r3, #1
  402cca:	3401      	adds	r4, #1
  402ccc:	2201      	movs	r2, #1
  402cce:	2b07      	cmp	r3, #7
  402cd0:	9425      	str	r4, [sp, #148]	; 0x94
  402cd2:	9324      	str	r3, [sp, #144]	; 0x90
  402cd4:	f8c9 2004 	str.w	r2, [r9, #4]
  402cd8:	f300 83e6 	bgt.w	4034a8 <_svfprintf_r+0x1164>
  402cdc:	f109 0908 	add.w	r9, r9, #8
  402ce0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402ce2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402ce4:	4293      	cmp	r3, r2
  402ce6:	db03      	blt.n	402cf0 <_svfprintf_r+0x9ac>
  402ce8:	9b07      	ldr	r3, [sp, #28]
  402cea:	07db      	lsls	r3, r3, #31
  402cec:	f57f adba 	bpl.w	402864 <_svfprintf_r+0x520>
  402cf0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402cf2:	9916      	ldr	r1, [sp, #88]	; 0x58
  402cf4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  402cf6:	f8c9 2000 	str.w	r2, [r9]
  402cfa:	3301      	adds	r3, #1
  402cfc:	440c      	add	r4, r1
  402cfe:	2b07      	cmp	r3, #7
  402d00:	9425      	str	r4, [sp, #148]	; 0x94
  402d02:	f8c9 1004 	str.w	r1, [r9, #4]
  402d06:	9324      	str	r3, [sp, #144]	; 0x90
  402d08:	f300 843f 	bgt.w	40358a <_svfprintf_r+0x1246>
  402d0c:	f109 0908 	add.w	r9, r9, #8
  402d10:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d12:	1e5d      	subs	r5, r3, #1
  402d14:	2d00      	cmp	r5, #0
  402d16:	f77f ada5 	ble.w	402864 <_svfprintf_r+0x520>
  402d1a:	4a38      	ldr	r2, [pc, #224]	; (402dfc <_svfprintf_r+0xab8>)
  402d1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d1e:	920f      	str	r2, [sp, #60]	; 0x3c
  402d20:	2d10      	cmp	r5, #16
  402d22:	f340 81e6 	ble.w	4030f2 <_svfprintf_r+0xdae>
  402d26:	2610      	movs	r6, #16
  402d28:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  402d2a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  402d2e:	e005      	b.n	402d3c <_svfprintf_r+0x9f8>
  402d30:	f109 0908 	add.w	r9, r9, #8
  402d34:	3d10      	subs	r5, #16
  402d36:	2d10      	cmp	r5, #16
  402d38:	f340 81db 	ble.w	4030f2 <_svfprintf_r+0xdae>
  402d3c:	3301      	adds	r3, #1
  402d3e:	3410      	adds	r4, #16
  402d40:	2b07      	cmp	r3, #7
  402d42:	9425      	str	r4, [sp, #148]	; 0x94
  402d44:	9324      	str	r3, [sp, #144]	; 0x90
  402d46:	f8c9 a000 	str.w	sl, [r9]
  402d4a:	f8c9 6004 	str.w	r6, [r9, #4]
  402d4e:	ddef      	ble.n	402d30 <_svfprintf_r+0x9ec>
  402d50:	aa23      	add	r2, sp, #140	; 0x8c
  402d52:	4659      	mov	r1, fp
  402d54:	4638      	mov	r0, r7
  402d56:	f004 f8f9 	bl	406f4c <__ssprint_r>
  402d5a:	2800      	cmp	r0, #0
  402d5c:	f47f abeb 	bne.w	402536 <_svfprintf_r+0x1f2>
  402d60:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402d62:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d64:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402d68:	e7e4      	b.n	402d34 <_svfprintf_r+0x9f0>
  402d6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402d6c:	9a08      	ldr	r2, [sp, #32]
  402d6e:	1a9f      	subs	r7, r3, r2
  402d70:	2f00      	cmp	r7, #0
  402d72:	f77f ad25 	ble.w	4027c0 <_svfprintf_r+0x47c>
  402d76:	4a21      	ldr	r2, [pc, #132]	; (402dfc <_svfprintf_r+0xab8>)
  402d78:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d7a:	920f      	str	r2, [sp, #60]	; 0x3c
  402d7c:	2f10      	cmp	r7, #16
  402d7e:	dd2b      	ble.n	402dd8 <_svfprintf_r+0xa94>
  402d80:	464a      	mov	r2, r9
  402d82:	4621      	mov	r1, r4
  402d84:	46b9      	mov	r9, r7
  402d86:	2510      	movs	r5, #16
  402d88:	4637      	mov	r7, r6
  402d8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402d8c:	9e09      	ldr	r6, [sp, #36]	; 0x24
  402d8e:	e006      	b.n	402d9e <_svfprintf_r+0xa5a>
  402d90:	f1a9 0910 	sub.w	r9, r9, #16
  402d94:	f1b9 0f10 	cmp.w	r9, #16
  402d98:	f102 0208 	add.w	r2, r2, #8
  402d9c:	dd18      	ble.n	402dd0 <_svfprintf_r+0xa8c>
  402d9e:	3301      	adds	r3, #1
  402da0:	3110      	adds	r1, #16
  402da2:	2b07      	cmp	r3, #7
  402da4:	9125      	str	r1, [sp, #148]	; 0x94
  402da6:	9324      	str	r3, [sp, #144]	; 0x90
  402da8:	f8c2 a000 	str.w	sl, [r2]
  402dac:	6055      	str	r5, [r2, #4]
  402dae:	ddef      	ble.n	402d90 <_svfprintf_r+0xa4c>
  402db0:	aa23      	add	r2, sp, #140	; 0x8c
  402db2:	4631      	mov	r1, r6
  402db4:	4620      	mov	r0, r4
  402db6:	f004 f8c9 	bl	406f4c <__ssprint_r>
  402dba:	2800      	cmp	r0, #0
  402dbc:	f47f abbb 	bne.w	402536 <_svfprintf_r+0x1f2>
  402dc0:	f1a9 0910 	sub.w	r9, r9, #16
  402dc4:	f1b9 0f10 	cmp.w	r9, #16
  402dc8:	9925      	ldr	r1, [sp, #148]	; 0x94
  402dca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402dcc:	aa30      	add	r2, sp, #192	; 0xc0
  402dce:	dce6      	bgt.n	402d9e <_svfprintf_r+0xa5a>
  402dd0:	463e      	mov	r6, r7
  402dd2:	460c      	mov	r4, r1
  402dd4:	464f      	mov	r7, r9
  402dd6:	4691      	mov	r9, r2
  402dd8:	3301      	adds	r3, #1
  402dda:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402ddc:	9324      	str	r3, [sp, #144]	; 0x90
  402dde:	443c      	add	r4, r7
  402de0:	2b07      	cmp	r3, #7
  402de2:	9425      	str	r4, [sp, #148]	; 0x94
  402de4:	e889 0084 	stmia.w	r9, {r2, r7}
  402de8:	f300 8245 	bgt.w	403276 <_svfprintf_r+0xf32>
  402dec:	f109 0908 	add.w	r9, r9, #8
  402df0:	e4e6      	b.n	4027c0 <_svfprintf_r+0x47c>
  402df2:	bf00      	nop
  402df4:	00408154 	.word	0x00408154
  402df8:	00408170 	.word	0x00408170
  402dfc:	00408120 	.word	0x00408120
  402e00:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e02:	9d24      	ldr	r5, [sp, #144]	; 0x90
  402e04:	2b01      	cmp	r3, #1
  402e06:	f340 8208 	ble.w	40321a <_svfprintf_r+0xed6>
  402e0a:	3501      	adds	r5, #1
  402e0c:	3401      	adds	r4, #1
  402e0e:	2301      	movs	r3, #1
  402e10:	2d07      	cmp	r5, #7
  402e12:	9425      	str	r4, [sp, #148]	; 0x94
  402e14:	9524      	str	r5, [sp, #144]	; 0x90
  402e16:	f8c9 6000 	str.w	r6, [r9]
  402e1a:	f8c9 3004 	str.w	r3, [r9, #4]
  402e1e:	f300 820d 	bgt.w	40323c <_svfprintf_r+0xef8>
  402e22:	f109 0908 	add.w	r9, r9, #8
  402e26:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402e28:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402e2a:	f8c9 3000 	str.w	r3, [r9]
  402e2e:	3501      	adds	r5, #1
  402e30:	4414      	add	r4, r2
  402e32:	2d07      	cmp	r5, #7
  402e34:	9425      	str	r4, [sp, #148]	; 0x94
  402e36:	9524      	str	r5, [sp, #144]	; 0x90
  402e38:	f8c9 2004 	str.w	r2, [r9, #4]
  402e3c:	f300 820e 	bgt.w	40325c <_svfprintf_r+0xf18>
  402e40:	f109 0908 	add.w	r9, r9, #8
  402e44:	2300      	movs	r3, #0
  402e46:	9814      	ldr	r0, [sp, #80]	; 0x50
  402e48:	9915      	ldr	r1, [sp, #84]	; 0x54
  402e4a:	2200      	movs	r2, #0
  402e4c:	f004 feea 	bl	407c24 <__aeabi_dcmpeq>
  402e50:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e52:	2800      	cmp	r0, #0
  402e54:	f040 80c3 	bne.w	402fde <_svfprintf_r+0xc9a>
  402e58:	3b01      	subs	r3, #1
  402e5a:	3501      	adds	r5, #1
  402e5c:	3601      	adds	r6, #1
  402e5e:	441c      	add	r4, r3
  402e60:	2d07      	cmp	r5, #7
  402e62:	9524      	str	r5, [sp, #144]	; 0x90
  402e64:	9425      	str	r4, [sp, #148]	; 0x94
  402e66:	f8c9 6000 	str.w	r6, [r9]
  402e6a:	f8c9 3004 	str.w	r3, [r9, #4]
  402e6e:	f300 80f5 	bgt.w	40305c <_svfprintf_r+0xd18>
  402e72:	f109 0908 	add.w	r9, r9, #8
  402e76:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402e78:	f8c9 2004 	str.w	r2, [r9, #4]
  402e7c:	3501      	adds	r5, #1
  402e7e:	4414      	add	r4, r2
  402e80:	ab1f      	add	r3, sp, #124	; 0x7c
  402e82:	2d07      	cmp	r5, #7
  402e84:	9425      	str	r4, [sp, #148]	; 0x94
  402e86:	9524      	str	r5, [sp, #144]	; 0x90
  402e88:	f8c9 3000 	str.w	r3, [r9]
  402e8c:	f77f ace8 	ble.w	402860 <_svfprintf_r+0x51c>
  402e90:	aa23      	add	r2, sp, #140	; 0x8c
  402e92:	9909      	ldr	r1, [sp, #36]	; 0x24
  402e94:	980a      	ldr	r0, [sp, #40]	; 0x28
  402e96:	f004 f859 	bl	406f4c <__ssprint_r>
  402e9a:	2800      	cmp	r0, #0
  402e9c:	f47f ab4b 	bne.w	402536 <_svfprintf_r+0x1f2>
  402ea0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ea2:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402ea6:	e4dd      	b.n	402864 <_svfprintf_r+0x520>
  402ea8:	aa23      	add	r2, sp, #140	; 0x8c
  402eaa:	9909      	ldr	r1, [sp, #36]	; 0x24
  402eac:	980a      	ldr	r0, [sp, #40]	; 0x28
  402eae:	f004 f84d 	bl	406f4c <__ssprint_r>
  402eb2:	2800      	cmp	r0, #0
  402eb4:	f43f ad24 	beq.w	402900 <_svfprintf_r+0x5bc>
  402eb8:	f7ff bb3d 	b.w	402536 <_svfprintf_r+0x1f2>
  402ebc:	aa23      	add	r2, sp, #140	; 0x8c
  402ebe:	9909      	ldr	r1, [sp, #36]	; 0x24
  402ec0:	980a      	ldr	r0, [sp, #40]	; 0x28
  402ec2:	f004 f843 	bl	406f4c <__ssprint_r>
  402ec6:	2800      	cmp	r0, #0
  402ec8:	f47f ab35 	bne.w	402536 <_svfprintf_r+0x1f2>
  402ecc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ece:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402ed2:	e4b4      	b.n	40283e <_svfprintf_r+0x4fa>
  402ed4:	aa23      	add	r2, sp, #140	; 0x8c
  402ed6:	9909      	ldr	r1, [sp, #36]	; 0x24
  402ed8:	980a      	ldr	r0, [sp, #40]	; 0x28
  402eda:	f004 f837 	bl	406f4c <__ssprint_r>
  402ede:	2800      	cmp	r0, #0
  402ee0:	f47f ab29 	bne.w	402536 <_svfprintf_r+0x1f2>
  402ee4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ee6:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402eea:	e455      	b.n	402798 <_svfprintf_r+0x454>
  402eec:	aa23      	add	r2, sp, #140	; 0x8c
  402eee:	9909      	ldr	r1, [sp, #36]	; 0x24
  402ef0:	980a      	ldr	r0, [sp, #40]	; 0x28
  402ef2:	f004 f82b 	bl	406f4c <__ssprint_r>
  402ef6:	2800      	cmp	r0, #0
  402ef8:	f47f ab1d 	bne.w	402536 <_svfprintf_r+0x1f2>
  402efc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402efe:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402f02:	e459      	b.n	4027b8 <_svfprintf_r+0x474>
  402f04:	f1bb 0f00 	cmp.w	fp, #0
  402f08:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402f0c:	f2c0 82d8 	blt.w	4034c0 <_svfprintf_r+0x117c>
  402f10:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  402f14:	9307      	str	r3, [sp, #28]
  402f16:	ea54 0305 	orrs.w	r3, r4, r5
  402f1a:	f47f adcb 	bne.w	402ab4 <_svfprintf_r+0x770>
  402f1e:	f1bb 0f00 	cmp.w	fp, #0
  402f22:	f43f ae8d 	beq.w	402c40 <_svfprintf_r+0x8fc>
  402f26:	2700      	movs	r7, #0
  402f28:	e6b8      	b.n	402c9c <_svfprintf_r+0x958>
  402f2a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  402f2c:	2d00      	cmp	r5, #0
  402f2e:	f340 82ca 	ble.w	4034c6 <_svfprintf_r+0x1182>
  402f32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f34:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402f36:	4293      	cmp	r3, r2
  402f38:	bfa8      	it	ge
  402f3a:	4613      	movge	r3, r2
  402f3c:	2b00      	cmp	r3, #0
  402f3e:	461d      	mov	r5, r3
  402f40:	dd0d      	ble.n	402f5e <_svfprintf_r+0xc1a>
  402f42:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402f44:	f8c9 6000 	str.w	r6, [r9]
  402f48:	3301      	adds	r3, #1
  402f4a:	442c      	add	r4, r5
  402f4c:	2b07      	cmp	r3, #7
  402f4e:	9425      	str	r4, [sp, #148]	; 0x94
  402f50:	f8c9 5004 	str.w	r5, [r9, #4]
  402f54:	9324      	str	r3, [sp, #144]	; 0x90
  402f56:	f300 839c 	bgt.w	403692 <_svfprintf_r+0x134e>
  402f5a:	f109 0908 	add.w	r9, r9, #8
  402f5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f60:	2d00      	cmp	r5, #0
  402f62:	bfa8      	it	ge
  402f64:	1b5b      	subge	r3, r3, r5
  402f66:	2b00      	cmp	r3, #0
  402f68:	461d      	mov	r5, r3
  402f6a:	f340 80f6 	ble.w	40315a <_svfprintf_r+0xe16>
  402f6e:	4aba      	ldr	r2, [pc, #744]	; (403258 <_svfprintf_r+0xf14>)
  402f70:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402f72:	920f      	str	r2, [sp, #60]	; 0x3c
  402f74:	2d10      	cmp	r5, #16
  402f76:	f340 828a 	ble.w	40348e <_svfprintf_r+0x114a>
  402f7a:	4622      	mov	r2, r4
  402f7c:	2710      	movs	r7, #16
  402f7e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402f82:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402f84:	e005      	b.n	402f92 <_svfprintf_r+0xc4e>
  402f86:	f109 0908 	add.w	r9, r9, #8
  402f8a:	3d10      	subs	r5, #16
  402f8c:	2d10      	cmp	r5, #16
  402f8e:	f340 827d 	ble.w	40348c <_svfprintf_r+0x1148>
  402f92:	3301      	adds	r3, #1
  402f94:	3210      	adds	r2, #16
  402f96:	2b07      	cmp	r3, #7
  402f98:	9225      	str	r2, [sp, #148]	; 0x94
  402f9a:	9324      	str	r3, [sp, #144]	; 0x90
  402f9c:	f8c9 a000 	str.w	sl, [r9]
  402fa0:	f8c9 7004 	str.w	r7, [r9, #4]
  402fa4:	ddef      	ble.n	402f86 <_svfprintf_r+0xc42>
  402fa6:	aa23      	add	r2, sp, #140	; 0x8c
  402fa8:	4621      	mov	r1, r4
  402faa:	4658      	mov	r0, fp
  402fac:	f003 ffce 	bl	406f4c <__ssprint_r>
  402fb0:	2800      	cmp	r0, #0
  402fb2:	f47f aac0 	bne.w	402536 <_svfprintf_r+0x1f2>
  402fb6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  402fb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402fba:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402fbe:	e7e4      	b.n	402f8a <_svfprintf_r+0xc46>
  402fc0:	aa23      	add	r2, sp, #140	; 0x8c
  402fc2:	9909      	ldr	r1, [sp, #36]	; 0x24
  402fc4:	980a      	ldr	r0, [sp, #40]	; 0x28
  402fc6:	f003 ffc1 	bl	406f4c <__ssprint_r>
  402fca:	2800      	cmp	r0, #0
  402fcc:	f47f aab3 	bne.w	402536 <_svfprintf_r+0x1f2>
  402fd0:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402fd4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402fd6:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402fda:	f7ff bbcd 	b.w	402778 <_svfprintf_r+0x434>
  402fde:	1e5e      	subs	r6, r3, #1
  402fe0:	2e00      	cmp	r6, #0
  402fe2:	f77f af48 	ble.w	402e76 <_svfprintf_r+0xb32>
  402fe6:	4b9c      	ldr	r3, [pc, #624]	; (403258 <_svfprintf_r+0xf14>)
  402fe8:	930f      	str	r3, [sp, #60]	; 0x3c
  402fea:	2e10      	cmp	r6, #16
  402fec:	dd2c      	ble.n	403048 <_svfprintf_r+0xd04>
  402fee:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  402ff2:	2710      	movs	r7, #16
  402ff4:	46b0      	mov	r8, r6
  402ff6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402ffa:	9e09      	ldr	r6, [sp, #36]	; 0x24
  402ffc:	e006      	b.n	40300c <_svfprintf_r+0xcc8>
  402ffe:	f1a8 0810 	sub.w	r8, r8, #16
  403002:	f1b8 0f10 	cmp.w	r8, #16
  403006:	f109 0908 	add.w	r9, r9, #8
  40300a:	dd1a      	ble.n	403042 <_svfprintf_r+0xcfe>
  40300c:	3501      	adds	r5, #1
  40300e:	3410      	adds	r4, #16
  403010:	2d07      	cmp	r5, #7
  403012:	9425      	str	r4, [sp, #148]	; 0x94
  403014:	9524      	str	r5, [sp, #144]	; 0x90
  403016:	f8c9 a000 	str.w	sl, [r9]
  40301a:	f8c9 7004 	str.w	r7, [r9, #4]
  40301e:	ddee      	ble.n	402ffe <_svfprintf_r+0xcba>
  403020:	aa23      	add	r2, sp, #140	; 0x8c
  403022:	4631      	mov	r1, r6
  403024:	4658      	mov	r0, fp
  403026:	f003 ff91 	bl	406f4c <__ssprint_r>
  40302a:	2800      	cmp	r0, #0
  40302c:	f47f aa83 	bne.w	402536 <_svfprintf_r+0x1f2>
  403030:	f1a8 0810 	sub.w	r8, r8, #16
  403034:	f1b8 0f10 	cmp.w	r8, #16
  403038:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40303a:	9d24      	ldr	r5, [sp, #144]	; 0x90
  40303c:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  403040:	dce4      	bgt.n	40300c <_svfprintf_r+0xcc8>
  403042:	4646      	mov	r6, r8
  403044:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  403048:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40304a:	3501      	adds	r5, #1
  40304c:	4434      	add	r4, r6
  40304e:	2d07      	cmp	r5, #7
  403050:	9425      	str	r4, [sp, #148]	; 0x94
  403052:	9524      	str	r5, [sp, #144]	; 0x90
  403054:	e889 0048 	stmia.w	r9, {r3, r6}
  403058:	f77f af0b 	ble.w	402e72 <_svfprintf_r+0xb2e>
  40305c:	aa23      	add	r2, sp, #140	; 0x8c
  40305e:	9909      	ldr	r1, [sp, #36]	; 0x24
  403060:	980a      	ldr	r0, [sp, #40]	; 0x28
  403062:	f003 ff73 	bl	406f4c <__ssprint_r>
  403066:	2800      	cmp	r0, #0
  403068:	f47f aa65 	bne.w	402536 <_svfprintf_r+0x1f2>
  40306c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40306e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  403070:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  403074:	e6ff      	b.n	402e76 <_svfprintf_r+0xb32>
  403076:	9907      	ldr	r1, [sp, #28]
  403078:	f011 0210 	ands.w	r2, r1, #16
  40307c:	f000 8108 	beq.w	403290 <_svfprintf_r+0xf4c>
  403080:	980e      	ldr	r0, [sp, #56]	; 0x38
  403082:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  403086:	f1bb 0f00 	cmp.w	fp, #0
  40308a:	6804      	ldr	r4, [r0, #0]
  40308c:	f100 0704 	add.w	r7, r0, #4
  403090:	f04f 0500 	mov.w	r5, #0
  403094:	db26      	blt.n	4030e4 <_svfprintf_r+0xda0>
  403096:	460a      	mov	r2, r1
  403098:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  40309c:	9207      	str	r2, [sp, #28]
  40309e:	ea54 0205 	orrs.w	r2, r4, r5
  4030a2:	970e      	str	r7, [sp, #56]	; 0x38
  4030a4:	461f      	mov	r7, r3
  4030a6:	f47f aaef 	bne.w	402688 <_svfprintf_r+0x344>
  4030aa:	e4c8      	b.n	402a3e <_svfprintf_r+0x6fa>
  4030ac:	9b07      	ldr	r3, [sp, #28]
  4030ae:	06d9      	lsls	r1, r3, #27
  4030b0:	d42a      	bmi.n	403108 <_svfprintf_r+0xdc4>
  4030b2:	9b07      	ldr	r3, [sp, #28]
  4030b4:	065a      	lsls	r2, r3, #25
  4030b6:	d527      	bpl.n	403108 <_svfprintf_r+0xdc4>
  4030b8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4030ba:	f9b1 4000 	ldrsh.w	r4, [r1]
  4030be:	3104      	adds	r1, #4
  4030c0:	17e5      	asrs	r5, r4, #31
  4030c2:	4622      	mov	r2, r4
  4030c4:	462b      	mov	r3, r5
  4030c6:	910e      	str	r1, [sp, #56]	; 0x38
  4030c8:	f7ff bacb 	b.w	402662 <_svfprintf_r+0x31e>
  4030cc:	990e      	ldr	r1, [sp, #56]	; 0x38
  4030ce:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4030d2:	f1bb 0f00 	cmp.w	fp, #0
  4030d6:	680c      	ldr	r4, [r1, #0]
  4030d8:	f101 0704 	add.w	r7, r1, #4
  4030dc:	f04f 0500 	mov.w	r5, #0
  4030e0:	f280 8247 	bge.w	403572 <_svfprintf_r+0x122e>
  4030e4:	970e      	str	r7, [sp, #56]	; 0x38
  4030e6:	461f      	mov	r7, r3
  4030e8:	ea54 0305 	orrs.w	r3, r4, r5
  4030ec:	f47f aacc 	bne.w	402688 <_svfprintf_r+0x344>
  4030f0:	e4aa      	b.n	402a48 <_svfprintf_r+0x704>
  4030f2:	3301      	adds	r3, #1
  4030f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4030f6:	9324      	str	r3, [sp, #144]	; 0x90
  4030f8:	442c      	add	r4, r5
  4030fa:	2b07      	cmp	r3, #7
  4030fc:	9425      	str	r4, [sp, #148]	; 0x94
  4030fe:	e889 0024 	stmia.w	r9, {r2, r5}
  403102:	f77f abad 	ble.w	402860 <_svfprintf_r+0x51c>
  403106:	e6c3      	b.n	402e90 <_svfprintf_r+0xb4c>
  403108:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40310a:	6814      	ldr	r4, [r2, #0]
  40310c:	4613      	mov	r3, r2
  40310e:	3304      	adds	r3, #4
  403110:	17e5      	asrs	r5, r4, #31
  403112:	4622      	mov	r2, r4
  403114:	930e      	str	r3, [sp, #56]	; 0x38
  403116:	2a00      	cmp	r2, #0
  403118:	462b      	mov	r3, r5
  40311a:	f173 0300 	sbcs.w	r3, r3, #0
  40311e:	f6bf aaa5 	bge.w	40266c <_svfprintf_r+0x328>
  403122:	4264      	negs	r4, r4
  403124:	f04f 072d 	mov.w	r7, #45	; 0x2d
  403128:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40312c:	f1bb 0f00 	cmp.w	fp, #0
  403130:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  403134:	f6ff aaa8 	blt.w	402688 <_svfprintf_r+0x344>
  403138:	9b07      	ldr	r3, [sp, #28]
  40313a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40313e:	9307      	str	r3, [sp, #28]
  403140:	f7ff baa2 	b.w	402688 <_svfprintf_r+0x344>
  403144:	aa23      	add	r2, sp, #140	; 0x8c
  403146:	9909      	ldr	r1, [sp, #36]	; 0x24
  403148:	980a      	ldr	r0, [sp, #40]	; 0x28
  40314a:	f003 feff 	bl	406f4c <__ssprint_r>
  40314e:	2800      	cmp	r0, #0
  403150:	f47f a9f1 	bne.w	402536 <_svfprintf_r+0x1f2>
  403154:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403156:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40315a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40315c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40315e:	4432      	add	r2, r6
  403160:	4617      	mov	r7, r2
  403162:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403164:	4293      	cmp	r3, r2
  403166:	db47      	blt.n	4031f8 <_svfprintf_r+0xeb4>
  403168:	9a07      	ldr	r2, [sp, #28]
  40316a:	07d5      	lsls	r5, r2, #31
  40316c:	d444      	bmi.n	4031f8 <_svfprintf_r+0xeb4>
  40316e:	9912      	ldr	r1, [sp, #72]	; 0x48
  403170:	440e      	add	r6, r1
  403172:	1bf5      	subs	r5, r6, r7
  403174:	1acb      	subs	r3, r1, r3
  403176:	429d      	cmp	r5, r3
  403178:	bfa8      	it	ge
  40317a:	461d      	movge	r5, r3
  40317c:	2d00      	cmp	r5, #0
  40317e:	462e      	mov	r6, r5
  403180:	dd0d      	ble.n	40319e <_svfprintf_r+0xe5a>
  403182:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403184:	f8c9 7000 	str.w	r7, [r9]
  403188:	3201      	adds	r2, #1
  40318a:	442c      	add	r4, r5
  40318c:	2a07      	cmp	r2, #7
  40318e:	9425      	str	r4, [sp, #148]	; 0x94
  403190:	f8c9 5004 	str.w	r5, [r9, #4]
  403194:	9224      	str	r2, [sp, #144]	; 0x90
  403196:	f300 830b 	bgt.w	4037b0 <_svfprintf_r+0x146c>
  40319a:	f109 0908 	add.w	r9, r9, #8
  40319e:	2e00      	cmp	r6, #0
  4031a0:	bfac      	ite	ge
  4031a2:	1b9d      	subge	r5, r3, r6
  4031a4:	461d      	movlt	r5, r3
  4031a6:	2d00      	cmp	r5, #0
  4031a8:	f77f ab5c 	ble.w	402864 <_svfprintf_r+0x520>
  4031ac:	4a2a      	ldr	r2, [pc, #168]	; (403258 <_svfprintf_r+0xf14>)
  4031ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4031b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4031b2:	2d10      	cmp	r5, #16
  4031b4:	dd9d      	ble.n	4030f2 <_svfprintf_r+0xdae>
  4031b6:	2610      	movs	r6, #16
  4031b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4031ba:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  4031be:	e004      	b.n	4031ca <_svfprintf_r+0xe86>
  4031c0:	f109 0908 	add.w	r9, r9, #8
  4031c4:	3d10      	subs	r5, #16
  4031c6:	2d10      	cmp	r5, #16
  4031c8:	dd93      	ble.n	4030f2 <_svfprintf_r+0xdae>
  4031ca:	3301      	adds	r3, #1
  4031cc:	3410      	adds	r4, #16
  4031ce:	2b07      	cmp	r3, #7
  4031d0:	9425      	str	r4, [sp, #148]	; 0x94
  4031d2:	9324      	str	r3, [sp, #144]	; 0x90
  4031d4:	f8c9 a000 	str.w	sl, [r9]
  4031d8:	f8c9 6004 	str.w	r6, [r9, #4]
  4031dc:	ddf0      	ble.n	4031c0 <_svfprintf_r+0xe7c>
  4031de:	aa23      	add	r2, sp, #140	; 0x8c
  4031e0:	4659      	mov	r1, fp
  4031e2:	4638      	mov	r0, r7
  4031e4:	f003 feb2 	bl	406f4c <__ssprint_r>
  4031e8:	2800      	cmp	r0, #0
  4031ea:	f47f a9a4 	bne.w	402536 <_svfprintf_r+0x1f2>
  4031ee:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4031f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4031f2:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4031f6:	e7e5      	b.n	4031c4 <_svfprintf_r+0xe80>
  4031f8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4031fa:	9816      	ldr	r0, [sp, #88]	; 0x58
  4031fc:	9917      	ldr	r1, [sp, #92]	; 0x5c
  4031fe:	f8c9 1000 	str.w	r1, [r9]
  403202:	3201      	adds	r2, #1
  403204:	4404      	add	r4, r0
  403206:	2a07      	cmp	r2, #7
  403208:	9425      	str	r4, [sp, #148]	; 0x94
  40320a:	f8c9 0004 	str.w	r0, [r9, #4]
  40320e:	9224      	str	r2, [sp, #144]	; 0x90
  403210:	f300 82a9 	bgt.w	403766 <_svfprintf_r+0x1422>
  403214:	f109 0908 	add.w	r9, r9, #8
  403218:	e7a9      	b.n	40316e <_svfprintf_r+0xe2a>
  40321a:	9b07      	ldr	r3, [sp, #28]
  40321c:	07d8      	lsls	r0, r3, #31
  40321e:	f53f adf4 	bmi.w	402e0a <_svfprintf_r+0xac6>
  403222:	3501      	adds	r5, #1
  403224:	3401      	adds	r4, #1
  403226:	2301      	movs	r3, #1
  403228:	2d07      	cmp	r5, #7
  40322a:	9425      	str	r4, [sp, #148]	; 0x94
  40322c:	9524      	str	r5, [sp, #144]	; 0x90
  40322e:	f8c9 6000 	str.w	r6, [r9]
  403232:	f8c9 3004 	str.w	r3, [r9, #4]
  403236:	f77f ae1c 	ble.w	402e72 <_svfprintf_r+0xb2e>
  40323a:	e70f      	b.n	40305c <_svfprintf_r+0xd18>
  40323c:	aa23      	add	r2, sp, #140	; 0x8c
  40323e:	9909      	ldr	r1, [sp, #36]	; 0x24
  403240:	980a      	ldr	r0, [sp, #40]	; 0x28
  403242:	f003 fe83 	bl	406f4c <__ssprint_r>
  403246:	2800      	cmp	r0, #0
  403248:	f47f a975 	bne.w	402536 <_svfprintf_r+0x1f2>
  40324c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40324e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  403250:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  403254:	e5e7      	b.n	402e26 <_svfprintf_r+0xae2>
  403256:	bf00      	nop
  403258:	00408120 	.word	0x00408120
  40325c:	aa23      	add	r2, sp, #140	; 0x8c
  40325e:	9909      	ldr	r1, [sp, #36]	; 0x24
  403260:	980a      	ldr	r0, [sp, #40]	; 0x28
  403262:	f003 fe73 	bl	406f4c <__ssprint_r>
  403266:	2800      	cmp	r0, #0
  403268:	f47f a965 	bne.w	402536 <_svfprintf_r+0x1f2>
  40326c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40326e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  403270:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  403274:	e5e6      	b.n	402e44 <_svfprintf_r+0xb00>
  403276:	aa23      	add	r2, sp, #140	; 0x8c
  403278:	9909      	ldr	r1, [sp, #36]	; 0x24
  40327a:	980a      	ldr	r0, [sp, #40]	; 0x28
  40327c:	f003 fe66 	bl	406f4c <__ssprint_r>
  403280:	2800      	cmp	r0, #0
  403282:	f47f a958 	bne.w	402536 <_svfprintf_r+0x1f2>
  403286:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403288:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40328c:	f7ff ba98 	b.w	4027c0 <_svfprintf_r+0x47c>
  403290:	9907      	ldr	r1, [sp, #28]
  403292:	f011 0340 	ands.w	r3, r1, #64	; 0x40
  403296:	f43f af19 	beq.w	4030cc <_svfprintf_r+0xd88>
  40329a:	980e      	ldr	r0, [sp, #56]	; 0x38
  40329c:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  4032a0:	f1bb 0f00 	cmp.w	fp, #0
  4032a4:	8804      	ldrh	r4, [r0, #0]
  4032a6:	f100 0704 	add.w	r7, r0, #4
  4032aa:	f04f 0500 	mov.w	r5, #0
  4032ae:	f2c0 81b9 	blt.w	403624 <_svfprintf_r+0x12e0>
  4032b2:	f021 0380 	bic.w	r3, r1, #128	; 0x80
  4032b6:	9307      	str	r3, [sp, #28]
  4032b8:	ea54 0305 	orrs.w	r3, r4, r5
  4032bc:	970e      	str	r7, [sp, #56]	; 0x38
  4032be:	4617      	mov	r7, r2
  4032c0:	f47f a9e2 	bne.w	402688 <_svfprintf_r+0x344>
  4032c4:	f7ff bbbb 	b.w	402a3e <_svfprintf_r+0x6fa>
  4032c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4032ca:	4622      	mov	r2, r4
  4032cc:	4620      	mov	r0, r4
  4032ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4032d0:	4623      	mov	r3, r4
  4032d2:	4621      	mov	r1, r4
  4032d4:	f004 fcd8 	bl	407c88 <__aeabi_dcmpun>
  4032d8:	2800      	cmp	r0, #0
  4032da:	f040 8317 	bne.w	40390c <_svfprintf_r+0x15c8>
  4032de:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032e0:	f1bb 3fff 	cmp.w	fp, #4294967295
  4032e4:	f023 0320 	bic.w	r3, r3, #32
  4032e8:	930d      	str	r3, [sp, #52]	; 0x34
  4032ea:	f000 8270 	beq.w	4037ce <_svfprintf_r+0x148a>
  4032ee:	2b47      	cmp	r3, #71	; 0x47
  4032f0:	f000 8192 	beq.w	403618 <_svfprintf_r+0x12d4>
  4032f4:	9b07      	ldr	r3, [sp, #28]
  4032f6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  4032fa:	9310      	str	r3, [sp, #64]	; 0x40
  4032fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4032fe:	1e1f      	subs	r7, r3, #0
  403300:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403302:	9308      	str	r3, [sp, #32]
  403304:	bfbb      	ittet	lt
  403306:	463b      	movlt	r3, r7
  403308:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  40330c:	2300      	movge	r3, #0
  40330e:	232d      	movlt	r3, #45	; 0x2d
  403310:	930f      	str	r3, [sp, #60]	; 0x3c
  403312:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403314:	2b66      	cmp	r3, #102	; 0x66
  403316:	f000 825d 	beq.w	4037d4 <_svfprintf_r+0x1490>
  40331a:	2b46      	cmp	r3, #70	; 0x46
  40331c:	f000 8151 	beq.w	4035c2 <_svfprintf_r+0x127e>
  403320:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403322:	9a08      	ldr	r2, [sp, #32]
  403324:	2b45      	cmp	r3, #69	; 0x45
  403326:	a821      	add	r0, sp, #132	; 0x84
  403328:	a91e      	add	r1, sp, #120	; 0x78
  40332a:	bf0c      	ite	eq
  40332c:	f10b 0501 	addeq.w	r5, fp, #1
  403330:	465d      	movne	r5, fp
  403332:	9004      	str	r0, [sp, #16]
  403334:	9103      	str	r1, [sp, #12]
  403336:	a81d      	add	r0, sp, #116	; 0x74
  403338:	2102      	movs	r1, #2
  40333a:	463b      	mov	r3, r7
  40333c:	9002      	str	r0, [sp, #8]
  40333e:	9501      	str	r5, [sp, #4]
  403340:	9100      	str	r1, [sp, #0]
  403342:	980a      	ldr	r0, [sp, #40]	; 0x28
  403344:	f001 fbc4 	bl	404ad0 <_dtoa_r>
  403348:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40334a:	2b67      	cmp	r3, #103	; 0x67
  40334c:	4606      	mov	r6, r0
  40334e:	f040 8290 	bne.w	403872 <_svfprintf_r+0x152e>
  403352:	9b07      	ldr	r3, [sp, #28]
  403354:	07da      	lsls	r2, r3, #31
  403356:	f140 82af 	bpl.w	4038b8 <_svfprintf_r+0x1574>
  40335a:	1974      	adds	r4, r6, r5
  40335c:	9808      	ldr	r0, [sp, #32]
  40335e:	4639      	mov	r1, r7
  403360:	2200      	movs	r2, #0
  403362:	2300      	movs	r3, #0
  403364:	f004 fc5e 	bl	407c24 <__aeabi_dcmpeq>
  403368:	2800      	cmp	r0, #0
  40336a:	f040 8190 	bne.w	40368e <_svfprintf_r+0x134a>
  40336e:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403370:	429c      	cmp	r4, r3
  403372:	d906      	bls.n	403382 <_svfprintf_r+0x103e>
  403374:	2130      	movs	r1, #48	; 0x30
  403376:	1c5a      	adds	r2, r3, #1
  403378:	9221      	str	r2, [sp, #132]	; 0x84
  40337a:	7019      	strb	r1, [r3, #0]
  40337c:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40337e:	429c      	cmp	r4, r3
  403380:	d8f9      	bhi.n	403376 <_svfprintf_r+0x1032>
  403382:	1b9b      	subs	r3, r3, r6
  403384:	9312      	str	r3, [sp, #72]	; 0x48
  403386:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403388:	2b47      	cmp	r3, #71	; 0x47
  40338a:	f000 8179 	beq.w	403680 <_svfprintf_r+0x133c>
  40338e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403390:	2b65      	cmp	r3, #101	; 0x65
  403392:	f340 827d 	ble.w	403890 <_svfprintf_r+0x154c>
  403396:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403398:	2b66      	cmp	r3, #102	; 0x66
  40339a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40339c:	9313      	str	r3, [sp, #76]	; 0x4c
  40339e:	f000 825b 	beq.w	403858 <_svfprintf_r+0x1514>
  4033a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4033a4:	9912      	ldr	r1, [sp, #72]	; 0x48
  4033a6:	428a      	cmp	r2, r1
  4033a8:	f2c0 8230 	blt.w	40380c <_svfprintf_r+0x14c8>
  4033ac:	9b07      	ldr	r3, [sp, #28]
  4033ae:	07d9      	lsls	r1, r3, #31
  4033b0:	f100 8284 	bmi.w	4038bc <_svfprintf_r+0x1578>
  4033b4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4033b8:	920d      	str	r2, [sp, #52]	; 0x34
  4033ba:	2267      	movs	r2, #103	; 0x67
  4033bc:	9211      	str	r2, [sp, #68]	; 0x44
  4033be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4033c0:	2a00      	cmp	r2, #0
  4033c2:	f040 8153 	bne.w	40366c <_svfprintf_r+0x1328>
  4033c6:	9308      	str	r3, [sp, #32]
  4033c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4033ca:	9307      	str	r3, [sp, #28]
  4033cc:	4693      	mov	fp, r2
  4033ce:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4033d2:	f7ff b97d 	b.w	4026d0 <_svfprintf_r+0x38c>
  4033d6:	9907      	ldr	r1, [sp, #28]
  4033d8:	f011 0340 	ands.w	r3, r1, #64	; 0x40
  4033dc:	d015      	beq.n	40340a <_svfprintf_r+0x10c6>
  4033de:	980e      	ldr	r0, [sp, #56]	; 0x38
  4033e0:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  4033e4:	f1bb 0f00 	cmp.w	fp, #0
  4033e8:	8804      	ldrh	r4, [r0, #0]
  4033ea:	f100 0704 	add.w	r7, r0, #4
  4033ee:	f04f 0500 	mov.w	r5, #0
  4033f2:	db16      	blt.n	403422 <_svfprintf_r+0x10de>
  4033f4:	f021 0380 	bic.w	r3, r1, #128	; 0x80
  4033f8:	9307      	str	r3, [sp, #28]
  4033fa:	ea54 0305 	orrs.w	r3, r4, r5
  4033fe:	970e      	str	r7, [sp, #56]	; 0x38
  403400:	f43f ac3a 	beq.w	402c78 <_svfprintf_r+0x934>
  403404:	4617      	mov	r7, r2
  403406:	f7ff b8c2 	b.w	40258e <_svfprintf_r+0x24a>
  40340a:	990e      	ldr	r1, [sp, #56]	; 0x38
  40340c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  403410:	f1bb 0f00 	cmp.w	fp, #0
  403414:	680c      	ldr	r4, [r1, #0]
  403416:	f101 0704 	add.w	r7, r1, #4
  40341a:	f04f 0500 	mov.w	r5, #0
  40341e:	f280 80a5 	bge.w	40356c <_svfprintf_r+0x1228>
  403422:	970e      	str	r7, [sp, #56]	; 0x38
  403424:	2700      	movs	r7, #0
  403426:	f7ff b8b2 	b.w	40258e <_svfprintf_r+0x24a>
  40342a:	9b07      	ldr	r3, [sp, #28]
  40342c:	06df      	lsls	r7, r3, #27
  40342e:	d40b      	bmi.n	403448 <_svfprintf_r+0x1104>
  403430:	9b07      	ldr	r3, [sp, #28]
  403432:	065e      	lsls	r6, r3, #25
  403434:	d508      	bpl.n	403448 <_svfprintf_r+0x1104>
  403436:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403438:	6813      	ldr	r3, [r2, #0]
  40343a:	3204      	adds	r2, #4
  40343c:	920e      	str	r2, [sp, #56]	; 0x38
  40343e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  403442:	801a      	strh	r2, [r3, #0]
  403444:	f7fe bfa4 	b.w	402390 <_svfprintf_r+0x4c>
  403448:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40344a:	6813      	ldr	r3, [r2, #0]
  40344c:	3204      	adds	r2, #4
  40344e:	920e      	str	r2, [sp, #56]	; 0x38
  403450:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403452:	601a      	str	r2, [r3, #0]
  403454:	f7fe bf9c 	b.w	402390 <_svfprintf_r+0x4c>
  403458:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40345a:	9b07      	ldr	r3, [sp, #28]
  40345c:	f013 0f40 	tst.w	r3, #64	; 0x40
  403460:	4613      	mov	r3, r2
  403462:	f103 0304 	add.w	r3, r3, #4
  403466:	bf0c      	ite	eq
  403468:	6814      	ldreq	r4, [r2, #0]
  40346a:	8814      	ldrhne	r4, [r2, #0]
  40346c:	930e      	str	r3, [sp, #56]	; 0x38
  40346e:	2500      	movs	r5, #0
  403470:	f7ff bb02 	b.w	402a78 <_svfprintf_r+0x734>
  403474:	2700      	movs	r7, #0
  403476:	45bb      	cmp	fp, r7
  403478:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  40347c:	f6ff ac0e 	blt.w	402c9c <_svfprintf_r+0x958>
  403480:	9b07      	ldr	r3, [sp, #28]
  403482:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  403486:	9307      	str	r3, [sp, #28]
  403488:	f7ff bbd6 	b.w	402c38 <_svfprintf_r+0x8f4>
  40348c:	4614      	mov	r4, r2
  40348e:	3301      	adds	r3, #1
  403490:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403492:	9324      	str	r3, [sp, #144]	; 0x90
  403494:	442c      	add	r4, r5
  403496:	2b07      	cmp	r3, #7
  403498:	9425      	str	r4, [sp, #148]	; 0x94
  40349a:	e889 0024 	stmia.w	r9, {r2, r5}
  40349e:	f73f ae51 	bgt.w	403144 <_svfprintf_r+0xe00>
  4034a2:	f109 0908 	add.w	r9, r9, #8
  4034a6:	e658      	b.n	40315a <_svfprintf_r+0xe16>
  4034a8:	aa23      	add	r2, sp, #140	; 0x8c
  4034aa:	9909      	ldr	r1, [sp, #36]	; 0x24
  4034ac:	980a      	ldr	r0, [sp, #40]	; 0x28
  4034ae:	f003 fd4d 	bl	406f4c <__ssprint_r>
  4034b2:	2800      	cmp	r0, #0
  4034b4:	f47f a83f 	bne.w	402536 <_svfprintf_r+0x1f2>
  4034b8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4034ba:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4034be:	e40f      	b.n	402ce0 <_svfprintf_r+0x99c>
  4034c0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  4034c2:	f7ff bbe4 	b.w	402c8e <_svfprintf_r+0x94a>
  4034c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034c8:	4ab5      	ldr	r2, [pc, #724]	; (4037a0 <_svfprintf_r+0x145c>)
  4034ca:	f8c9 2000 	str.w	r2, [r9]
  4034ce:	3301      	adds	r3, #1
  4034d0:	3401      	adds	r4, #1
  4034d2:	2201      	movs	r2, #1
  4034d4:	2b07      	cmp	r3, #7
  4034d6:	9425      	str	r4, [sp, #148]	; 0x94
  4034d8:	9324      	str	r3, [sp, #144]	; 0x90
  4034da:	f8c9 2004 	str.w	r2, [r9, #4]
  4034de:	f300 808e 	bgt.w	4035fe <_svfprintf_r+0x12ba>
  4034e2:	f109 0908 	add.w	r9, r9, #8
  4034e6:	b92d      	cbnz	r5, 4034f4 <_svfprintf_r+0x11b0>
  4034e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034ea:	b91b      	cbnz	r3, 4034f4 <_svfprintf_r+0x11b0>
  4034ec:	9b07      	ldr	r3, [sp, #28]
  4034ee:	07df      	lsls	r7, r3, #31
  4034f0:	f57f a9b8 	bpl.w	402864 <_svfprintf_r+0x520>
  4034f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4034f6:	9916      	ldr	r1, [sp, #88]	; 0x58
  4034f8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  4034fa:	f8c9 2000 	str.w	r2, [r9]
  4034fe:	3301      	adds	r3, #1
  403500:	440c      	add	r4, r1
  403502:	2b07      	cmp	r3, #7
  403504:	9425      	str	r4, [sp, #148]	; 0x94
  403506:	f8c9 1004 	str.w	r1, [r9, #4]
  40350a:	9324      	str	r3, [sp, #144]	; 0x90
  40350c:	f300 81c2 	bgt.w	403894 <_svfprintf_r+0x1550>
  403510:	f109 0908 	add.w	r9, r9, #8
  403514:	426d      	negs	r5, r5
  403516:	2d00      	cmp	r5, #0
  403518:	f340 809b 	ble.w	403652 <_svfprintf_r+0x130e>
  40351c:	4aa1      	ldr	r2, [pc, #644]	; (4037a4 <_svfprintf_r+0x1460>)
  40351e:	920f      	str	r2, [sp, #60]	; 0x3c
  403520:	2d10      	cmp	r5, #16
  403522:	f340 80c3 	ble.w	4036ac <_svfprintf_r+0x1368>
  403526:	4622      	mov	r2, r4
  403528:	2710      	movs	r7, #16
  40352a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  40352e:	9c09      	ldr	r4, [sp, #36]	; 0x24
  403530:	e005      	b.n	40353e <_svfprintf_r+0x11fa>
  403532:	f109 0908 	add.w	r9, r9, #8
  403536:	3d10      	subs	r5, #16
  403538:	2d10      	cmp	r5, #16
  40353a:	f340 80b6 	ble.w	4036aa <_svfprintf_r+0x1366>
  40353e:	3301      	adds	r3, #1
  403540:	3210      	adds	r2, #16
  403542:	2b07      	cmp	r3, #7
  403544:	9225      	str	r2, [sp, #148]	; 0x94
  403546:	9324      	str	r3, [sp, #144]	; 0x90
  403548:	f8c9 a000 	str.w	sl, [r9]
  40354c:	f8c9 7004 	str.w	r7, [r9, #4]
  403550:	ddef      	ble.n	403532 <_svfprintf_r+0x11ee>
  403552:	aa23      	add	r2, sp, #140	; 0x8c
  403554:	4621      	mov	r1, r4
  403556:	4658      	mov	r0, fp
  403558:	f003 fcf8 	bl	406f4c <__ssprint_r>
  40355c:	2800      	cmp	r0, #0
  40355e:	f47e afea 	bne.w	402536 <_svfprintf_r+0x1f2>
  403562:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403564:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403566:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40356a:	e7e4      	b.n	403536 <_svfprintf_r+0x11f2>
  40356c:	9a07      	ldr	r2, [sp, #28]
  40356e:	f7ff ba38 	b.w	4029e2 <_svfprintf_r+0x69e>
  403572:	9a07      	ldr	r2, [sp, #28]
  403574:	e590      	b.n	403098 <_svfprintf_r+0xd54>
  403576:	9b07      	ldr	r3, [sp, #28]
  403578:	f043 0320 	orr.w	r3, r3, #32
  40357c:	9307      	str	r3, [sp, #28]
  40357e:	f108 0801 	add.w	r8, r8, #1
  403582:	f898 3000 	ldrb.w	r3, [r8]
  403586:	f7fe bf36 	b.w	4023f6 <_svfprintf_r+0xb2>
  40358a:	aa23      	add	r2, sp, #140	; 0x8c
  40358c:	9909      	ldr	r1, [sp, #36]	; 0x24
  40358e:	980a      	ldr	r0, [sp, #40]	; 0x28
  403590:	f003 fcdc 	bl	406f4c <__ssprint_r>
  403594:	2800      	cmp	r0, #0
  403596:	f47e afce 	bne.w	402536 <_svfprintf_r+0x1f2>
  40359a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40359c:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4035a0:	f7ff bbb6 	b.w	402d10 <_svfprintf_r+0x9cc>
  4035a4:	2140      	movs	r1, #64	; 0x40
  4035a6:	980a      	ldr	r0, [sp, #40]	; 0x28
  4035a8:	f7fe f8da 	bl	401760 <_malloc_r>
  4035ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4035ae:	6010      	str	r0, [r2, #0]
  4035b0:	6110      	str	r0, [r2, #16]
  4035b2:	2800      	cmp	r0, #0
  4035b4:	f000 81e5 	beq.w	403982 <_svfprintf_r+0x163e>
  4035b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4035ba:	2340      	movs	r3, #64	; 0x40
  4035bc:	6153      	str	r3, [r2, #20]
  4035be:	f7fe bed8 	b.w	402372 <_svfprintf_r+0x2e>
  4035c2:	a821      	add	r0, sp, #132	; 0x84
  4035c4:	a91e      	add	r1, sp, #120	; 0x78
  4035c6:	9004      	str	r0, [sp, #16]
  4035c8:	9103      	str	r1, [sp, #12]
  4035ca:	a81d      	add	r0, sp, #116	; 0x74
  4035cc:	2103      	movs	r1, #3
  4035ce:	9002      	str	r0, [sp, #8]
  4035d0:	9a08      	ldr	r2, [sp, #32]
  4035d2:	f8cd b004 	str.w	fp, [sp, #4]
  4035d6:	463b      	mov	r3, r7
  4035d8:	9100      	str	r1, [sp, #0]
  4035da:	980a      	ldr	r0, [sp, #40]	; 0x28
  4035dc:	f001 fa78 	bl	404ad0 <_dtoa_r>
  4035e0:	465d      	mov	r5, fp
  4035e2:	4606      	mov	r6, r0
  4035e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035e6:	2b46      	cmp	r3, #70	; 0x46
  4035e8:	eb06 0405 	add.w	r4, r6, r5
  4035ec:	f47f aeb6 	bne.w	40335c <_svfprintf_r+0x1018>
  4035f0:	7833      	ldrb	r3, [r6, #0]
  4035f2:	2b30      	cmp	r3, #48	; 0x30
  4035f4:	f000 817c 	beq.w	4038f0 <_svfprintf_r+0x15ac>
  4035f8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  4035fa:	442c      	add	r4, r5
  4035fc:	e6ae      	b.n	40335c <_svfprintf_r+0x1018>
  4035fe:	aa23      	add	r2, sp, #140	; 0x8c
  403600:	9909      	ldr	r1, [sp, #36]	; 0x24
  403602:	980a      	ldr	r0, [sp, #40]	; 0x28
  403604:	f003 fca2 	bl	406f4c <__ssprint_r>
  403608:	2800      	cmp	r0, #0
  40360a:	f47e af94 	bne.w	402536 <_svfprintf_r+0x1f2>
  40360e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  403610:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403612:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  403616:	e766      	b.n	4034e6 <_svfprintf_r+0x11a2>
  403618:	f1bb 0f00 	cmp.w	fp, #0
  40361c:	bf08      	it	eq
  40361e:	f04f 0b01 	moveq.w	fp, #1
  403622:	e667      	b.n	4032f4 <_svfprintf_r+0xfb0>
  403624:	970e      	str	r7, [sp, #56]	; 0x38
  403626:	4617      	mov	r7, r2
  403628:	e55e      	b.n	4030e8 <_svfprintf_r+0xda4>
  40362a:	4630      	mov	r0, r6
  40362c:	f7fe fde8 	bl	402200 <strlen>
  403630:	46a3      	mov	fp, r4
  403632:	4603      	mov	r3, r0
  403634:	900d      	str	r0, [sp, #52]	; 0x34
  403636:	f7ff baf4 	b.w	402c22 <_svfprintf_r+0x8de>
  40363a:	aa23      	add	r2, sp, #140	; 0x8c
  40363c:	9909      	ldr	r1, [sp, #36]	; 0x24
  40363e:	980a      	ldr	r0, [sp, #40]	; 0x28
  403640:	f003 fc84 	bl	406f4c <__ssprint_r>
  403644:	2800      	cmp	r0, #0
  403646:	f47e af76 	bne.w	402536 <_svfprintf_r+0x1f2>
  40364a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40364c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40364e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  403652:	9912      	ldr	r1, [sp, #72]	; 0x48
  403654:	f8c9 6000 	str.w	r6, [r9]
  403658:	3301      	adds	r3, #1
  40365a:	440c      	add	r4, r1
  40365c:	2b07      	cmp	r3, #7
  40365e:	9425      	str	r4, [sp, #148]	; 0x94
  403660:	9324      	str	r3, [sp, #144]	; 0x90
  403662:	f8c9 1004 	str.w	r1, [r9, #4]
  403666:	f77f a8fb 	ble.w	402860 <_svfprintf_r+0x51c>
  40366a:	e411      	b.n	402e90 <_svfprintf_r+0xb4c>
  40366c:	272d      	movs	r7, #45	; 0x2d
  40366e:	9308      	str	r3, [sp, #32]
  403670:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403672:	9307      	str	r3, [sp, #28]
  403674:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  403678:	f04f 0b00 	mov.w	fp, #0
  40367c:	f7ff b829 	b.w	4026d2 <_svfprintf_r+0x38e>
  403680:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403682:	1cdd      	adds	r5, r3, #3
  403684:	db1e      	blt.n	4036c4 <_svfprintf_r+0x1380>
  403686:	459b      	cmp	fp, r3
  403688:	db1c      	blt.n	4036c4 <_svfprintf_r+0x1380>
  40368a:	9313      	str	r3, [sp, #76]	; 0x4c
  40368c:	e689      	b.n	4033a2 <_svfprintf_r+0x105e>
  40368e:	4623      	mov	r3, r4
  403690:	e677      	b.n	403382 <_svfprintf_r+0x103e>
  403692:	aa23      	add	r2, sp, #140	; 0x8c
  403694:	9909      	ldr	r1, [sp, #36]	; 0x24
  403696:	980a      	ldr	r0, [sp, #40]	; 0x28
  403698:	f003 fc58 	bl	406f4c <__ssprint_r>
  40369c:	2800      	cmp	r0, #0
  40369e:	f47e af4a 	bne.w	402536 <_svfprintf_r+0x1f2>
  4036a2:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4036a4:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4036a8:	e459      	b.n	402f5e <_svfprintf_r+0xc1a>
  4036aa:	4614      	mov	r4, r2
  4036ac:	3301      	adds	r3, #1
  4036ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4036b0:	9324      	str	r3, [sp, #144]	; 0x90
  4036b2:	442c      	add	r4, r5
  4036b4:	2b07      	cmp	r3, #7
  4036b6:	9425      	str	r4, [sp, #148]	; 0x94
  4036b8:	e889 0024 	stmia.w	r9, {r2, r5}
  4036bc:	dcbd      	bgt.n	40363a <_svfprintf_r+0x12f6>
  4036be:	f109 0908 	add.w	r9, r9, #8
  4036c2:	e7c6      	b.n	403652 <_svfprintf_r+0x130e>
  4036c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4036c6:	3a02      	subs	r2, #2
  4036c8:	9211      	str	r2, [sp, #68]	; 0x44
  4036ca:	3b01      	subs	r3, #1
  4036cc:	2b00      	cmp	r3, #0
  4036ce:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4036d2:	931d      	str	r3, [sp, #116]	; 0x74
  4036d4:	bfb8      	it	lt
  4036d6:	425b      	neglt	r3, r3
  4036d8:	f88d 207c 	strb.w	r2, [sp, #124]	; 0x7c
  4036dc:	bfb4      	ite	lt
  4036de:	222d      	movlt	r2, #45	; 0x2d
  4036e0:	222b      	movge	r2, #43	; 0x2b
  4036e2:	2b09      	cmp	r3, #9
  4036e4:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  4036e8:	f340 80f1 	ble.w	4038ce <_svfprintf_r+0x158a>
  4036ec:	f10d 008b 	add.w	r0, sp, #139	; 0x8b
  4036f0:	4604      	mov	r4, r0
  4036f2:	4a2d      	ldr	r2, [pc, #180]	; (4037a8 <_svfprintf_r+0x1464>)
  4036f4:	fb82 2103 	smull	r2, r1, r2, r3
  4036f8:	17da      	asrs	r2, r3, #31
  4036fa:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
  4036fe:	eb02 0182 	add.w	r1, r2, r2, lsl #2
  403702:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
  403706:	f103 0130 	add.w	r1, r3, #48	; 0x30
  40370a:	2a09      	cmp	r2, #9
  40370c:	4613      	mov	r3, r2
  40370e:	f804 1d01 	strb.w	r1, [r4, #-1]!
  403712:	dcee      	bgt.n	4036f2 <_svfprintf_r+0x13ae>
  403714:	4621      	mov	r1, r4
  403716:	3330      	adds	r3, #48	; 0x30
  403718:	b2da      	uxtb	r2, r3
  40371a:	f801 2d01 	strb.w	r2, [r1, #-1]!
  40371e:	4288      	cmp	r0, r1
  403720:	f240 813a 	bls.w	403998 <_svfprintf_r+0x1654>
  403724:	f10d 017e 	add.w	r1, sp, #126	; 0x7e
  403728:	4623      	mov	r3, r4
  40372a:	e001      	b.n	403730 <_svfprintf_r+0x13ec>
  40372c:	f813 2b01 	ldrb.w	r2, [r3], #1
  403730:	f801 2b01 	strb.w	r2, [r1], #1
  403734:	4298      	cmp	r0, r3
  403736:	d1f9      	bne.n	40372c <_svfprintf_r+0x13e8>
  403738:	1c43      	adds	r3, r0, #1
  40373a:	1b1b      	subs	r3, r3, r4
  40373c:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  403740:	4413      	add	r3, r2
  403742:	aa1f      	add	r2, sp, #124	; 0x7c
  403744:	1a9b      	subs	r3, r3, r2
  403746:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403748:	9319      	str	r3, [sp, #100]	; 0x64
  40374a:	2a01      	cmp	r2, #1
  40374c:	4413      	add	r3, r2
  40374e:	930d      	str	r3, [sp, #52]	; 0x34
  403750:	f340 80ea 	ble.w	403928 <_svfprintf_r+0x15e4>
  403754:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403756:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403758:	4413      	add	r3, r2
  40375a:	2200      	movs	r2, #0
  40375c:	930d      	str	r3, [sp, #52]	; 0x34
  40375e:	9213      	str	r2, [sp, #76]	; 0x4c
  403760:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403764:	e62b      	b.n	4033be <_svfprintf_r+0x107a>
  403766:	aa23      	add	r2, sp, #140	; 0x8c
  403768:	9909      	ldr	r1, [sp, #36]	; 0x24
  40376a:	980a      	ldr	r0, [sp, #40]	; 0x28
  40376c:	f003 fbee 	bl	406f4c <__ssprint_r>
  403770:	2800      	cmp	r0, #0
  403772:	f47e aee0 	bne.w	402536 <_svfprintf_r+0x1f2>
  403776:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403778:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40377a:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40377e:	e4f6      	b.n	40316e <_svfprintf_r+0xe2a>
  403780:	2d06      	cmp	r5, #6
  403782:	462b      	mov	r3, r5
  403784:	bf28      	it	cs
  403786:	2306      	movcs	r3, #6
  403788:	930d      	str	r3, [sp, #52]	; 0x34
  40378a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40378e:	46b3      	mov	fp, r6
  403790:	970e      	str	r7, [sp, #56]	; 0x38
  403792:	9613      	str	r6, [sp, #76]	; 0x4c
  403794:	4637      	mov	r7, r6
  403796:	9308      	str	r3, [sp, #32]
  403798:	4e04      	ldr	r6, [pc, #16]	; (4037ac <_svfprintf_r+0x1468>)
  40379a:	f7fe bf99 	b.w	4026d0 <_svfprintf_r+0x38c>
  40379e:	bf00      	nop
  4037a0:	00408170 	.word	0x00408170
  4037a4:	00408120 	.word	0x00408120
  4037a8:	66666667 	.word	0x66666667
  4037ac:	00408168 	.word	0x00408168
  4037b0:	aa23      	add	r2, sp, #140	; 0x8c
  4037b2:	9909      	ldr	r1, [sp, #36]	; 0x24
  4037b4:	980a      	ldr	r0, [sp, #40]	; 0x28
  4037b6:	f003 fbc9 	bl	406f4c <__ssprint_r>
  4037ba:	2800      	cmp	r0, #0
  4037bc:	f47e aebb 	bne.w	402536 <_svfprintf_r+0x1f2>
  4037c0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4037c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4037c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4037c6:	1ad3      	subs	r3, r2, r3
  4037c8:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4037cc:	e4e7      	b.n	40319e <_svfprintf_r+0xe5a>
  4037ce:	f04f 0b06 	mov.w	fp, #6
  4037d2:	e58f      	b.n	4032f4 <_svfprintf_r+0xfb0>
  4037d4:	a821      	add	r0, sp, #132	; 0x84
  4037d6:	a91e      	add	r1, sp, #120	; 0x78
  4037d8:	9004      	str	r0, [sp, #16]
  4037da:	9103      	str	r1, [sp, #12]
  4037dc:	a81d      	add	r0, sp, #116	; 0x74
  4037de:	2103      	movs	r1, #3
  4037e0:	9002      	str	r0, [sp, #8]
  4037e2:	9a08      	ldr	r2, [sp, #32]
  4037e4:	f8cd b004 	str.w	fp, [sp, #4]
  4037e8:	463b      	mov	r3, r7
  4037ea:	9100      	str	r1, [sp, #0]
  4037ec:	980a      	ldr	r0, [sp, #40]	; 0x28
  4037ee:	f001 f96f 	bl	404ad0 <_dtoa_r>
  4037f2:	465d      	mov	r5, fp
  4037f4:	4606      	mov	r6, r0
  4037f6:	eb00 040b 	add.w	r4, r0, fp
  4037fa:	e6f9      	b.n	4035f0 <_svfprintf_r+0x12ac>
  4037fc:	9307      	str	r3, [sp, #28]
  4037fe:	f7ff b959 	b.w	402ab4 <_svfprintf_r+0x770>
  403802:	272d      	movs	r7, #45	; 0x2d
  403804:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  403808:	f7ff b8b2 	b.w	402970 <_svfprintf_r+0x62c>
  40380c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40380e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403810:	4413      	add	r3, r2
  403812:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403814:	930d      	str	r3, [sp, #52]	; 0x34
  403816:	2a00      	cmp	r2, #0
  403818:	dd7e      	ble.n	403918 <_svfprintf_r+0x15d4>
  40381a:	2267      	movs	r2, #103	; 0x67
  40381c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403820:	9211      	str	r2, [sp, #68]	; 0x44
  403822:	e5cc      	b.n	4033be <_svfprintf_r+0x107a>
  403824:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
  403828:	970e      	str	r7, [sp, #56]	; 0x38
  40382a:	9308      	str	r3, [sp, #32]
  40382c:	950d      	str	r5, [sp, #52]	; 0x34
  40382e:	4683      	mov	fp, r0
  403830:	9013      	str	r0, [sp, #76]	; 0x4c
  403832:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  403836:	f7fe bf4b 	b.w	4026d0 <_svfprintf_r+0x38c>
  40383a:	9b07      	ldr	r3, [sp, #28]
  40383c:	07db      	lsls	r3, r3, #31
  40383e:	465f      	mov	r7, fp
  403840:	d505      	bpl.n	40384e <_svfprintf_r+0x150a>
  403842:	ae40      	add	r6, sp, #256	; 0x100
  403844:	2330      	movs	r3, #48	; 0x30
  403846:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40384a:	f7fe bf37 	b.w	4026bc <_svfprintf_r+0x378>
  40384e:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  403852:	ae30      	add	r6, sp, #192	; 0xc0
  403854:	f7fe bf35 	b.w	4026c2 <_svfprintf_r+0x37e>
  403858:	2b00      	cmp	r3, #0
  40385a:	dd7d      	ble.n	403958 <_svfprintf_r+0x1614>
  40385c:	f1bb 0f00 	cmp.w	fp, #0
  403860:	d13d      	bne.n	4038de <_svfprintf_r+0x159a>
  403862:	9a07      	ldr	r2, [sp, #28]
  403864:	07d4      	lsls	r4, r2, #31
  403866:	d43a      	bmi.n	4038de <_svfprintf_r+0x159a>
  403868:	461a      	mov	r2, r3
  40386a:	920d      	str	r2, [sp, #52]	; 0x34
  40386c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403870:	e5a5      	b.n	4033be <_svfprintf_r+0x107a>
  403872:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403874:	2b47      	cmp	r3, #71	; 0x47
  403876:	f47f ad70 	bne.w	40335a <_svfprintf_r+0x1016>
  40387a:	9b07      	ldr	r3, [sp, #28]
  40387c:	07db      	lsls	r3, r3, #31
  40387e:	f53f aeb1 	bmi.w	4035e4 <_svfprintf_r+0x12a0>
  403882:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403884:	1b9b      	subs	r3, r3, r6
  403886:	9312      	str	r3, [sp, #72]	; 0x48
  403888:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40388a:	2b47      	cmp	r3, #71	; 0x47
  40388c:	f43f aef8 	beq.w	403680 <_svfprintf_r+0x133c>
  403890:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  403892:	e71a      	b.n	4036ca <_svfprintf_r+0x1386>
  403894:	aa23      	add	r2, sp, #140	; 0x8c
  403896:	9909      	ldr	r1, [sp, #36]	; 0x24
  403898:	980a      	ldr	r0, [sp, #40]	; 0x28
  40389a:	f003 fb57 	bl	406f4c <__ssprint_r>
  40389e:	2800      	cmp	r0, #0
  4038a0:	f47e ae49 	bne.w	402536 <_svfprintf_r+0x1f2>
  4038a4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  4038a6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4038a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038aa:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4038ae:	e631      	b.n	403514 <_svfprintf_r+0x11d0>
  4038b0:	46a0      	mov	r8, r4
  4038b2:	2500      	movs	r5, #0
  4038b4:	f7fe bda1 	b.w	4023fa <_svfprintf_r+0xb6>
  4038b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4038ba:	e562      	b.n	403382 <_svfprintf_r+0x103e>
  4038bc:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4038be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4038c0:	4413      	add	r3, r2
  4038c2:	2267      	movs	r2, #103	; 0x67
  4038c4:	930d      	str	r3, [sp, #52]	; 0x34
  4038c6:	9211      	str	r2, [sp, #68]	; 0x44
  4038c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4038cc:	e577      	b.n	4033be <_svfprintf_r+0x107a>
  4038ce:	3330      	adds	r3, #48	; 0x30
  4038d0:	2230      	movs	r2, #48	; 0x30
  4038d2:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  4038d6:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  4038da:	ab20      	add	r3, sp, #128	; 0x80
  4038dc:	e731      	b.n	403742 <_svfprintf_r+0x13fe>
  4038de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4038e0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4038e2:	189d      	adds	r5, r3, r2
  4038e4:	eb05 030b 	add.w	r3, r5, fp
  4038e8:	930d      	str	r3, [sp, #52]	; 0x34
  4038ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4038ee:	e566      	b.n	4033be <_svfprintf_r+0x107a>
  4038f0:	9808      	ldr	r0, [sp, #32]
  4038f2:	4639      	mov	r1, r7
  4038f4:	2200      	movs	r2, #0
  4038f6:	2300      	movs	r3, #0
  4038f8:	f004 f994 	bl	407c24 <__aeabi_dcmpeq>
  4038fc:	2800      	cmp	r0, #0
  4038fe:	f47f ae7b 	bne.w	4035f8 <_svfprintf_r+0x12b4>
  403902:	f1c5 0501 	rsb	r5, r5, #1
  403906:	951d      	str	r5, [sp, #116]	; 0x74
  403908:	442c      	add	r4, r5
  40390a:	e527      	b.n	40335c <_svfprintf_r+0x1018>
  40390c:	4e32      	ldr	r6, [pc, #200]	; (4039d8 <_svfprintf_r+0x1694>)
  40390e:	4b33      	ldr	r3, [pc, #204]	; (4039dc <_svfprintf_r+0x1698>)
  403910:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  403914:	f7ff b82e 	b.w	402974 <_svfprintf_r+0x630>
  403918:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40391a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40391c:	f1c3 0301 	rsb	r3, r3, #1
  403920:	441a      	add	r2, r3
  403922:	4613      	mov	r3, r2
  403924:	920d      	str	r2, [sp, #52]	; 0x34
  403926:	e778      	b.n	40381a <_svfprintf_r+0x14d6>
  403928:	9b07      	ldr	r3, [sp, #28]
  40392a:	f013 0301 	ands.w	r3, r3, #1
  40392e:	f47f af11 	bne.w	403754 <_svfprintf_r+0x1410>
  403932:	9313      	str	r3, [sp, #76]	; 0x4c
  403934:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403936:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40393a:	e540      	b.n	4033be <_svfprintf_r+0x107a>
  40393c:	980e      	ldr	r0, [sp, #56]	; 0x38
  40393e:	f898 3001 	ldrb.w	r3, [r8, #1]
  403942:	6805      	ldr	r5, [r0, #0]
  403944:	3004      	adds	r0, #4
  403946:	2d00      	cmp	r5, #0
  403948:	900e      	str	r0, [sp, #56]	; 0x38
  40394a:	46a0      	mov	r8, r4
  40394c:	f6be ad53 	bge.w	4023f6 <_svfprintf_r+0xb2>
  403950:	f04f 35ff 	mov.w	r5, #4294967295
  403954:	f7fe bd4f 	b.w	4023f6 <_svfprintf_r+0xb2>
  403958:	f1bb 0f00 	cmp.w	fp, #0
  40395c:	d102      	bne.n	403964 <_svfprintf_r+0x1620>
  40395e:	9b07      	ldr	r3, [sp, #28]
  403960:	07d8      	lsls	r0, r3, #31
  403962:	d507      	bpl.n	403974 <_svfprintf_r+0x1630>
  403964:	9b16      	ldr	r3, [sp, #88]	; 0x58
  403966:	1c5d      	adds	r5, r3, #1
  403968:	eb05 030b 	add.w	r3, r5, fp
  40396c:	930d      	str	r3, [sp, #52]	; 0x34
  40396e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403972:	e524      	b.n	4033be <_svfprintf_r+0x107a>
  403974:	2301      	movs	r3, #1
  403976:	930d      	str	r3, [sp, #52]	; 0x34
  403978:	e521      	b.n	4033be <_svfprintf_r+0x107a>
  40397a:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40397e:	f7ff b921 	b.w	402bc4 <_svfprintf_r+0x880>
  403982:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403984:	230c      	movs	r3, #12
  403986:	6013      	str	r3, [r2, #0]
  403988:	f04f 30ff 	mov.w	r0, #4294967295
  40398c:	f7fe bddc 	b.w	402548 <_svfprintf_r+0x204>
  403990:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403994:	f7ff b8f9 	b.w	402b8a <_svfprintf_r+0x846>
  403998:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  40399c:	e6d1      	b.n	403742 <_svfprintf_r+0x13fe>
  40399e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039a2:	f7fe bdd9 	b.w	402558 <_svfprintf_r+0x214>
  4039a6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039aa:	f7ff b857 	b.w	402a5c <_svfprintf_r+0x718>
  4039ae:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039b2:	f7ff b825 	b.w	402a00 <_svfprintf_r+0x6bc>
  4039b6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039ba:	f7ff b94c 	b.w	402c56 <_svfprintf_r+0x912>
  4039be:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039c2:	f7fe bff3 	b.w	4029ac <_svfprintf_r+0x668>
  4039c6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039ca:	f7fe bfa3 	b.w	402914 <_svfprintf_r+0x5d0>
  4039ce:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4039d2:	f7fe be33 	b.w	40263c <_svfprintf_r+0x2f8>
  4039d6:	bf00      	nop
  4039d8:	0040813c 	.word	0x0040813c
  4039dc:	00408138 	.word	0x00408138

004039e0 <__sprint_r.part.0>:
  4039e0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4039e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4039e6:	049c      	lsls	r4, r3, #18
  4039e8:	4692      	mov	sl, r2
  4039ea:	d52c      	bpl.n	403a46 <__sprint_r.part.0+0x66>
  4039ec:	6893      	ldr	r3, [r2, #8]
  4039ee:	6812      	ldr	r2, [r2, #0]
  4039f0:	b33b      	cbz	r3, 403a42 <__sprint_r.part.0+0x62>
  4039f2:	460f      	mov	r7, r1
  4039f4:	4680      	mov	r8, r0
  4039f6:	f102 0908 	add.w	r9, r2, #8
  4039fa:	e919 0060 	ldmdb	r9, {r5, r6}
  4039fe:	08b6      	lsrs	r6, r6, #2
  403a00:	d017      	beq.n	403a32 <__sprint_r.part.0+0x52>
  403a02:	3d04      	subs	r5, #4
  403a04:	2400      	movs	r4, #0
  403a06:	e001      	b.n	403a0c <__sprint_r.part.0+0x2c>
  403a08:	42a6      	cmp	r6, r4
  403a0a:	d010      	beq.n	403a2e <__sprint_r.part.0+0x4e>
  403a0c:	463a      	mov	r2, r7
  403a0e:	f855 1f04 	ldr.w	r1, [r5, #4]!
  403a12:	4640      	mov	r0, r8
  403a14:	f002 f92a 	bl	405c6c <_fputwc_r>
  403a18:	1c43      	adds	r3, r0, #1
  403a1a:	f104 0401 	add.w	r4, r4, #1
  403a1e:	d1f3      	bne.n	403a08 <__sprint_r.part.0+0x28>
  403a20:	2300      	movs	r3, #0
  403a22:	f8ca 3008 	str.w	r3, [sl, #8]
  403a26:	f8ca 3004 	str.w	r3, [sl, #4]
  403a2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403a2e:	f8da 3008 	ldr.w	r3, [sl, #8]
  403a32:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  403a36:	f8ca 3008 	str.w	r3, [sl, #8]
  403a3a:	f109 0908 	add.w	r9, r9, #8
  403a3e:	2b00      	cmp	r3, #0
  403a40:	d1db      	bne.n	4039fa <__sprint_r.part.0+0x1a>
  403a42:	2000      	movs	r0, #0
  403a44:	e7ec      	b.n	403a20 <__sprint_r.part.0+0x40>
  403a46:	f002 fa59 	bl	405efc <__sfvwrite_r>
  403a4a:	2300      	movs	r3, #0
  403a4c:	f8ca 3008 	str.w	r3, [sl, #8]
  403a50:	f8ca 3004 	str.w	r3, [sl, #4]
  403a54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00403a58 <_vfiprintf_r>:
  403a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a5c:	b0ab      	sub	sp, #172	; 0xac
  403a5e:	461c      	mov	r4, r3
  403a60:	9100      	str	r1, [sp, #0]
  403a62:	4690      	mov	r8, r2
  403a64:	9304      	str	r3, [sp, #16]
  403a66:	9005      	str	r0, [sp, #20]
  403a68:	b118      	cbz	r0, 403a72 <_vfiprintf_r+0x1a>
  403a6a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403a6c:	2b00      	cmp	r3, #0
  403a6e:	f000 80de 	beq.w	403c2e <_vfiprintf_r+0x1d6>
  403a72:	9800      	ldr	r0, [sp, #0]
  403a74:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
  403a78:	b28a      	uxth	r2, r1
  403a7a:	0495      	lsls	r5, r2, #18
  403a7c:	d407      	bmi.n	403a8e <_vfiprintf_r+0x36>
  403a7e:	6e43      	ldr	r3, [r0, #100]	; 0x64
  403a80:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  403a84:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  403a88:	8182      	strh	r2, [r0, #12]
  403a8a:	6643      	str	r3, [r0, #100]	; 0x64
  403a8c:	b292      	uxth	r2, r2
  403a8e:	0711      	lsls	r1, r2, #28
  403a90:	f140 80b1 	bpl.w	403bf6 <_vfiprintf_r+0x19e>
  403a94:	9b00      	ldr	r3, [sp, #0]
  403a96:	691b      	ldr	r3, [r3, #16]
  403a98:	2b00      	cmp	r3, #0
  403a9a:	f000 80ac 	beq.w	403bf6 <_vfiprintf_r+0x19e>
  403a9e:	f002 021a 	and.w	r2, r2, #26
  403aa2:	2a0a      	cmp	r2, #10
  403aa4:	f000 80b5 	beq.w	403c12 <_vfiprintf_r+0x1ba>
  403aa8:	2300      	movs	r3, #0
  403aaa:	f10d 0b68 	add.w	fp, sp, #104	; 0x68
  403aae:	9302      	str	r3, [sp, #8]
  403ab0:	930f      	str	r3, [sp, #60]	; 0x3c
  403ab2:	930e      	str	r3, [sp, #56]	; 0x38
  403ab4:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  403ab8:	46da      	mov	sl, fp
  403aba:	f898 3000 	ldrb.w	r3, [r8]
  403abe:	4644      	mov	r4, r8
  403ac0:	b1fb      	cbz	r3, 403b02 <_vfiprintf_r+0xaa>
  403ac2:	2b25      	cmp	r3, #37	; 0x25
  403ac4:	d102      	bne.n	403acc <_vfiprintf_r+0x74>
  403ac6:	e01c      	b.n	403b02 <_vfiprintf_r+0xaa>
  403ac8:	2b25      	cmp	r3, #37	; 0x25
  403aca:	d003      	beq.n	403ad4 <_vfiprintf_r+0x7c>
  403acc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  403ad0:	2b00      	cmp	r3, #0
  403ad2:	d1f9      	bne.n	403ac8 <_vfiprintf_r+0x70>
  403ad4:	ebc8 0504 	rsb	r5, r8, r4
  403ad8:	b19d      	cbz	r5, 403b02 <_vfiprintf_r+0xaa>
  403ada:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403adc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403ade:	f8ca 8000 	str.w	r8, [sl]
  403ae2:	3301      	adds	r3, #1
  403ae4:	442a      	add	r2, r5
  403ae6:	2b07      	cmp	r3, #7
  403ae8:	f8ca 5004 	str.w	r5, [sl, #4]
  403aec:	920f      	str	r2, [sp, #60]	; 0x3c
  403aee:	930e      	str	r3, [sp, #56]	; 0x38
  403af0:	dd7b      	ble.n	403bea <_vfiprintf_r+0x192>
  403af2:	2a00      	cmp	r2, #0
  403af4:	f040 8528 	bne.w	404548 <_vfiprintf_r+0xaf0>
  403af8:	9b02      	ldr	r3, [sp, #8]
  403afa:	920e      	str	r2, [sp, #56]	; 0x38
  403afc:	442b      	add	r3, r5
  403afe:	46da      	mov	sl, fp
  403b00:	9302      	str	r3, [sp, #8]
  403b02:	7823      	ldrb	r3, [r4, #0]
  403b04:	2b00      	cmp	r3, #0
  403b06:	f000 843e 	beq.w	404386 <_vfiprintf_r+0x92e>
  403b0a:	2100      	movs	r1, #0
  403b0c:	f04f 0300 	mov.w	r3, #0
  403b10:	f04f 32ff 	mov.w	r2, #4294967295
  403b14:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  403b18:	f104 0801 	add.w	r8, r4, #1
  403b1c:	7863      	ldrb	r3, [r4, #1]
  403b1e:	9201      	str	r2, [sp, #4]
  403b20:	4608      	mov	r0, r1
  403b22:	460e      	mov	r6, r1
  403b24:	460c      	mov	r4, r1
  403b26:	f108 0801 	add.w	r8, r8, #1
  403b2a:	f1a3 0220 	sub.w	r2, r3, #32
  403b2e:	2a58      	cmp	r2, #88	; 0x58
  403b30:	f200 8393 	bhi.w	40425a <_vfiprintf_r+0x802>
  403b34:	e8df f012 	tbh	[pc, r2, lsl #1]
  403b38:	03910346 	.word	0x03910346
  403b3c:	034e0391 	.word	0x034e0391
  403b40:	03910391 	.word	0x03910391
  403b44:	03910391 	.word	0x03910391
  403b48:	03910391 	.word	0x03910391
  403b4c:	02670289 	.word	0x02670289
  403b50:	00800391 	.word	0x00800391
  403b54:	0391026c 	.word	0x0391026c
  403b58:	025901c6 	.word	0x025901c6
  403b5c:	02590259 	.word	0x02590259
  403b60:	02590259 	.word	0x02590259
  403b64:	02590259 	.word	0x02590259
  403b68:	02590259 	.word	0x02590259
  403b6c:	03910391 	.word	0x03910391
  403b70:	03910391 	.word	0x03910391
  403b74:	03910391 	.word	0x03910391
  403b78:	03910391 	.word	0x03910391
  403b7c:	03910391 	.word	0x03910391
  403b80:	039101cb 	.word	0x039101cb
  403b84:	03910391 	.word	0x03910391
  403b88:	03910391 	.word	0x03910391
  403b8c:	03910391 	.word	0x03910391
  403b90:	03910391 	.word	0x03910391
  403b94:	02140391 	.word	0x02140391
  403b98:	03910391 	.word	0x03910391
  403b9c:	03910391 	.word	0x03910391
  403ba0:	02ee0391 	.word	0x02ee0391
  403ba4:	03910391 	.word	0x03910391
  403ba8:	03910311 	.word	0x03910311
  403bac:	03910391 	.word	0x03910391
  403bb0:	03910391 	.word	0x03910391
  403bb4:	03910391 	.word	0x03910391
  403bb8:	03910391 	.word	0x03910391
  403bbc:	03340391 	.word	0x03340391
  403bc0:	0391038a 	.word	0x0391038a
  403bc4:	03910391 	.word	0x03910391
  403bc8:	038a0367 	.word	0x038a0367
  403bcc:	03910391 	.word	0x03910391
  403bd0:	0391036c 	.word	0x0391036c
  403bd4:	02950379 	.word	0x02950379
  403bd8:	02e90085 	.word	0x02e90085
  403bdc:	029b0391 	.word	0x029b0391
  403be0:	02ba0391 	.word	0x02ba0391
  403be4:	03910391 	.word	0x03910391
  403be8:	0353      	.short	0x0353
  403bea:	f10a 0a08 	add.w	sl, sl, #8
  403bee:	9b02      	ldr	r3, [sp, #8]
  403bf0:	442b      	add	r3, r5
  403bf2:	9302      	str	r3, [sp, #8]
  403bf4:	e785      	b.n	403b02 <_vfiprintf_r+0xaa>
  403bf6:	9900      	ldr	r1, [sp, #0]
  403bf8:	9805      	ldr	r0, [sp, #20]
  403bfa:	f000 fe61 	bl	4048c0 <__swsetup_r>
  403bfe:	2800      	cmp	r0, #0
  403c00:	f040 8558 	bne.w	4046b4 <_vfiprintf_r+0xc5c>
  403c04:	9b00      	ldr	r3, [sp, #0]
  403c06:	899a      	ldrh	r2, [r3, #12]
  403c08:	f002 021a 	and.w	r2, r2, #26
  403c0c:	2a0a      	cmp	r2, #10
  403c0e:	f47f af4b 	bne.w	403aa8 <_vfiprintf_r+0x50>
  403c12:	9900      	ldr	r1, [sp, #0]
  403c14:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  403c18:	2b00      	cmp	r3, #0
  403c1a:	f6ff af45 	blt.w	403aa8 <_vfiprintf_r+0x50>
  403c1e:	4623      	mov	r3, r4
  403c20:	4642      	mov	r2, r8
  403c22:	9805      	ldr	r0, [sp, #20]
  403c24:	f000 fe16 	bl	404854 <__sbprintf>
  403c28:	b02b      	add	sp, #172	; 0xac
  403c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c2e:	f001 ffb3 	bl	405b98 <__sinit>
  403c32:	e71e      	b.n	403a72 <_vfiprintf_r+0x1a>
  403c34:	4264      	negs	r4, r4
  403c36:	9304      	str	r3, [sp, #16]
  403c38:	f046 0604 	orr.w	r6, r6, #4
  403c3c:	f898 3000 	ldrb.w	r3, [r8]
  403c40:	e771      	b.n	403b26 <_vfiprintf_r+0xce>
  403c42:	2130      	movs	r1, #48	; 0x30
  403c44:	9804      	ldr	r0, [sp, #16]
  403c46:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
  403c4a:	9901      	ldr	r1, [sp, #4]
  403c4c:	9406      	str	r4, [sp, #24]
  403c4e:	f04f 0300 	mov.w	r3, #0
  403c52:	2278      	movs	r2, #120	; 0x78
  403c54:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  403c58:	2900      	cmp	r1, #0
  403c5a:	4603      	mov	r3, r0
  403c5c:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
  403c60:	6804      	ldr	r4, [r0, #0]
  403c62:	f103 0304 	add.w	r3, r3, #4
  403c66:	f04f 0500 	mov.w	r5, #0
  403c6a:	f046 0202 	orr.w	r2, r6, #2
  403c6e:	f2c0 8525 	blt.w	4046bc <_vfiprintf_r+0xc64>
  403c72:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  403c76:	ea54 0205 	orrs.w	r2, r4, r5
  403c7a:	f046 0602 	orr.w	r6, r6, #2
  403c7e:	9304      	str	r3, [sp, #16]
  403c80:	f040 84bf 	bne.w	404602 <_vfiprintf_r+0xbaa>
  403c84:	48b3      	ldr	r0, [pc, #716]	; (403f54 <_vfiprintf_r+0x4fc>)
  403c86:	9b01      	ldr	r3, [sp, #4]
  403c88:	2b00      	cmp	r3, #0
  403c8a:	f040 841c 	bne.w	4044c6 <_vfiprintf_r+0xa6e>
  403c8e:	4699      	mov	r9, r3
  403c90:	2300      	movs	r3, #0
  403c92:	9301      	str	r3, [sp, #4]
  403c94:	9303      	str	r3, [sp, #12]
  403c96:	465f      	mov	r7, fp
  403c98:	9b01      	ldr	r3, [sp, #4]
  403c9a:	9a03      	ldr	r2, [sp, #12]
  403c9c:	4293      	cmp	r3, r2
  403c9e:	bfb8      	it	lt
  403ca0:	4613      	movlt	r3, r2
  403ca2:	461d      	mov	r5, r3
  403ca4:	f1b9 0f00 	cmp.w	r9, #0
  403ca8:	d000      	beq.n	403cac <_vfiprintf_r+0x254>
  403caa:	3501      	adds	r5, #1
  403cac:	f016 0302 	ands.w	r3, r6, #2
  403cb0:	9307      	str	r3, [sp, #28]
  403cb2:	bf18      	it	ne
  403cb4:	3502      	addne	r5, #2
  403cb6:	f016 0384 	ands.w	r3, r6, #132	; 0x84
  403cba:	9308      	str	r3, [sp, #32]
  403cbc:	f040 82f1 	bne.w	4042a2 <_vfiprintf_r+0x84a>
  403cc0:	9b06      	ldr	r3, [sp, #24]
  403cc2:	1b5c      	subs	r4, r3, r5
  403cc4:	2c00      	cmp	r4, #0
  403cc6:	f340 82ec 	ble.w	4042a2 <_vfiprintf_r+0x84a>
  403cca:	2c10      	cmp	r4, #16
  403ccc:	f340 8556 	ble.w	40477c <_vfiprintf_r+0xd24>
  403cd0:	f8df 9284 	ldr.w	r9, [pc, #644]	; 403f58 <_vfiprintf_r+0x500>
  403cd4:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  403cd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403cda:	46d4      	mov	ip, sl
  403cdc:	2310      	movs	r3, #16
  403cde:	46c2      	mov	sl, r8
  403ce0:	4670      	mov	r0, lr
  403ce2:	46a8      	mov	r8, r5
  403ce4:	464d      	mov	r5, r9
  403ce6:	f8dd 9014 	ldr.w	r9, [sp, #20]
  403cea:	e007      	b.n	403cfc <_vfiprintf_r+0x2a4>
  403cec:	f100 0e02 	add.w	lr, r0, #2
  403cf0:	f10c 0c08 	add.w	ip, ip, #8
  403cf4:	4608      	mov	r0, r1
  403cf6:	3c10      	subs	r4, #16
  403cf8:	2c10      	cmp	r4, #16
  403cfa:	dd13      	ble.n	403d24 <_vfiprintf_r+0x2cc>
  403cfc:	1c41      	adds	r1, r0, #1
  403cfe:	3210      	adds	r2, #16
  403d00:	2907      	cmp	r1, #7
  403d02:	920f      	str	r2, [sp, #60]	; 0x3c
  403d04:	f8cc 5000 	str.w	r5, [ip]
  403d08:	f8cc 3004 	str.w	r3, [ip, #4]
  403d0c:	910e      	str	r1, [sp, #56]	; 0x38
  403d0e:	dded      	ble.n	403cec <_vfiprintf_r+0x294>
  403d10:	2a00      	cmp	r2, #0
  403d12:	f040 82b7 	bne.w	404284 <_vfiprintf_r+0x82c>
  403d16:	3c10      	subs	r4, #16
  403d18:	2c10      	cmp	r4, #16
  403d1a:	4610      	mov	r0, r2
  403d1c:	f04f 0e01 	mov.w	lr, #1
  403d20:	46dc      	mov	ip, fp
  403d22:	dceb      	bgt.n	403cfc <_vfiprintf_r+0x2a4>
  403d24:	46a9      	mov	r9, r5
  403d26:	4670      	mov	r0, lr
  403d28:	4645      	mov	r5, r8
  403d2a:	46d0      	mov	r8, sl
  403d2c:	46e2      	mov	sl, ip
  403d2e:	4422      	add	r2, r4
  403d30:	2807      	cmp	r0, #7
  403d32:	920f      	str	r2, [sp, #60]	; 0x3c
  403d34:	f8ca 9000 	str.w	r9, [sl]
  403d38:	f8ca 4004 	str.w	r4, [sl, #4]
  403d3c:	900e      	str	r0, [sp, #56]	; 0x38
  403d3e:	f300 8375 	bgt.w	40442c <_vfiprintf_r+0x9d4>
  403d42:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  403d46:	f10a 0a08 	add.w	sl, sl, #8
  403d4a:	f100 0e01 	add.w	lr, r0, #1
  403d4e:	2b00      	cmp	r3, #0
  403d50:	f040 82b0 	bne.w	4042b4 <_vfiprintf_r+0x85c>
  403d54:	9b07      	ldr	r3, [sp, #28]
  403d56:	2b00      	cmp	r3, #0
  403d58:	f000 82c3 	beq.w	4042e2 <_vfiprintf_r+0x88a>
  403d5c:	3202      	adds	r2, #2
  403d5e:	a90c      	add	r1, sp, #48	; 0x30
  403d60:	2302      	movs	r3, #2
  403d62:	f1be 0f07 	cmp.w	lr, #7
  403d66:	920f      	str	r2, [sp, #60]	; 0x3c
  403d68:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  403d6c:	e88a 000a 	stmia.w	sl, {r1, r3}
  403d70:	f340 8378 	ble.w	404464 <_vfiprintf_r+0xa0c>
  403d74:	2a00      	cmp	r2, #0
  403d76:	f040 840a 	bne.w	40458e <_vfiprintf_r+0xb36>
  403d7a:	9b08      	ldr	r3, [sp, #32]
  403d7c:	2b80      	cmp	r3, #128	; 0x80
  403d7e:	f04f 0e01 	mov.w	lr, #1
  403d82:	4610      	mov	r0, r2
  403d84:	46da      	mov	sl, fp
  403d86:	f040 82b0 	bne.w	4042ea <_vfiprintf_r+0x892>
  403d8a:	9b06      	ldr	r3, [sp, #24]
  403d8c:	1b5c      	subs	r4, r3, r5
  403d8e:	2c00      	cmp	r4, #0
  403d90:	f340 82ab 	ble.w	4042ea <_vfiprintf_r+0x892>
  403d94:	2c10      	cmp	r4, #16
  403d96:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 403f5c <_vfiprintf_r+0x504>
  403d9a:	f340 850b 	ble.w	4047b4 <_vfiprintf_r+0xd5c>
  403d9e:	46d6      	mov	lr, sl
  403da0:	2310      	movs	r3, #16
  403da2:	46c2      	mov	sl, r8
  403da4:	46a8      	mov	r8, r5
  403da6:	464d      	mov	r5, r9
  403da8:	f8dd 9014 	ldr.w	r9, [sp, #20]
  403dac:	e007      	b.n	403dbe <_vfiprintf_r+0x366>
  403dae:	f100 0c02 	add.w	ip, r0, #2
  403db2:	f10e 0e08 	add.w	lr, lr, #8
  403db6:	4608      	mov	r0, r1
  403db8:	3c10      	subs	r4, #16
  403dba:	2c10      	cmp	r4, #16
  403dbc:	dd13      	ble.n	403de6 <_vfiprintf_r+0x38e>
  403dbe:	1c41      	adds	r1, r0, #1
  403dc0:	3210      	adds	r2, #16
  403dc2:	2907      	cmp	r1, #7
  403dc4:	920f      	str	r2, [sp, #60]	; 0x3c
  403dc6:	f8ce 5000 	str.w	r5, [lr]
  403dca:	f8ce 3004 	str.w	r3, [lr, #4]
  403dce:	910e      	str	r1, [sp, #56]	; 0x38
  403dd0:	dded      	ble.n	403dae <_vfiprintf_r+0x356>
  403dd2:	2a00      	cmp	r2, #0
  403dd4:	f040 8315 	bne.w	404402 <_vfiprintf_r+0x9aa>
  403dd8:	3c10      	subs	r4, #16
  403dda:	2c10      	cmp	r4, #16
  403ddc:	f04f 0c01 	mov.w	ip, #1
  403de0:	4610      	mov	r0, r2
  403de2:	46de      	mov	lr, fp
  403de4:	dceb      	bgt.n	403dbe <_vfiprintf_r+0x366>
  403de6:	46a9      	mov	r9, r5
  403de8:	4645      	mov	r5, r8
  403dea:	46d0      	mov	r8, sl
  403dec:	46f2      	mov	sl, lr
  403dee:	4422      	add	r2, r4
  403df0:	f1bc 0f07 	cmp.w	ip, #7
  403df4:	920f      	str	r2, [sp, #60]	; 0x3c
  403df6:	f8ca 9000 	str.w	r9, [sl]
  403dfa:	f8ca 4004 	str.w	r4, [sl, #4]
  403dfe:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
  403e02:	f300 83d2 	bgt.w	4045aa <_vfiprintf_r+0xb52>
  403e06:	9b01      	ldr	r3, [sp, #4]
  403e08:	9903      	ldr	r1, [sp, #12]
  403e0a:	1a5c      	subs	r4, r3, r1
  403e0c:	2c00      	cmp	r4, #0
  403e0e:	f10a 0a08 	add.w	sl, sl, #8
  403e12:	f10c 0e01 	add.w	lr, ip, #1
  403e16:	4660      	mov	r0, ip
  403e18:	f300 826d 	bgt.w	4042f6 <_vfiprintf_r+0x89e>
  403e1c:	9903      	ldr	r1, [sp, #12]
  403e1e:	f8ca 7000 	str.w	r7, [sl]
  403e22:	440a      	add	r2, r1
  403e24:	f1be 0f07 	cmp.w	lr, #7
  403e28:	920f      	str	r2, [sp, #60]	; 0x3c
  403e2a:	f8ca 1004 	str.w	r1, [sl, #4]
  403e2e:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  403e32:	f340 82ce 	ble.w	4043d2 <_vfiprintf_r+0x97a>
  403e36:	2a00      	cmp	r2, #0
  403e38:	f040 833a 	bne.w	4044b0 <_vfiprintf_r+0xa58>
  403e3c:	0770      	lsls	r0, r6, #29
  403e3e:	920e      	str	r2, [sp, #56]	; 0x38
  403e40:	d538      	bpl.n	403eb4 <_vfiprintf_r+0x45c>
  403e42:	9b06      	ldr	r3, [sp, #24]
  403e44:	1b5c      	subs	r4, r3, r5
  403e46:	2c00      	cmp	r4, #0
  403e48:	dd34      	ble.n	403eb4 <_vfiprintf_r+0x45c>
  403e4a:	46da      	mov	sl, fp
  403e4c:	2c10      	cmp	r4, #16
  403e4e:	f340 84ab 	ble.w	4047a8 <_vfiprintf_r+0xd50>
  403e52:	f8df 9104 	ldr.w	r9, [pc, #260]	; 403f58 <_vfiprintf_r+0x500>
  403e56:	990e      	ldr	r1, [sp, #56]	; 0x38
  403e58:	464f      	mov	r7, r9
  403e5a:	2610      	movs	r6, #16
  403e5c:	f8dd 9014 	ldr.w	r9, [sp, #20]
  403e60:	e006      	b.n	403e70 <_vfiprintf_r+0x418>
  403e62:	1c88      	adds	r0, r1, #2
  403e64:	f10a 0a08 	add.w	sl, sl, #8
  403e68:	4619      	mov	r1, r3
  403e6a:	3c10      	subs	r4, #16
  403e6c:	2c10      	cmp	r4, #16
  403e6e:	dd13      	ble.n	403e98 <_vfiprintf_r+0x440>
  403e70:	1c4b      	adds	r3, r1, #1
  403e72:	3210      	adds	r2, #16
  403e74:	2b07      	cmp	r3, #7
  403e76:	920f      	str	r2, [sp, #60]	; 0x3c
  403e78:	f8ca 7000 	str.w	r7, [sl]
  403e7c:	f8ca 6004 	str.w	r6, [sl, #4]
  403e80:	930e      	str	r3, [sp, #56]	; 0x38
  403e82:	ddee      	ble.n	403e62 <_vfiprintf_r+0x40a>
  403e84:	2a00      	cmp	r2, #0
  403e86:	f040 828e 	bne.w	4043a6 <_vfiprintf_r+0x94e>
  403e8a:	3c10      	subs	r4, #16
  403e8c:	2c10      	cmp	r4, #16
  403e8e:	f04f 0001 	mov.w	r0, #1
  403e92:	4611      	mov	r1, r2
  403e94:	46da      	mov	sl, fp
  403e96:	dceb      	bgt.n	403e70 <_vfiprintf_r+0x418>
  403e98:	46b9      	mov	r9, r7
  403e9a:	4422      	add	r2, r4
  403e9c:	2807      	cmp	r0, #7
  403e9e:	920f      	str	r2, [sp, #60]	; 0x3c
  403ea0:	f8ca 9000 	str.w	r9, [sl]
  403ea4:	f8ca 4004 	str.w	r4, [sl, #4]
  403ea8:	900e      	str	r0, [sp, #56]	; 0x38
  403eaa:	f340 829b 	ble.w	4043e4 <_vfiprintf_r+0x98c>
  403eae:	2a00      	cmp	r2, #0
  403eb0:	f040 8425 	bne.w	4046fe <_vfiprintf_r+0xca6>
  403eb4:	9b02      	ldr	r3, [sp, #8]
  403eb6:	9a06      	ldr	r2, [sp, #24]
  403eb8:	42aa      	cmp	r2, r5
  403eba:	bfac      	ite	ge
  403ebc:	189b      	addge	r3, r3, r2
  403ebe:	195b      	addlt	r3, r3, r5
  403ec0:	9302      	str	r3, [sp, #8]
  403ec2:	e299      	b.n	4043f8 <_vfiprintf_r+0x9a0>
  403ec4:	f046 0680 	orr.w	r6, r6, #128	; 0x80
  403ec8:	f898 3000 	ldrb.w	r3, [r8]
  403ecc:	e62b      	b.n	403b26 <_vfiprintf_r+0xce>
  403ece:	9406      	str	r4, [sp, #24]
  403ed0:	2900      	cmp	r1, #0
  403ed2:	f040 84af 	bne.w	404834 <_vfiprintf_r+0xddc>
  403ed6:	f046 0610 	orr.w	r6, r6, #16
  403eda:	06b3      	lsls	r3, r6, #26
  403edc:	f140 8312 	bpl.w	404504 <_vfiprintf_r+0xaac>
  403ee0:	9904      	ldr	r1, [sp, #16]
  403ee2:	3107      	adds	r1, #7
  403ee4:	f021 0107 	bic.w	r1, r1, #7
  403ee8:	e9d1 2300 	ldrd	r2, r3, [r1]
  403eec:	3108      	adds	r1, #8
  403eee:	9104      	str	r1, [sp, #16]
  403ef0:	4614      	mov	r4, r2
  403ef2:	461d      	mov	r5, r3
  403ef4:	2a00      	cmp	r2, #0
  403ef6:	f173 0300 	sbcs.w	r3, r3, #0
  403efa:	f2c0 8386 	blt.w	40460a <_vfiprintf_r+0xbb2>
  403efe:	9b01      	ldr	r3, [sp, #4]
  403f00:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  403f04:	2b00      	cmp	r3, #0
  403f06:	f2c0 831a 	blt.w	40453e <_vfiprintf_r+0xae6>
  403f0a:	ea54 0305 	orrs.w	r3, r4, r5
  403f0e:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  403f12:	f000 80ed 	beq.w	4040f0 <_vfiprintf_r+0x698>
  403f16:	2d00      	cmp	r5, #0
  403f18:	bf08      	it	eq
  403f1a:	2c0a      	cmpeq	r4, #10
  403f1c:	f0c0 80ed 	bcc.w	4040fa <_vfiprintf_r+0x6a2>
  403f20:	465f      	mov	r7, fp
  403f22:	4620      	mov	r0, r4
  403f24:	4629      	mov	r1, r5
  403f26:	220a      	movs	r2, #10
  403f28:	2300      	movs	r3, #0
  403f2a:	f003 feeb 	bl	407d04 <__aeabi_uldivmod>
  403f2e:	3230      	adds	r2, #48	; 0x30
  403f30:	f807 2d01 	strb.w	r2, [r7, #-1]!
  403f34:	4620      	mov	r0, r4
  403f36:	4629      	mov	r1, r5
  403f38:	2300      	movs	r3, #0
  403f3a:	220a      	movs	r2, #10
  403f3c:	f003 fee2 	bl	407d04 <__aeabi_uldivmod>
  403f40:	4604      	mov	r4, r0
  403f42:	460d      	mov	r5, r1
  403f44:	ea54 0305 	orrs.w	r3, r4, r5
  403f48:	d1eb      	bne.n	403f22 <_vfiprintf_r+0x4ca>
  403f4a:	ebc7 030b 	rsb	r3, r7, fp
  403f4e:	9303      	str	r3, [sp, #12]
  403f50:	e6a2      	b.n	403c98 <_vfiprintf_r+0x240>
  403f52:	bf00      	nop
  403f54:	00408154 	.word	0x00408154
  403f58:	00408194 	.word	0x00408194
  403f5c:	00408184 	.word	0x00408184
  403f60:	9406      	str	r4, [sp, #24]
  403f62:	2900      	cmp	r1, #0
  403f64:	f040 8462 	bne.w	40482c <_vfiprintf_r+0xdd4>
  403f68:	f046 0610 	orr.w	r6, r6, #16
  403f6c:	f016 0320 	ands.w	r3, r6, #32
  403f70:	f000 82ae 	beq.w	4044d0 <_vfiprintf_r+0xa78>
  403f74:	9b04      	ldr	r3, [sp, #16]
  403f76:	3307      	adds	r3, #7
  403f78:	f023 0307 	bic.w	r3, r3, #7
  403f7c:	f04f 0200 	mov.w	r2, #0
  403f80:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  403f84:	e9d3 4500 	ldrd	r4, r5, [r3]
  403f88:	f103 0208 	add.w	r2, r3, #8
  403f8c:	9b01      	ldr	r3, [sp, #4]
  403f8e:	9204      	str	r2, [sp, #16]
  403f90:	2b00      	cmp	r3, #0
  403f92:	f2c0 8174 	blt.w	40427e <_vfiprintf_r+0x826>
  403f96:	ea54 0305 	orrs.w	r3, r4, r5
  403f9a:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  403f9e:	f040 816e 	bne.w	40427e <_vfiprintf_r+0x826>
  403fa2:	9b01      	ldr	r3, [sp, #4]
  403fa4:	2b00      	cmp	r3, #0
  403fa6:	f000 8430 	beq.w	40480a <_vfiprintf_r+0xdb2>
  403faa:	f04f 0900 	mov.w	r9, #0
  403fae:	2400      	movs	r4, #0
  403fb0:	2500      	movs	r5, #0
  403fb2:	465f      	mov	r7, fp
  403fb4:	08e2      	lsrs	r2, r4, #3
  403fb6:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  403fba:	08e9      	lsrs	r1, r5, #3
  403fbc:	f004 0307 	and.w	r3, r4, #7
  403fc0:	460d      	mov	r5, r1
  403fc2:	4614      	mov	r4, r2
  403fc4:	3330      	adds	r3, #48	; 0x30
  403fc6:	ea54 0205 	orrs.w	r2, r4, r5
  403fca:	f807 3d01 	strb.w	r3, [r7, #-1]!
  403fce:	d1f1      	bne.n	403fb4 <_vfiprintf_r+0x55c>
  403fd0:	07f4      	lsls	r4, r6, #31
  403fd2:	d5ba      	bpl.n	403f4a <_vfiprintf_r+0x4f2>
  403fd4:	2b30      	cmp	r3, #48	; 0x30
  403fd6:	d0b8      	beq.n	403f4a <_vfiprintf_r+0x4f2>
  403fd8:	2230      	movs	r2, #48	; 0x30
  403fda:	1e7b      	subs	r3, r7, #1
  403fdc:	f807 2c01 	strb.w	r2, [r7, #-1]
  403fe0:	ebc3 020b 	rsb	r2, r3, fp
  403fe4:	9203      	str	r2, [sp, #12]
  403fe6:	461f      	mov	r7, r3
  403fe8:	e656      	b.n	403c98 <_vfiprintf_r+0x240>
  403fea:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  403fee:	2400      	movs	r4, #0
  403ff0:	f818 3b01 	ldrb.w	r3, [r8], #1
  403ff4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403ff8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
  403ffc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  404000:	2a09      	cmp	r2, #9
  404002:	d9f5      	bls.n	403ff0 <_vfiprintf_r+0x598>
  404004:	e591      	b.n	403b2a <_vfiprintf_r+0xd2>
  404006:	f898 3000 	ldrb.w	r3, [r8]
  40400a:	2101      	movs	r1, #1
  40400c:	202b      	movs	r0, #43	; 0x2b
  40400e:	e58a      	b.n	403b26 <_vfiprintf_r+0xce>
  404010:	f898 3000 	ldrb.w	r3, [r8]
  404014:	2b2a      	cmp	r3, #42	; 0x2a
  404016:	f108 0501 	add.w	r5, r8, #1
  40401a:	f000 83dd 	beq.w	4047d8 <_vfiprintf_r+0xd80>
  40401e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  404022:	2a09      	cmp	r2, #9
  404024:	46a8      	mov	r8, r5
  404026:	bf98      	it	ls
  404028:	2500      	movls	r5, #0
  40402a:	f200 83ce 	bhi.w	4047ca <_vfiprintf_r+0xd72>
  40402e:	f818 3b01 	ldrb.w	r3, [r8], #1
  404032:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  404036:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  40403a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40403e:	2a09      	cmp	r2, #9
  404040:	d9f5      	bls.n	40402e <_vfiprintf_r+0x5d6>
  404042:	ea45 72e5 	orr.w	r2, r5, r5, asr #31
  404046:	9201      	str	r2, [sp, #4]
  404048:	e56f      	b.n	403b2a <_vfiprintf_r+0xd2>
  40404a:	9a04      	ldr	r2, [sp, #16]
  40404c:	6814      	ldr	r4, [r2, #0]
  40404e:	4613      	mov	r3, r2
  404050:	2c00      	cmp	r4, #0
  404052:	f103 0304 	add.w	r3, r3, #4
  404056:	f6ff aded 	blt.w	403c34 <_vfiprintf_r+0x1dc>
  40405a:	9304      	str	r3, [sp, #16]
  40405c:	f898 3000 	ldrb.w	r3, [r8]
  404060:	e561      	b.n	403b26 <_vfiprintf_r+0xce>
  404062:	9406      	str	r4, [sp, #24]
  404064:	2900      	cmp	r1, #0
  404066:	d081      	beq.n	403f6c <_vfiprintf_r+0x514>
  404068:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  40406c:	e77e      	b.n	403f6c <_vfiprintf_r+0x514>
  40406e:	9a04      	ldr	r2, [sp, #16]
  404070:	9406      	str	r4, [sp, #24]
  404072:	6817      	ldr	r7, [r2, #0]
  404074:	f04f 0300 	mov.w	r3, #0
  404078:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  40407c:	1d14      	adds	r4, r2, #4
  40407e:	9b01      	ldr	r3, [sp, #4]
  404080:	2f00      	cmp	r7, #0
  404082:	f000 8386 	beq.w	404792 <_vfiprintf_r+0xd3a>
  404086:	2b00      	cmp	r3, #0
  404088:	f2c0 835f 	blt.w	40474a <_vfiprintf_r+0xcf2>
  40408c:	461a      	mov	r2, r3
  40408e:	2100      	movs	r1, #0
  404090:	4638      	mov	r0, r7
  404092:	f002 f965 	bl	406360 <memchr>
  404096:	2800      	cmp	r0, #0
  404098:	f000 838f 	beq.w	4047ba <_vfiprintf_r+0xd62>
  40409c:	1bc3      	subs	r3, r0, r7
  40409e:	9303      	str	r3, [sp, #12]
  4040a0:	2300      	movs	r3, #0
  4040a2:	9404      	str	r4, [sp, #16]
  4040a4:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  4040a8:	9301      	str	r3, [sp, #4]
  4040aa:	e5f5      	b.n	403c98 <_vfiprintf_r+0x240>
  4040ac:	9406      	str	r4, [sp, #24]
  4040ae:	2900      	cmp	r1, #0
  4040b0:	f040 83b9 	bne.w	404826 <_vfiprintf_r+0xdce>
  4040b4:	f016 0920 	ands.w	r9, r6, #32
  4040b8:	d135      	bne.n	404126 <_vfiprintf_r+0x6ce>
  4040ba:	f016 0310 	ands.w	r3, r6, #16
  4040be:	d103      	bne.n	4040c8 <_vfiprintf_r+0x670>
  4040c0:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  4040c4:	f040 832a 	bne.w	40471c <_vfiprintf_r+0xcc4>
  4040c8:	9a04      	ldr	r2, [sp, #16]
  4040ca:	4613      	mov	r3, r2
  4040cc:	6814      	ldr	r4, [r2, #0]
  4040ce:	9a01      	ldr	r2, [sp, #4]
  4040d0:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  4040d4:	2a00      	cmp	r2, #0
  4040d6:	f103 0304 	add.w	r3, r3, #4
  4040da:	f04f 0500 	mov.w	r5, #0
  4040de:	f2c0 8332 	blt.w	404746 <_vfiprintf_r+0xcee>
  4040e2:	ea54 0205 	orrs.w	r2, r4, r5
  4040e6:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4040ea:	9304      	str	r3, [sp, #16]
  4040ec:	f47f af13 	bne.w	403f16 <_vfiprintf_r+0x4be>
  4040f0:	9b01      	ldr	r3, [sp, #4]
  4040f2:	2b00      	cmp	r3, #0
  4040f4:	f43f adcc 	beq.w	403c90 <_vfiprintf_r+0x238>
  4040f8:	2400      	movs	r4, #0
  4040fa:	af2a      	add	r7, sp, #168	; 0xa8
  4040fc:	3430      	adds	r4, #48	; 0x30
  4040fe:	f807 4d41 	strb.w	r4, [r7, #-65]!
  404102:	ebc7 030b 	rsb	r3, r7, fp
  404106:	9303      	str	r3, [sp, #12]
  404108:	e5c6      	b.n	403c98 <_vfiprintf_r+0x240>
  40410a:	f046 0620 	orr.w	r6, r6, #32
  40410e:	f898 3000 	ldrb.w	r3, [r8]
  404112:	e508      	b.n	403b26 <_vfiprintf_r+0xce>
  404114:	9406      	str	r4, [sp, #24]
  404116:	2900      	cmp	r1, #0
  404118:	f040 836e 	bne.w	4047f8 <_vfiprintf_r+0xda0>
  40411c:	f046 0610 	orr.w	r6, r6, #16
  404120:	f016 0920 	ands.w	r9, r6, #32
  404124:	d0c9      	beq.n	4040ba <_vfiprintf_r+0x662>
  404126:	9b04      	ldr	r3, [sp, #16]
  404128:	3307      	adds	r3, #7
  40412a:	f023 0307 	bic.w	r3, r3, #7
  40412e:	f04f 0200 	mov.w	r2, #0
  404132:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  404136:	e9d3 4500 	ldrd	r4, r5, [r3]
  40413a:	f103 0208 	add.w	r2, r3, #8
  40413e:	9b01      	ldr	r3, [sp, #4]
  404140:	9204      	str	r2, [sp, #16]
  404142:	2b00      	cmp	r3, #0
  404144:	f2c0 81f9 	blt.w	40453a <_vfiprintf_r+0xae2>
  404148:	ea54 0305 	orrs.w	r3, r4, r5
  40414c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  404150:	f04f 0900 	mov.w	r9, #0
  404154:	f47f aedf 	bne.w	403f16 <_vfiprintf_r+0x4be>
  404158:	e7ca      	b.n	4040f0 <_vfiprintf_r+0x698>
  40415a:	9406      	str	r4, [sp, #24]
  40415c:	2900      	cmp	r1, #0
  40415e:	f040 8351 	bne.w	404804 <_vfiprintf_r+0xdac>
  404162:	06b2      	lsls	r2, r6, #26
  404164:	48ae      	ldr	r0, [pc, #696]	; (404420 <_vfiprintf_r+0x9c8>)
  404166:	d541      	bpl.n	4041ec <_vfiprintf_r+0x794>
  404168:	9a04      	ldr	r2, [sp, #16]
  40416a:	3207      	adds	r2, #7
  40416c:	f022 0207 	bic.w	r2, r2, #7
  404170:	e9d2 4500 	ldrd	r4, r5, [r2]
  404174:	f102 0108 	add.w	r1, r2, #8
  404178:	9104      	str	r1, [sp, #16]
  40417a:	f016 0901 	ands.w	r9, r6, #1
  40417e:	f000 8177 	beq.w	404470 <_vfiprintf_r+0xa18>
  404182:	ea54 0205 	orrs.w	r2, r4, r5
  404186:	f040 8226 	bne.w	4045d6 <_vfiprintf_r+0xb7e>
  40418a:	f04f 0300 	mov.w	r3, #0
  40418e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  404192:	9b01      	ldr	r3, [sp, #4]
  404194:	2b00      	cmp	r3, #0
  404196:	f2c0 8196 	blt.w	4044c6 <_vfiprintf_r+0xa6e>
  40419a:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40419e:	e572      	b.n	403c86 <_vfiprintf_r+0x22e>
  4041a0:	9a04      	ldr	r2, [sp, #16]
  4041a2:	9406      	str	r4, [sp, #24]
  4041a4:	6813      	ldr	r3, [r2, #0]
  4041a6:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  4041aa:	4613      	mov	r3, r2
  4041ac:	f04f 0100 	mov.w	r1, #0
  4041b0:	2501      	movs	r5, #1
  4041b2:	3304      	adds	r3, #4
  4041b4:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4041b8:	9304      	str	r3, [sp, #16]
  4041ba:	9503      	str	r5, [sp, #12]
  4041bc:	af10      	add	r7, sp, #64	; 0x40
  4041be:	2300      	movs	r3, #0
  4041c0:	9301      	str	r3, [sp, #4]
  4041c2:	e573      	b.n	403cac <_vfiprintf_r+0x254>
  4041c4:	f898 3000 	ldrb.w	r3, [r8]
  4041c8:	2800      	cmp	r0, #0
  4041ca:	f47f acac 	bne.w	403b26 <_vfiprintf_r+0xce>
  4041ce:	2101      	movs	r1, #1
  4041d0:	2020      	movs	r0, #32
  4041d2:	e4a8      	b.n	403b26 <_vfiprintf_r+0xce>
  4041d4:	f046 0601 	orr.w	r6, r6, #1
  4041d8:	f898 3000 	ldrb.w	r3, [r8]
  4041dc:	e4a3      	b.n	403b26 <_vfiprintf_r+0xce>
  4041de:	9406      	str	r4, [sp, #24]
  4041e0:	2900      	cmp	r1, #0
  4041e2:	f040 830c 	bne.w	4047fe <_vfiprintf_r+0xda6>
  4041e6:	06b2      	lsls	r2, r6, #26
  4041e8:	488e      	ldr	r0, [pc, #568]	; (404424 <_vfiprintf_r+0x9cc>)
  4041ea:	d4bd      	bmi.n	404168 <_vfiprintf_r+0x710>
  4041ec:	9904      	ldr	r1, [sp, #16]
  4041ee:	06f7      	lsls	r7, r6, #27
  4041f0:	460a      	mov	r2, r1
  4041f2:	f100 819d 	bmi.w	404530 <_vfiprintf_r+0xad8>
  4041f6:	0675      	lsls	r5, r6, #25
  4041f8:	f140 819a 	bpl.w	404530 <_vfiprintf_r+0xad8>
  4041fc:	3204      	adds	r2, #4
  4041fe:	880c      	ldrh	r4, [r1, #0]
  404200:	9204      	str	r2, [sp, #16]
  404202:	2500      	movs	r5, #0
  404204:	e7b9      	b.n	40417a <_vfiprintf_r+0x722>
  404206:	f046 0640 	orr.w	r6, r6, #64	; 0x40
  40420a:	f898 3000 	ldrb.w	r3, [r8]
  40420e:	e48a      	b.n	403b26 <_vfiprintf_r+0xce>
  404210:	f898 3000 	ldrb.w	r3, [r8]
  404214:	2b6c      	cmp	r3, #108	; 0x6c
  404216:	bf03      	ittte	eq
  404218:	f898 3001 	ldrbeq.w	r3, [r8, #1]
  40421c:	f046 0620 	orreq.w	r6, r6, #32
  404220:	f108 0801 	addeq.w	r8, r8, #1
  404224:	f046 0610 	orrne.w	r6, r6, #16
  404228:	e47d      	b.n	403b26 <_vfiprintf_r+0xce>
  40422a:	2900      	cmp	r1, #0
  40422c:	f040 8309 	bne.w	404842 <_vfiprintf_r+0xdea>
  404230:	06b4      	lsls	r4, r6, #26
  404232:	f140 821c 	bpl.w	40466e <_vfiprintf_r+0xc16>
  404236:	9a04      	ldr	r2, [sp, #16]
  404238:	9902      	ldr	r1, [sp, #8]
  40423a:	6813      	ldr	r3, [r2, #0]
  40423c:	17cd      	asrs	r5, r1, #31
  40423e:	4608      	mov	r0, r1
  404240:	3204      	adds	r2, #4
  404242:	4629      	mov	r1, r5
  404244:	9204      	str	r2, [sp, #16]
  404246:	e9c3 0100 	strd	r0, r1, [r3]
  40424a:	e436      	b.n	403aba <_vfiprintf_r+0x62>
  40424c:	9406      	str	r4, [sp, #24]
  40424e:	2900      	cmp	r1, #0
  404250:	f43f ae43 	beq.w	403eda <_vfiprintf_r+0x482>
  404254:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404258:	e63f      	b.n	403eda <_vfiprintf_r+0x482>
  40425a:	9406      	str	r4, [sp, #24]
  40425c:	2900      	cmp	r1, #0
  40425e:	f040 82ed 	bne.w	40483c <_vfiprintf_r+0xde4>
  404262:	2b00      	cmp	r3, #0
  404264:	f000 808f 	beq.w	404386 <_vfiprintf_r+0x92e>
  404268:	2501      	movs	r5, #1
  40426a:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  40426e:	f04f 0300 	mov.w	r3, #0
  404272:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  404276:	9503      	str	r5, [sp, #12]
  404278:	af10      	add	r7, sp, #64	; 0x40
  40427a:	e7a0      	b.n	4041be <_vfiprintf_r+0x766>
  40427c:	9304      	str	r3, [sp, #16]
  40427e:	f04f 0900 	mov.w	r9, #0
  404282:	e696      	b.n	403fb2 <_vfiprintf_r+0x55a>
  404284:	aa0d      	add	r2, sp, #52	; 0x34
  404286:	9900      	ldr	r1, [sp, #0]
  404288:	9309      	str	r3, [sp, #36]	; 0x24
  40428a:	4648      	mov	r0, r9
  40428c:	f7ff fba8 	bl	4039e0 <__sprint_r.part.0>
  404290:	2800      	cmp	r0, #0
  404292:	d17f      	bne.n	404394 <_vfiprintf_r+0x93c>
  404294:	980e      	ldr	r0, [sp, #56]	; 0x38
  404296:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404298:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40429a:	f100 0e01 	add.w	lr, r0, #1
  40429e:	46dc      	mov	ip, fp
  4042a0:	e529      	b.n	403cf6 <_vfiprintf_r+0x29e>
  4042a2:	980e      	ldr	r0, [sp, #56]	; 0x38
  4042a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4042a6:	f100 0e01 	add.w	lr, r0, #1
  4042aa:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  4042ae:	2b00      	cmp	r3, #0
  4042b0:	f43f ad50 	beq.w	403d54 <_vfiprintf_r+0x2fc>
  4042b4:	3201      	adds	r2, #1
  4042b6:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  4042ba:	2301      	movs	r3, #1
  4042bc:	f1be 0f07 	cmp.w	lr, #7
  4042c0:	920f      	str	r2, [sp, #60]	; 0x3c
  4042c2:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  4042c6:	e88a 000a 	stmia.w	sl, {r1, r3}
  4042ca:	f340 80bf 	ble.w	40444c <_vfiprintf_r+0x9f4>
  4042ce:	2a00      	cmp	r2, #0
  4042d0:	f040 814e 	bne.w	404570 <_vfiprintf_r+0xb18>
  4042d4:	9907      	ldr	r1, [sp, #28]
  4042d6:	2900      	cmp	r1, #0
  4042d8:	f040 80be 	bne.w	404458 <_vfiprintf_r+0xa00>
  4042dc:	469e      	mov	lr, r3
  4042de:	4610      	mov	r0, r2
  4042e0:	46da      	mov	sl, fp
  4042e2:	9b08      	ldr	r3, [sp, #32]
  4042e4:	2b80      	cmp	r3, #128	; 0x80
  4042e6:	f43f ad50 	beq.w	403d8a <_vfiprintf_r+0x332>
  4042ea:	9b01      	ldr	r3, [sp, #4]
  4042ec:	9903      	ldr	r1, [sp, #12]
  4042ee:	1a5c      	subs	r4, r3, r1
  4042f0:	2c00      	cmp	r4, #0
  4042f2:	f77f ad93 	ble.w	403e1c <_vfiprintf_r+0x3c4>
  4042f6:	2c10      	cmp	r4, #16
  4042f8:	f8df 912c 	ldr.w	r9, [pc, #300]	; 404428 <_vfiprintf_r+0x9d0>
  4042fc:	dd25      	ble.n	40434a <_vfiprintf_r+0x8f2>
  4042fe:	46d4      	mov	ip, sl
  404300:	2310      	movs	r3, #16
  404302:	46c2      	mov	sl, r8
  404304:	46a8      	mov	r8, r5
  404306:	464d      	mov	r5, r9
  404308:	f8dd 9014 	ldr.w	r9, [sp, #20]
  40430c:	e007      	b.n	40431e <_vfiprintf_r+0x8c6>
  40430e:	f100 0e02 	add.w	lr, r0, #2
  404312:	f10c 0c08 	add.w	ip, ip, #8
  404316:	4608      	mov	r0, r1
  404318:	3c10      	subs	r4, #16
  40431a:	2c10      	cmp	r4, #16
  40431c:	dd11      	ble.n	404342 <_vfiprintf_r+0x8ea>
  40431e:	1c41      	adds	r1, r0, #1
  404320:	3210      	adds	r2, #16
  404322:	2907      	cmp	r1, #7
  404324:	920f      	str	r2, [sp, #60]	; 0x3c
  404326:	f8cc 5000 	str.w	r5, [ip]
  40432a:	f8cc 3004 	str.w	r3, [ip, #4]
  40432e:	910e      	str	r1, [sp, #56]	; 0x38
  404330:	dded      	ble.n	40430e <_vfiprintf_r+0x8b6>
  404332:	b9d2      	cbnz	r2, 40436a <_vfiprintf_r+0x912>
  404334:	3c10      	subs	r4, #16
  404336:	2c10      	cmp	r4, #16
  404338:	f04f 0e01 	mov.w	lr, #1
  40433c:	4610      	mov	r0, r2
  40433e:	46dc      	mov	ip, fp
  404340:	dced      	bgt.n	40431e <_vfiprintf_r+0x8c6>
  404342:	46a9      	mov	r9, r5
  404344:	4645      	mov	r5, r8
  404346:	46d0      	mov	r8, sl
  404348:	46e2      	mov	sl, ip
  40434a:	4422      	add	r2, r4
  40434c:	f1be 0f07 	cmp.w	lr, #7
  404350:	920f      	str	r2, [sp, #60]	; 0x3c
  404352:	f8ca 9000 	str.w	r9, [sl]
  404356:	f8ca 4004 	str.w	r4, [sl, #4]
  40435a:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  40435e:	dc2e      	bgt.n	4043be <_vfiprintf_r+0x966>
  404360:	f10a 0a08 	add.w	sl, sl, #8
  404364:	f10e 0e01 	add.w	lr, lr, #1
  404368:	e558      	b.n	403e1c <_vfiprintf_r+0x3c4>
  40436a:	aa0d      	add	r2, sp, #52	; 0x34
  40436c:	9900      	ldr	r1, [sp, #0]
  40436e:	9301      	str	r3, [sp, #4]
  404370:	4648      	mov	r0, r9
  404372:	f7ff fb35 	bl	4039e0 <__sprint_r.part.0>
  404376:	b968      	cbnz	r0, 404394 <_vfiprintf_r+0x93c>
  404378:	980e      	ldr	r0, [sp, #56]	; 0x38
  40437a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40437c:	9b01      	ldr	r3, [sp, #4]
  40437e:	f100 0e01 	add.w	lr, r0, #1
  404382:	46dc      	mov	ip, fp
  404384:	e7c8      	b.n	404318 <_vfiprintf_r+0x8c0>
  404386:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404388:	b123      	cbz	r3, 404394 <_vfiprintf_r+0x93c>
  40438a:	9805      	ldr	r0, [sp, #20]
  40438c:	9900      	ldr	r1, [sp, #0]
  40438e:	aa0d      	add	r2, sp, #52	; 0x34
  404390:	f7ff fb26 	bl	4039e0 <__sprint_r.part.0>
  404394:	9b00      	ldr	r3, [sp, #0]
  404396:	899b      	ldrh	r3, [r3, #12]
  404398:	065a      	lsls	r2, r3, #25
  40439a:	f100 818b 	bmi.w	4046b4 <_vfiprintf_r+0xc5c>
  40439e:	9802      	ldr	r0, [sp, #8]
  4043a0:	b02b      	add	sp, #172	; 0xac
  4043a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043a6:	aa0d      	add	r2, sp, #52	; 0x34
  4043a8:	9900      	ldr	r1, [sp, #0]
  4043aa:	4648      	mov	r0, r9
  4043ac:	f7ff fb18 	bl	4039e0 <__sprint_r.part.0>
  4043b0:	2800      	cmp	r0, #0
  4043b2:	d1ef      	bne.n	404394 <_vfiprintf_r+0x93c>
  4043b4:	990e      	ldr	r1, [sp, #56]	; 0x38
  4043b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4043b8:	1c48      	adds	r0, r1, #1
  4043ba:	46da      	mov	sl, fp
  4043bc:	e555      	b.n	403e6a <_vfiprintf_r+0x412>
  4043be:	2a00      	cmp	r2, #0
  4043c0:	f040 80fb 	bne.w	4045ba <_vfiprintf_r+0xb62>
  4043c4:	9a03      	ldr	r2, [sp, #12]
  4043c6:	921b      	str	r2, [sp, #108]	; 0x6c
  4043c8:	2301      	movs	r3, #1
  4043ca:	920f      	str	r2, [sp, #60]	; 0x3c
  4043cc:	971a      	str	r7, [sp, #104]	; 0x68
  4043ce:	930e      	str	r3, [sp, #56]	; 0x38
  4043d0:	46da      	mov	sl, fp
  4043d2:	f10a 0a08 	add.w	sl, sl, #8
  4043d6:	0771      	lsls	r1, r6, #29
  4043d8:	d504      	bpl.n	4043e4 <_vfiprintf_r+0x98c>
  4043da:	9b06      	ldr	r3, [sp, #24]
  4043dc:	1b5c      	subs	r4, r3, r5
  4043de:	2c00      	cmp	r4, #0
  4043e0:	f73f ad34 	bgt.w	403e4c <_vfiprintf_r+0x3f4>
  4043e4:	9b02      	ldr	r3, [sp, #8]
  4043e6:	9906      	ldr	r1, [sp, #24]
  4043e8:	42a9      	cmp	r1, r5
  4043ea:	bfac      	ite	ge
  4043ec:	185b      	addge	r3, r3, r1
  4043ee:	195b      	addlt	r3, r3, r5
  4043f0:	9302      	str	r3, [sp, #8]
  4043f2:	2a00      	cmp	r2, #0
  4043f4:	f040 80b3 	bne.w	40455e <_vfiprintf_r+0xb06>
  4043f8:	2300      	movs	r3, #0
  4043fa:	930e      	str	r3, [sp, #56]	; 0x38
  4043fc:	46da      	mov	sl, fp
  4043fe:	f7ff bb5c 	b.w	403aba <_vfiprintf_r+0x62>
  404402:	aa0d      	add	r2, sp, #52	; 0x34
  404404:	9900      	ldr	r1, [sp, #0]
  404406:	9307      	str	r3, [sp, #28]
  404408:	4648      	mov	r0, r9
  40440a:	f7ff fae9 	bl	4039e0 <__sprint_r.part.0>
  40440e:	2800      	cmp	r0, #0
  404410:	d1c0      	bne.n	404394 <_vfiprintf_r+0x93c>
  404412:	980e      	ldr	r0, [sp, #56]	; 0x38
  404414:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404416:	9b07      	ldr	r3, [sp, #28]
  404418:	f100 0c01 	add.w	ip, r0, #1
  40441c:	46de      	mov	lr, fp
  40441e:	e4cb      	b.n	403db8 <_vfiprintf_r+0x360>
  404420:	00408140 	.word	0x00408140
  404424:	00408154 	.word	0x00408154
  404428:	00408184 	.word	0x00408184
  40442c:	2a00      	cmp	r2, #0
  40442e:	f040 8133 	bne.w	404698 <_vfiprintf_r+0xc40>
  404432:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  404436:	2b00      	cmp	r3, #0
  404438:	f000 80f5 	beq.w	404626 <_vfiprintf_r+0xbce>
  40443c:	2301      	movs	r3, #1
  40443e:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  404442:	461a      	mov	r2, r3
  404444:	931b      	str	r3, [sp, #108]	; 0x6c
  404446:	469e      	mov	lr, r3
  404448:	911a      	str	r1, [sp, #104]	; 0x68
  40444a:	46da      	mov	sl, fp
  40444c:	4670      	mov	r0, lr
  40444e:	f10a 0a08 	add.w	sl, sl, #8
  404452:	f10e 0e01 	add.w	lr, lr, #1
  404456:	e47d      	b.n	403d54 <_vfiprintf_r+0x2fc>
  404458:	a90c      	add	r1, sp, #48	; 0x30
  40445a:	2202      	movs	r2, #2
  40445c:	469e      	mov	lr, r3
  40445e:	911a      	str	r1, [sp, #104]	; 0x68
  404460:	921b      	str	r2, [sp, #108]	; 0x6c
  404462:	46da      	mov	sl, fp
  404464:	4670      	mov	r0, lr
  404466:	f10a 0a08 	add.w	sl, sl, #8
  40446a:	f10e 0e01 	add.w	lr, lr, #1
  40446e:	e738      	b.n	4042e2 <_vfiprintf_r+0x88a>
  404470:	9b01      	ldr	r3, [sp, #4]
  404472:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  404476:	2b00      	cmp	r3, #0
  404478:	f2c0 812a 	blt.w	4046d0 <_vfiprintf_r+0xc78>
  40447c:	ea54 0305 	orrs.w	r3, r4, r5
  404480:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  404484:	f43f abff 	beq.w	403c86 <_vfiprintf_r+0x22e>
  404488:	465f      	mov	r7, fp
  40448a:	0923      	lsrs	r3, r4, #4
  40448c:	f004 010f 	and.w	r1, r4, #15
  404490:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  404494:	092a      	lsrs	r2, r5, #4
  404496:	461c      	mov	r4, r3
  404498:	4615      	mov	r5, r2
  40449a:	5c43      	ldrb	r3, [r0, r1]
  40449c:	f807 3d01 	strb.w	r3, [r7, #-1]!
  4044a0:	ea54 0305 	orrs.w	r3, r4, r5
  4044a4:	d1f1      	bne.n	40448a <_vfiprintf_r+0xa32>
  4044a6:	ebc7 030b 	rsb	r3, r7, fp
  4044aa:	9303      	str	r3, [sp, #12]
  4044ac:	f7ff bbf4 	b.w	403c98 <_vfiprintf_r+0x240>
  4044b0:	aa0d      	add	r2, sp, #52	; 0x34
  4044b2:	9900      	ldr	r1, [sp, #0]
  4044b4:	9805      	ldr	r0, [sp, #20]
  4044b6:	f7ff fa93 	bl	4039e0 <__sprint_r.part.0>
  4044ba:	2800      	cmp	r0, #0
  4044bc:	f47f af6a 	bne.w	404394 <_vfiprintf_r+0x93c>
  4044c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4044c2:	46da      	mov	sl, fp
  4044c4:	e787      	b.n	4043d6 <_vfiprintf_r+0x97e>
  4044c6:	f04f 0900 	mov.w	r9, #0
  4044ca:	2400      	movs	r4, #0
  4044cc:	2500      	movs	r5, #0
  4044ce:	e7db      	b.n	404488 <_vfiprintf_r+0xa30>
  4044d0:	f016 0210 	ands.w	r2, r6, #16
  4044d4:	f000 80b2 	beq.w	40463c <_vfiprintf_r+0xbe4>
  4044d8:	9904      	ldr	r1, [sp, #16]
  4044da:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4044de:	460a      	mov	r2, r1
  4044e0:	680c      	ldr	r4, [r1, #0]
  4044e2:	9901      	ldr	r1, [sp, #4]
  4044e4:	2900      	cmp	r1, #0
  4044e6:	f102 0204 	add.w	r2, r2, #4
  4044ea:	f04f 0500 	mov.w	r5, #0
  4044ee:	f2c0 8159 	blt.w	4047a4 <_vfiprintf_r+0xd4c>
  4044f2:	ea54 0105 	orrs.w	r1, r4, r5
  4044f6:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4044fa:	9204      	str	r2, [sp, #16]
  4044fc:	f43f ad51 	beq.w	403fa2 <_vfiprintf_r+0x54a>
  404500:	4699      	mov	r9, r3
  404502:	e556      	b.n	403fb2 <_vfiprintf_r+0x55a>
  404504:	06f7      	lsls	r7, r6, #27
  404506:	d40a      	bmi.n	40451e <_vfiprintf_r+0xac6>
  404508:	0675      	lsls	r5, r6, #25
  40450a:	d508      	bpl.n	40451e <_vfiprintf_r+0xac6>
  40450c:	9904      	ldr	r1, [sp, #16]
  40450e:	f9b1 4000 	ldrsh.w	r4, [r1]
  404512:	3104      	adds	r1, #4
  404514:	17e5      	asrs	r5, r4, #31
  404516:	4622      	mov	r2, r4
  404518:	462b      	mov	r3, r5
  40451a:	9104      	str	r1, [sp, #16]
  40451c:	e4ea      	b.n	403ef4 <_vfiprintf_r+0x49c>
  40451e:	9a04      	ldr	r2, [sp, #16]
  404520:	6814      	ldr	r4, [r2, #0]
  404522:	4613      	mov	r3, r2
  404524:	3304      	adds	r3, #4
  404526:	17e5      	asrs	r5, r4, #31
  404528:	9304      	str	r3, [sp, #16]
  40452a:	4622      	mov	r2, r4
  40452c:	462b      	mov	r3, r5
  40452e:	e4e1      	b.n	403ef4 <_vfiprintf_r+0x49c>
  404530:	6814      	ldr	r4, [r2, #0]
  404532:	3204      	adds	r2, #4
  404534:	9204      	str	r2, [sp, #16]
  404536:	2500      	movs	r5, #0
  404538:	e61f      	b.n	40417a <_vfiprintf_r+0x722>
  40453a:	f04f 0900 	mov.w	r9, #0
  40453e:	ea54 0305 	orrs.w	r3, r4, r5
  404542:	f47f ace8 	bne.w	403f16 <_vfiprintf_r+0x4be>
  404546:	e5d8      	b.n	4040fa <_vfiprintf_r+0x6a2>
  404548:	aa0d      	add	r2, sp, #52	; 0x34
  40454a:	9900      	ldr	r1, [sp, #0]
  40454c:	9805      	ldr	r0, [sp, #20]
  40454e:	f7ff fa47 	bl	4039e0 <__sprint_r.part.0>
  404552:	2800      	cmp	r0, #0
  404554:	f47f af1e 	bne.w	404394 <_vfiprintf_r+0x93c>
  404558:	46da      	mov	sl, fp
  40455a:	f7ff bb48 	b.w	403bee <_vfiprintf_r+0x196>
  40455e:	aa0d      	add	r2, sp, #52	; 0x34
  404560:	9900      	ldr	r1, [sp, #0]
  404562:	9805      	ldr	r0, [sp, #20]
  404564:	f7ff fa3c 	bl	4039e0 <__sprint_r.part.0>
  404568:	2800      	cmp	r0, #0
  40456a:	f43f af45 	beq.w	4043f8 <_vfiprintf_r+0x9a0>
  40456e:	e711      	b.n	404394 <_vfiprintf_r+0x93c>
  404570:	aa0d      	add	r2, sp, #52	; 0x34
  404572:	9900      	ldr	r1, [sp, #0]
  404574:	9805      	ldr	r0, [sp, #20]
  404576:	f7ff fa33 	bl	4039e0 <__sprint_r.part.0>
  40457a:	2800      	cmp	r0, #0
  40457c:	f47f af0a 	bne.w	404394 <_vfiprintf_r+0x93c>
  404580:	980e      	ldr	r0, [sp, #56]	; 0x38
  404582:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404584:	f100 0e01 	add.w	lr, r0, #1
  404588:	46da      	mov	sl, fp
  40458a:	f7ff bbe3 	b.w	403d54 <_vfiprintf_r+0x2fc>
  40458e:	aa0d      	add	r2, sp, #52	; 0x34
  404590:	9900      	ldr	r1, [sp, #0]
  404592:	9805      	ldr	r0, [sp, #20]
  404594:	f7ff fa24 	bl	4039e0 <__sprint_r.part.0>
  404598:	2800      	cmp	r0, #0
  40459a:	f47f aefb 	bne.w	404394 <_vfiprintf_r+0x93c>
  40459e:	980e      	ldr	r0, [sp, #56]	; 0x38
  4045a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4045a2:	f100 0e01 	add.w	lr, r0, #1
  4045a6:	46da      	mov	sl, fp
  4045a8:	e69b      	b.n	4042e2 <_vfiprintf_r+0x88a>
  4045aa:	2a00      	cmp	r2, #0
  4045ac:	f040 80d8 	bne.w	404760 <_vfiprintf_r+0xd08>
  4045b0:	f04f 0e01 	mov.w	lr, #1
  4045b4:	4610      	mov	r0, r2
  4045b6:	46da      	mov	sl, fp
  4045b8:	e697      	b.n	4042ea <_vfiprintf_r+0x892>
  4045ba:	aa0d      	add	r2, sp, #52	; 0x34
  4045bc:	9900      	ldr	r1, [sp, #0]
  4045be:	9805      	ldr	r0, [sp, #20]
  4045c0:	f7ff fa0e 	bl	4039e0 <__sprint_r.part.0>
  4045c4:	2800      	cmp	r0, #0
  4045c6:	f47f aee5 	bne.w	404394 <_vfiprintf_r+0x93c>
  4045ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4045cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4045ce:	f103 0e01 	add.w	lr, r3, #1
  4045d2:	46da      	mov	sl, fp
  4045d4:	e422      	b.n	403e1c <_vfiprintf_r+0x3c4>
  4045d6:	2230      	movs	r2, #48	; 0x30
  4045d8:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  4045dc:	9a01      	ldr	r2, [sp, #4]
  4045de:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  4045e2:	2a00      	cmp	r2, #0
  4045e4:	f04f 0300 	mov.w	r3, #0
  4045e8:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4045ec:	f046 0302 	orr.w	r3, r6, #2
  4045f0:	f2c0 80cb 	blt.w	40478a <_vfiprintf_r+0xd32>
  4045f4:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4045f8:	f046 0602 	orr.w	r6, r6, #2
  4045fc:	f04f 0900 	mov.w	r9, #0
  404600:	e742      	b.n	404488 <_vfiprintf_r+0xa30>
  404602:	f04f 0900 	mov.w	r9, #0
  404606:	4890      	ldr	r0, [pc, #576]	; (404848 <_vfiprintf_r+0xdf0>)
  404608:	e73e      	b.n	404488 <_vfiprintf_r+0xa30>
  40460a:	9b01      	ldr	r3, [sp, #4]
  40460c:	4264      	negs	r4, r4
  40460e:	f04f 092d 	mov.w	r9, #45	; 0x2d
  404612:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  404616:	2b00      	cmp	r3, #0
  404618:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  40461c:	f6ff ac7b 	blt.w	403f16 <_vfiprintf_r+0x4be>
  404620:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  404624:	e477      	b.n	403f16 <_vfiprintf_r+0x4be>
  404626:	9b07      	ldr	r3, [sp, #28]
  404628:	2b00      	cmp	r3, #0
  40462a:	d072      	beq.n	404712 <_vfiprintf_r+0xcba>
  40462c:	ab0c      	add	r3, sp, #48	; 0x30
  40462e:	2202      	movs	r2, #2
  404630:	931a      	str	r3, [sp, #104]	; 0x68
  404632:	921b      	str	r2, [sp, #108]	; 0x6c
  404634:	f04f 0e01 	mov.w	lr, #1
  404638:	46da      	mov	sl, fp
  40463a:	e713      	b.n	404464 <_vfiprintf_r+0xa0c>
  40463c:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  404640:	d048      	beq.n	4046d4 <_vfiprintf_r+0xc7c>
  404642:	9904      	ldr	r1, [sp, #16]
  404644:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  404648:	460b      	mov	r3, r1
  40464a:	880c      	ldrh	r4, [r1, #0]
  40464c:	9901      	ldr	r1, [sp, #4]
  40464e:	2900      	cmp	r1, #0
  404650:	f103 0304 	add.w	r3, r3, #4
  404654:	f04f 0500 	mov.w	r5, #0
  404658:	f6ff ae10 	blt.w	40427c <_vfiprintf_r+0x824>
  40465c:	ea54 0105 	orrs.w	r1, r4, r5
  404660:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  404664:	9304      	str	r3, [sp, #16]
  404666:	f43f ac9c 	beq.w	403fa2 <_vfiprintf_r+0x54a>
  40466a:	4691      	mov	r9, r2
  40466c:	e4a1      	b.n	403fb2 <_vfiprintf_r+0x55a>
  40466e:	06f0      	lsls	r0, r6, #27
  404670:	d40a      	bmi.n	404688 <_vfiprintf_r+0xc30>
  404672:	0671      	lsls	r1, r6, #25
  404674:	d508      	bpl.n	404688 <_vfiprintf_r+0xc30>
  404676:	9a04      	ldr	r2, [sp, #16]
  404678:	6813      	ldr	r3, [r2, #0]
  40467a:	3204      	adds	r2, #4
  40467c:	9204      	str	r2, [sp, #16]
  40467e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  404682:	801a      	strh	r2, [r3, #0]
  404684:	f7ff ba19 	b.w	403aba <_vfiprintf_r+0x62>
  404688:	9a04      	ldr	r2, [sp, #16]
  40468a:	6813      	ldr	r3, [r2, #0]
  40468c:	3204      	adds	r2, #4
  40468e:	9204      	str	r2, [sp, #16]
  404690:	9a02      	ldr	r2, [sp, #8]
  404692:	601a      	str	r2, [r3, #0]
  404694:	f7ff ba11 	b.w	403aba <_vfiprintf_r+0x62>
  404698:	aa0d      	add	r2, sp, #52	; 0x34
  40469a:	9900      	ldr	r1, [sp, #0]
  40469c:	9805      	ldr	r0, [sp, #20]
  40469e:	f7ff f99f 	bl	4039e0 <__sprint_r.part.0>
  4046a2:	2800      	cmp	r0, #0
  4046a4:	f47f ae76 	bne.w	404394 <_vfiprintf_r+0x93c>
  4046a8:	980e      	ldr	r0, [sp, #56]	; 0x38
  4046aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4046ac:	f100 0e01 	add.w	lr, r0, #1
  4046b0:	46da      	mov	sl, fp
  4046b2:	e5fa      	b.n	4042aa <_vfiprintf_r+0x852>
  4046b4:	f04f 30ff 	mov.w	r0, #4294967295
  4046b8:	f7ff bab6 	b.w	403c28 <_vfiprintf_r+0x1d0>
  4046bc:	4862      	ldr	r0, [pc, #392]	; (404848 <_vfiprintf_r+0xdf0>)
  4046be:	4616      	mov	r6, r2
  4046c0:	ea54 0205 	orrs.w	r2, r4, r5
  4046c4:	9304      	str	r3, [sp, #16]
  4046c6:	f04f 0900 	mov.w	r9, #0
  4046ca:	f47f aedd 	bne.w	404488 <_vfiprintf_r+0xa30>
  4046ce:	e6fc      	b.n	4044ca <_vfiprintf_r+0xa72>
  4046d0:	9b04      	ldr	r3, [sp, #16]
  4046d2:	e7f5      	b.n	4046c0 <_vfiprintf_r+0xc68>
  4046d4:	9a04      	ldr	r2, [sp, #16]
  4046d6:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  4046da:	4613      	mov	r3, r2
  4046dc:	6814      	ldr	r4, [r2, #0]
  4046de:	9a01      	ldr	r2, [sp, #4]
  4046e0:	2a00      	cmp	r2, #0
  4046e2:	f103 0304 	add.w	r3, r3, #4
  4046e6:	f04f 0500 	mov.w	r5, #0
  4046ea:	f6ff adc7 	blt.w	40427c <_vfiprintf_r+0x824>
  4046ee:	ea54 0205 	orrs.w	r2, r4, r5
  4046f2:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4046f6:	9304      	str	r3, [sp, #16]
  4046f8:	f47f ac5b 	bne.w	403fb2 <_vfiprintf_r+0x55a>
  4046fc:	e451      	b.n	403fa2 <_vfiprintf_r+0x54a>
  4046fe:	aa0d      	add	r2, sp, #52	; 0x34
  404700:	9900      	ldr	r1, [sp, #0]
  404702:	9805      	ldr	r0, [sp, #20]
  404704:	f7ff f96c 	bl	4039e0 <__sprint_r.part.0>
  404708:	2800      	cmp	r0, #0
  40470a:	f47f ae43 	bne.w	404394 <_vfiprintf_r+0x93c>
  40470e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404710:	e668      	b.n	4043e4 <_vfiprintf_r+0x98c>
  404712:	4610      	mov	r0, r2
  404714:	f04f 0e01 	mov.w	lr, #1
  404718:	46da      	mov	sl, fp
  40471a:	e5e6      	b.n	4042ea <_vfiprintf_r+0x892>
  40471c:	9904      	ldr	r1, [sp, #16]
  40471e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  404722:	460a      	mov	r2, r1
  404724:	880c      	ldrh	r4, [r1, #0]
  404726:	9901      	ldr	r1, [sp, #4]
  404728:	2900      	cmp	r1, #0
  40472a:	f102 0204 	add.w	r2, r2, #4
  40472e:	f04f 0500 	mov.w	r5, #0
  404732:	db4e      	blt.n	4047d2 <_vfiprintf_r+0xd7a>
  404734:	ea54 0105 	orrs.w	r1, r4, r5
  404738:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40473c:	9204      	str	r2, [sp, #16]
  40473e:	4699      	mov	r9, r3
  404740:	f47f abe9 	bne.w	403f16 <_vfiprintf_r+0x4be>
  404744:	e4d4      	b.n	4040f0 <_vfiprintf_r+0x698>
  404746:	9304      	str	r3, [sp, #16]
  404748:	e6f9      	b.n	40453e <_vfiprintf_r+0xae6>
  40474a:	4638      	mov	r0, r7
  40474c:	9404      	str	r4, [sp, #16]
  40474e:	f7fd fd57 	bl	402200 <strlen>
  404752:	2300      	movs	r3, #0
  404754:	9003      	str	r0, [sp, #12]
  404756:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  40475a:	9301      	str	r3, [sp, #4]
  40475c:	f7ff ba9c 	b.w	403c98 <_vfiprintf_r+0x240>
  404760:	aa0d      	add	r2, sp, #52	; 0x34
  404762:	9900      	ldr	r1, [sp, #0]
  404764:	9805      	ldr	r0, [sp, #20]
  404766:	f7ff f93b 	bl	4039e0 <__sprint_r.part.0>
  40476a:	2800      	cmp	r0, #0
  40476c:	f47f ae12 	bne.w	404394 <_vfiprintf_r+0x93c>
  404770:	980e      	ldr	r0, [sp, #56]	; 0x38
  404772:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404774:	f100 0e01 	add.w	lr, r0, #1
  404778:	46da      	mov	sl, fp
  40477a:	e5b6      	b.n	4042ea <_vfiprintf_r+0x892>
  40477c:	980e      	ldr	r0, [sp, #56]	; 0x38
  40477e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404780:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 404850 <_vfiprintf_r+0xdf8>
  404784:	3001      	adds	r0, #1
  404786:	f7ff bad2 	b.w	403d2e <_vfiprintf_r+0x2d6>
  40478a:	461e      	mov	r6, r3
  40478c:	f04f 0900 	mov.w	r9, #0
  404790:	e67a      	b.n	404488 <_vfiprintf_r+0xa30>
  404792:	2b06      	cmp	r3, #6
  404794:	bf28      	it	cs
  404796:	2306      	movcs	r3, #6
  404798:	9303      	str	r3, [sp, #12]
  40479a:	9404      	str	r4, [sp, #16]
  40479c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
  4047a0:	4f2a      	ldr	r7, [pc, #168]	; (40484c <_vfiprintf_r+0xdf4>)
  4047a2:	e50c      	b.n	4041be <_vfiprintf_r+0x766>
  4047a4:	9204      	str	r2, [sp, #16]
  4047a6:	e56a      	b.n	40427e <_vfiprintf_r+0x826>
  4047a8:	980e      	ldr	r0, [sp, #56]	; 0x38
  4047aa:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 404850 <_vfiprintf_r+0xdf8>
  4047ae:	3001      	adds	r0, #1
  4047b0:	f7ff bb73 	b.w	403e9a <_vfiprintf_r+0x442>
  4047b4:	46f4      	mov	ip, lr
  4047b6:	f7ff bb1a 	b.w	403dee <_vfiprintf_r+0x396>
  4047ba:	9b01      	ldr	r3, [sp, #4]
  4047bc:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  4047c0:	9303      	str	r3, [sp, #12]
  4047c2:	9404      	str	r4, [sp, #16]
  4047c4:	9001      	str	r0, [sp, #4]
  4047c6:	f7ff ba67 	b.w	403c98 <_vfiprintf_r+0x240>
  4047ca:	2200      	movs	r2, #0
  4047cc:	9201      	str	r2, [sp, #4]
  4047ce:	f7ff b9ac 	b.w	403b2a <_vfiprintf_r+0xd2>
  4047d2:	9204      	str	r2, [sp, #16]
  4047d4:	4699      	mov	r9, r3
  4047d6:	e6b2      	b.n	40453e <_vfiprintf_r+0xae6>
  4047d8:	9a04      	ldr	r2, [sp, #16]
  4047da:	6813      	ldr	r3, [r2, #0]
  4047dc:	9301      	str	r3, [sp, #4]
  4047de:	3204      	adds	r2, #4
  4047e0:	2b00      	cmp	r3, #0
  4047e2:	9204      	str	r2, [sp, #16]
  4047e4:	f898 3001 	ldrb.w	r3, [r8, #1]
  4047e8:	46a8      	mov	r8, r5
  4047ea:	f6bf a99c 	bge.w	403b26 <_vfiprintf_r+0xce>
  4047ee:	f04f 32ff 	mov.w	r2, #4294967295
  4047f2:	9201      	str	r2, [sp, #4]
  4047f4:	f7ff b997 	b.w	403b26 <_vfiprintf_r+0xce>
  4047f8:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  4047fc:	e48e      	b.n	40411c <_vfiprintf_r+0x6c4>
  4047fe:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404802:	e4f0      	b.n	4041e6 <_vfiprintf_r+0x78e>
  404804:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404808:	e4ab      	b.n	404162 <_vfiprintf_r+0x70a>
  40480a:	4699      	mov	r9, r3
  40480c:	07f3      	lsls	r3, r6, #31
  40480e:	d505      	bpl.n	40481c <_vfiprintf_r+0xdc4>
  404810:	af2a      	add	r7, sp, #168	; 0xa8
  404812:	2330      	movs	r3, #48	; 0x30
  404814:	f807 3d41 	strb.w	r3, [r7, #-65]!
  404818:	f7ff bb97 	b.w	403f4a <_vfiprintf_r+0x4f2>
  40481c:	9b01      	ldr	r3, [sp, #4]
  40481e:	9303      	str	r3, [sp, #12]
  404820:	465f      	mov	r7, fp
  404822:	f7ff ba39 	b.w	403c98 <_vfiprintf_r+0x240>
  404826:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  40482a:	e443      	b.n	4040b4 <_vfiprintf_r+0x65c>
  40482c:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404830:	f7ff bb9a 	b.w	403f68 <_vfiprintf_r+0x510>
  404834:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404838:	f7ff bb4d 	b.w	403ed6 <_vfiprintf_r+0x47e>
  40483c:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404840:	e50f      	b.n	404262 <_vfiprintf_r+0x80a>
  404842:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  404846:	e4f3      	b.n	404230 <_vfiprintf_r+0x7d8>
  404848:	00408154 	.word	0x00408154
  40484c:	00408168 	.word	0x00408168
  404850:	00408194 	.word	0x00408194

00404854 <__sbprintf>:
  404854:	b5f0      	push	{r4, r5, r6, r7, lr}
  404856:	460c      	mov	r4, r1
  404858:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  40485c:	8989      	ldrh	r1, [r1, #12]
  40485e:	6e66      	ldr	r6, [r4, #100]	; 0x64
  404860:	89e5      	ldrh	r5, [r4, #14]
  404862:	9619      	str	r6, [sp, #100]	; 0x64
  404864:	f021 0102 	bic.w	r1, r1, #2
  404868:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40486a:	f8ad 500e 	strh.w	r5, [sp, #14]
  40486e:	2500      	movs	r5, #0
  404870:	69e7      	ldr	r7, [r4, #28]
  404872:	f8ad 100c 	strh.w	r1, [sp, #12]
  404876:	9609      	str	r6, [sp, #36]	; 0x24
  404878:	9506      	str	r5, [sp, #24]
  40487a:	ae1a      	add	r6, sp, #104	; 0x68
  40487c:	f44f 6580 	mov.w	r5, #1024	; 0x400
  404880:	4669      	mov	r1, sp
  404882:	9600      	str	r6, [sp, #0]
  404884:	9604      	str	r6, [sp, #16]
  404886:	9502      	str	r5, [sp, #8]
  404888:	9505      	str	r5, [sp, #20]
  40488a:	9707      	str	r7, [sp, #28]
  40488c:	4606      	mov	r6, r0
  40488e:	f7ff f8e3 	bl	403a58 <_vfiprintf_r>
  404892:	1e05      	subs	r5, r0, #0
  404894:	db07      	blt.n	4048a6 <__sbprintf+0x52>
  404896:	4630      	mov	r0, r6
  404898:	4669      	mov	r1, sp
  40489a:	f001 f8e9 	bl	405a70 <_fflush_r>
  40489e:	2800      	cmp	r0, #0
  4048a0:	bf18      	it	ne
  4048a2:	f04f 35ff 	movne.w	r5, #4294967295
  4048a6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4048aa:	065b      	lsls	r3, r3, #25
  4048ac:	d503      	bpl.n	4048b6 <__sbprintf+0x62>
  4048ae:	89a3      	ldrh	r3, [r4, #12]
  4048b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4048b4:	81a3      	strh	r3, [r4, #12]
  4048b6:	4628      	mov	r0, r5
  4048b8:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  4048bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4048be:	bf00      	nop

004048c0 <__swsetup_r>:
  4048c0:	b538      	push	{r3, r4, r5, lr}
  4048c2:	4b30      	ldr	r3, [pc, #192]	; (404984 <__swsetup_r+0xc4>)
  4048c4:	681b      	ldr	r3, [r3, #0]
  4048c6:	4605      	mov	r5, r0
  4048c8:	460c      	mov	r4, r1
  4048ca:	b113      	cbz	r3, 4048d2 <__swsetup_r+0x12>
  4048cc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4048ce:	2a00      	cmp	r2, #0
  4048d0:	d038      	beq.n	404944 <__swsetup_r+0x84>
  4048d2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4048d6:	b293      	uxth	r3, r2
  4048d8:	0718      	lsls	r0, r3, #28
  4048da:	d50c      	bpl.n	4048f6 <__swsetup_r+0x36>
  4048dc:	6920      	ldr	r0, [r4, #16]
  4048de:	b1a8      	cbz	r0, 40490c <__swsetup_r+0x4c>
  4048e0:	f013 0201 	ands.w	r2, r3, #1
  4048e4:	d01e      	beq.n	404924 <__swsetup_r+0x64>
  4048e6:	6963      	ldr	r3, [r4, #20]
  4048e8:	2200      	movs	r2, #0
  4048ea:	425b      	negs	r3, r3
  4048ec:	61a3      	str	r3, [r4, #24]
  4048ee:	60a2      	str	r2, [r4, #8]
  4048f0:	b1f0      	cbz	r0, 404930 <__swsetup_r+0x70>
  4048f2:	2000      	movs	r0, #0
  4048f4:	bd38      	pop	{r3, r4, r5, pc}
  4048f6:	06d9      	lsls	r1, r3, #27
  4048f8:	d53c      	bpl.n	404974 <__swsetup_r+0xb4>
  4048fa:	0758      	lsls	r0, r3, #29
  4048fc:	d426      	bmi.n	40494c <__swsetup_r+0x8c>
  4048fe:	6920      	ldr	r0, [r4, #16]
  404900:	f042 0308 	orr.w	r3, r2, #8
  404904:	81a3      	strh	r3, [r4, #12]
  404906:	b29b      	uxth	r3, r3
  404908:	2800      	cmp	r0, #0
  40490a:	d1e9      	bne.n	4048e0 <__swsetup_r+0x20>
  40490c:	f403 7220 	and.w	r2, r3, #640	; 0x280
  404910:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  404914:	d0e4      	beq.n	4048e0 <__swsetup_r+0x20>
  404916:	4628      	mov	r0, r5
  404918:	4621      	mov	r1, r4
  40491a:	f001 fcd9 	bl	4062d0 <__smakebuf_r>
  40491e:	89a3      	ldrh	r3, [r4, #12]
  404920:	6920      	ldr	r0, [r4, #16]
  404922:	e7dd      	b.n	4048e0 <__swsetup_r+0x20>
  404924:	0799      	lsls	r1, r3, #30
  404926:	bf58      	it	pl
  404928:	6962      	ldrpl	r2, [r4, #20]
  40492a:	60a2      	str	r2, [r4, #8]
  40492c:	2800      	cmp	r0, #0
  40492e:	d1e0      	bne.n	4048f2 <__swsetup_r+0x32>
  404930:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404934:	061a      	lsls	r2, r3, #24
  404936:	d5dd      	bpl.n	4048f4 <__swsetup_r+0x34>
  404938:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40493c:	81a3      	strh	r3, [r4, #12]
  40493e:	f04f 30ff 	mov.w	r0, #4294967295
  404942:	bd38      	pop	{r3, r4, r5, pc}
  404944:	4618      	mov	r0, r3
  404946:	f001 f927 	bl	405b98 <__sinit>
  40494a:	e7c2      	b.n	4048d2 <__swsetup_r+0x12>
  40494c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40494e:	b151      	cbz	r1, 404966 <__swsetup_r+0xa6>
  404950:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404954:	4299      	cmp	r1, r3
  404956:	d004      	beq.n	404962 <__swsetup_r+0xa2>
  404958:	4628      	mov	r0, r5
  40495a:	f001 f9e7 	bl	405d2c <_free_r>
  40495e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404962:	2300      	movs	r3, #0
  404964:	6323      	str	r3, [r4, #48]	; 0x30
  404966:	2300      	movs	r3, #0
  404968:	6920      	ldr	r0, [r4, #16]
  40496a:	6063      	str	r3, [r4, #4]
  40496c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  404970:	6020      	str	r0, [r4, #0]
  404972:	e7c5      	b.n	404900 <__swsetup_r+0x40>
  404974:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404978:	2309      	movs	r3, #9
  40497a:	602b      	str	r3, [r5, #0]
  40497c:	f04f 30ff 	mov.w	r0, #4294967295
  404980:	81a2      	strh	r2, [r4, #12]
  404982:	bd38      	pop	{r3, r4, r5, pc}
  404984:	20000438 	.word	0x20000438

00404988 <register_fini>:
  404988:	4b02      	ldr	r3, [pc, #8]	; (404994 <register_fini+0xc>)
  40498a:	b113      	cbz	r3, 404992 <register_fini+0xa>
  40498c:	4802      	ldr	r0, [pc, #8]	; (404998 <register_fini+0x10>)
  40498e:	f000 b805 	b.w	40499c <atexit>
  404992:	4770      	bx	lr
  404994:	00000000 	.word	0x00000000
  404998:	00405bad 	.word	0x00405bad

0040499c <atexit>:
  40499c:	2300      	movs	r3, #0
  40499e:	4601      	mov	r1, r0
  4049a0:	461a      	mov	r2, r3
  4049a2:	4618      	mov	r0, r3
  4049a4:	f002 bbf6 	b.w	407194 <__register_exitproc>

004049a8 <quorem>:
  4049a8:	6902      	ldr	r2, [r0, #16]
  4049aa:	690b      	ldr	r3, [r1, #16]
  4049ac:	4293      	cmp	r3, r2
  4049ae:	f300 808d 	bgt.w	404acc <quorem+0x124>
  4049b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4049b6:	f103 38ff 	add.w	r8, r3, #4294967295
  4049ba:	f101 0714 	add.w	r7, r1, #20
  4049be:	f100 0b14 	add.w	fp, r0, #20
  4049c2:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4049c6:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4049ca:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4049ce:	b083      	sub	sp, #12
  4049d0:	3201      	adds	r2, #1
  4049d2:	fbb3 f9f2 	udiv	r9, r3, r2
  4049d6:	eb0b 0304 	add.w	r3, fp, r4
  4049da:	9400      	str	r4, [sp, #0]
  4049dc:	eb07 0a04 	add.w	sl, r7, r4
  4049e0:	9301      	str	r3, [sp, #4]
  4049e2:	f1b9 0f00 	cmp.w	r9, #0
  4049e6:	d039      	beq.n	404a5c <quorem+0xb4>
  4049e8:	2500      	movs	r5, #0
  4049ea:	46bc      	mov	ip, r7
  4049ec:	46de      	mov	lr, fp
  4049ee:	462b      	mov	r3, r5
  4049f0:	f85c 6b04 	ldr.w	r6, [ip], #4
  4049f4:	f8de 2000 	ldr.w	r2, [lr]
  4049f8:	b2b4      	uxth	r4, r6
  4049fa:	fb09 5504 	mla	r5, r9, r4, r5
  4049fe:	0c36      	lsrs	r6, r6, #16
  404a00:	0c2c      	lsrs	r4, r5, #16
  404a02:	fb09 4406 	mla	r4, r9, r6, r4
  404a06:	b2ad      	uxth	r5, r5
  404a08:	1b5b      	subs	r3, r3, r5
  404a0a:	b2a6      	uxth	r6, r4
  404a0c:	fa13 f382 	uxtah	r3, r3, r2
  404a10:	ebc6 4612 	rsb	r6, r6, r2, lsr #16
  404a14:	eb06 4623 	add.w	r6, r6, r3, asr #16
  404a18:	b29b      	uxth	r3, r3
  404a1a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  404a1e:	45e2      	cmp	sl, ip
  404a20:	f84e 3b04 	str.w	r3, [lr], #4
  404a24:	ea4f 4514 	mov.w	r5, r4, lsr #16
  404a28:	ea4f 4326 	mov.w	r3, r6, asr #16
  404a2c:	d2e0      	bcs.n	4049f0 <quorem+0x48>
  404a2e:	9b00      	ldr	r3, [sp, #0]
  404a30:	f85b 3003 	ldr.w	r3, [fp, r3]
  404a34:	b993      	cbnz	r3, 404a5c <quorem+0xb4>
  404a36:	9c01      	ldr	r4, [sp, #4]
  404a38:	1f23      	subs	r3, r4, #4
  404a3a:	459b      	cmp	fp, r3
  404a3c:	d20c      	bcs.n	404a58 <quorem+0xb0>
  404a3e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  404a42:	b94b      	cbnz	r3, 404a58 <quorem+0xb0>
  404a44:	f1a4 0308 	sub.w	r3, r4, #8
  404a48:	e002      	b.n	404a50 <quorem+0xa8>
  404a4a:	681a      	ldr	r2, [r3, #0]
  404a4c:	3b04      	subs	r3, #4
  404a4e:	b91a      	cbnz	r2, 404a58 <quorem+0xb0>
  404a50:	459b      	cmp	fp, r3
  404a52:	f108 38ff 	add.w	r8, r8, #4294967295
  404a56:	d3f8      	bcc.n	404a4a <quorem+0xa2>
  404a58:	f8c0 8010 	str.w	r8, [r0, #16]
  404a5c:	4604      	mov	r4, r0
  404a5e:	f001 ff3b 	bl	4068d8 <__mcmp>
  404a62:	2800      	cmp	r0, #0
  404a64:	db2e      	blt.n	404ac4 <quorem+0x11c>
  404a66:	f109 0901 	add.w	r9, r9, #1
  404a6a:	465d      	mov	r5, fp
  404a6c:	2300      	movs	r3, #0
  404a6e:	f857 1b04 	ldr.w	r1, [r7], #4
  404a72:	6828      	ldr	r0, [r5, #0]
  404a74:	b28a      	uxth	r2, r1
  404a76:	1a9a      	subs	r2, r3, r2
  404a78:	0c09      	lsrs	r1, r1, #16
  404a7a:	fa12 f280 	uxtah	r2, r2, r0
  404a7e:	ebc1 4310 	rsb	r3, r1, r0, lsr #16
  404a82:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404a86:	b291      	uxth	r1, r2
  404a88:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
  404a8c:	45ba      	cmp	sl, r7
  404a8e:	f845 1b04 	str.w	r1, [r5], #4
  404a92:	ea4f 4323 	mov.w	r3, r3, asr #16
  404a96:	d2ea      	bcs.n	404a6e <quorem+0xc6>
  404a98:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  404a9c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  404aa0:	b982      	cbnz	r2, 404ac4 <quorem+0x11c>
  404aa2:	1f1a      	subs	r2, r3, #4
  404aa4:	4593      	cmp	fp, r2
  404aa6:	d20b      	bcs.n	404ac0 <quorem+0x118>
  404aa8:	f853 2c04 	ldr.w	r2, [r3, #-4]
  404aac:	b942      	cbnz	r2, 404ac0 <quorem+0x118>
  404aae:	3b08      	subs	r3, #8
  404ab0:	e002      	b.n	404ab8 <quorem+0x110>
  404ab2:	681a      	ldr	r2, [r3, #0]
  404ab4:	3b04      	subs	r3, #4
  404ab6:	b91a      	cbnz	r2, 404ac0 <quorem+0x118>
  404ab8:	459b      	cmp	fp, r3
  404aba:	f108 38ff 	add.w	r8, r8, #4294967295
  404abe:	d3f8      	bcc.n	404ab2 <quorem+0x10a>
  404ac0:	f8c4 8010 	str.w	r8, [r4, #16]
  404ac4:	4648      	mov	r0, r9
  404ac6:	b003      	add	sp, #12
  404ac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404acc:	2000      	movs	r0, #0
  404ace:	4770      	bx	lr

00404ad0 <_dtoa_r>:
  404ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404ad4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  404ad6:	b097      	sub	sp, #92	; 0x5c
  404ad8:	4681      	mov	r9, r0
  404ada:	9c23      	ldr	r4, [sp, #140]	; 0x8c
  404adc:	4692      	mov	sl, r2
  404ade:	469b      	mov	fp, r3
  404ae0:	b149      	cbz	r1, 404af6 <_dtoa_r+0x26>
  404ae2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  404ae4:	604a      	str	r2, [r1, #4]
  404ae6:	2301      	movs	r3, #1
  404ae8:	4093      	lsls	r3, r2
  404aea:	608b      	str	r3, [r1, #8]
  404aec:	f001 fd12 	bl	406514 <_Bfree>
  404af0:	2300      	movs	r3, #0
  404af2:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
  404af6:	f1bb 0f00 	cmp.w	fp, #0
  404afa:	46d8      	mov	r8, fp
  404afc:	db33      	blt.n	404b66 <_dtoa_r+0x96>
  404afe:	2300      	movs	r3, #0
  404b00:	6023      	str	r3, [r4, #0]
  404b02:	4ba5      	ldr	r3, [pc, #660]	; (404d98 <_dtoa_r+0x2c8>)
  404b04:	461a      	mov	r2, r3
  404b06:	ea08 0303 	and.w	r3, r8, r3
  404b0a:	4293      	cmp	r3, r2
  404b0c:	d014      	beq.n	404b38 <_dtoa_r+0x68>
  404b0e:	4650      	mov	r0, sl
  404b10:	4659      	mov	r1, fp
  404b12:	2200      	movs	r2, #0
  404b14:	2300      	movs	r3, #0
  404b16:	f003 f885 	bl	407c24 <__aeabi_dcmpeq>
  404b1a:	4605      	mov	r5, r0
  404b1c:	b348      	cbz	r0, 404b72 <_dtoa_r+0xa2>
  404b1e:	9a22      	ldr	r2, [sp, #136]	; 0x88
  404b20:	2301      	movs	r3, #1
  404b22:	6013      	str	r3, [r2, #0]
  404b24:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404b26:	2b00      	cmp	r3, #0
  404b28:	f000 80c5 	beq.w	404cb6 <_dtoa_r+0x1e6>
  404b2c:	489b      	ldr	r0, [pc, #620]	; (404d9c <_dtoa_r+0x2cc>)
  404b2e:	6018      	str	r0, [r3, #0]
  404b30:	3801      	subs	r0, #1
  404b32:	b017      	add	sp, #92	; 0x5c
  404b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b38:	9a22      	ldr	r2, [sp, #136]	; 0x88
  404b3a:	f242 730f 	movw	r3, #9999	; 0x270f
  404b3e:	6013      	str	r3, [r2, #0]
  404b40:	f1ba 0f00 	cmp.w	sl, #0
  404b44:	f000 80a2 	beq.w	404c8c <_dtoa_r+0x1bc>
  404b48:	4895      	ldr	r0, [pc, #596]	; (404da0 <_dtoa_r+0x2d0>)
  404b4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404b4c:	2b00      	cmp	r3, #0
  404b4e:	d0f0      	beq.n	404b32 <_dtoa_r+0x62>
  404b50:	78c3      	ldrb	r3, [r0, #3]
  404b52:	2b00      	cmp	r3, #0
  404b54:	f000 80b1 	beq.w	404cba <_dtoa_r+0x1ea>
  404b58:	f100 0308 	add.w	r3, r0, #8
  404b5c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404b5e:	6013      	str	r3, [r2, #0]
  404b60:	b017      	add	sp, #92	; 0x5c
  404b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b66:	2301      	movs	r3, #1
  404b68:	f02b 4800 	bic.w	r8, fp, #2147483648	; 0x80000000
  404b6c:	6023      	str	r3, [r4, #0]
  404b6e:	46c3      	mov	fp, r8
  404b70:	e7c7      	b.n	404b02 <_dtoa_r+0x32>
  404b72:	aa14      	add	r2, sp, #80	; 0x50
  404b74:	ab15      	add	r3, sp, #84	; 0x54
  404b76:	9201      	str	r2, [sp, #4]
  404b78:	9300      	str	r3, [sp, #0]
  404b7a:	4652      	mov	r2, sl
  404b7c:	465b      	mov	r3, fp
  404b7e:	4648      	mov	r0, r9
  404b80:	f001 ff54 	bl	406a2c <__d2b>
  404b84:	ea5f 5418 	movs.w	r4, r8, lsr #20
  404b88:	9008      	str	r0, [sp, #32]
  404b8a:	f040 8088 	bne.w	404c9e <_dtoa_r+0x1ce>
  404b8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
  404b90:	9c15      	ldr	r4, [sp, #84]	; 0x54
  404b92:	442c      	add	r4, r5
  404b94:	f204 4332 	addw	r3, r4, #1074	; 0x432
  404b98:	2b20      	cmp	r3, #32
  404b9a:	f340 8291 	ble.w	4050c0 <_dtoa_r+0x5f0>
  404b9e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  404ba2:	f204 4012 	addw	r0, r4, #1042	; 0x412
  404ba6:	fa08 f803 	lsl.w	r8, r8, r3
  404baa:	fa2a f000 	lsr.w	r0, sl, r0
  404bae:	ea40 0008 	orr.w	r0, r0, r8
  404bb2:	f002 fd59 	bl	407668 <__aeabi_ui2d>
  404bb6:	2301      	movs	r3, #1
  404bb8:	3c01      	subs	r4, #1
  404bba:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  404bbe:	9310      	str	r3, [sp, #64]	; 0x40
  404bc0:	2200      	movs	r2, #0
  404bc2:	4b78      	ldr	r3, [pc, #480]	; (404da4 <_dtoa_r+0x2d4>)
  404bc4:	f002 fc12 	bl	4073ec <__aeabi_dsub>
  404bc8:	a36d      	add	r3, pc, #436	; (adr r3, 404d80 <_dtoa_r+0x2b0>)
  404bca:	e9d3 2300 	ldrd	r2, r3, [r3]
  404bce:	f002 fdc1 	bl	407754 <__aeabi_dmul>
  404bd2:	a36d      	add	r3, pc, #436	; (adr r3, 404d88 <_dtoa_r+0x2b8>)
  404bd4:	e9d3 2300 	ldrd	r2, r3, [r3]
  404bd8:	f002 fc0a 	bl	4073f0 <__adddf3>
  404bdc:	4606      	mov	r6, r0
  404bde:	4620      	mov	r0, r4
  404be0:	460f      	mov	r7, r1
  404be2:	f002 fd51 	bl	407688 <__aeabi_i2d>
  404be6:	a36a      	add	r3, pc, #424	; (adr r3, 404d90 <_dtoa_r+0x2c0>)
  404be8:	e9d3 2300 	ldrd	r2, r3, [r3]
  404bec:	f002 fdb2 	bl	407754 <__aeabi_dmul>
  404bf0:	4602      	mov	r2, r0
  404bf2:	460b      	mov	r3, r1
  404bf4:	4630      	mov	r0, r6
  404bf6:	4639      	mov	r1, r7
  404bf8:	f002 fbfa 	bl	4073f0 <__adddf3>
  404bfc:	4606      	mov	r6, r0
  404bfe:	460f      	mov	r7, r1
  404c00:	f003 f858 	bl	407cb4 <__aeabi_d2iz>
  404c04:	2200      	movs	r2, #0
  404c06:	9004      	str	r0, [sp, #16]
  404c08:	2300      	movs	r3, #0
  404c0a:	4630      	mov	r0, r6
  404c0c:	4639      	mov	r1, r7
  404c0e:	f003 f813 	bl	407c38 <__aeabi_dcmplt>
  404c12:	2800      	cmp	r0, #0
  404c14:	f040 8230 	bne.w	405078 <_dtoa_r+0x5a8>
  404c18:	9e04      	ldr	r6, [sp, #16]
  404c1a:	2e16      	cmp	r6, #22
  404c1c:	f200 8229 	bhi.w	405072 <_dtoa_r+0x5a2>
  404c20:	4b61      	ldr	r3, [pc, #388]	; (404da8 <_dtoa_r+0x2d8>)
  404c22:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  404c26:	e9d3 0100 	ldrd	r0, r1, [r3]
  404c2a:	4652      	mov	r2, sl
  404c2c:	465b      	mov	r3, fp
  404c2e:	f003 f821 	bl	407c74 <__aeabi_dcmpgt>
  404c32:	2800      	cmp	r0, #0
  404c34:	f000 8249 	beq.w	4050ca <_dtoa_r+0x5fa>
  404c38:	1e73      	subs	r3, r6, #1
  404c3a:	9304      	str	r3, [sp, #16]
  404c3c:	2300      	movs	r3, #0
  404c3e:	930c      	str	r3, [sp, #48]	; 0x30
  404c40:	1b2c      	subs	r4, r5, r4
  404c42:	1e63      	subs	r3, r4, #1
  404c44:	9302      	str	r3, [sp, #8]
  404c46:	f100 8232 	bmi.w	4050ae <_dtoa_r+0x5de>
  404c4a:	2300      	movs	r3, #0
  404c4c:	9305      	str	r3, [sp, #20]
  404c4e:	9b04      	ldr	r3, [sp, #16]
  404c50:	2b00      	cmp	r3, #0
  404c52:	f2c0 8223 	blt.w	40509c <_dtoa_r+0x5cc>
  404c56:	9a02      	ldr	r2, [sp, #8]
  404c58:	930b      	str	r3, [sp, #44]	; 0x2c
  404c5a:	4611      	mov	r1, r2
  404c5c:	4419      	add	r1, r3
  404c5e:	2300      	movs	r3, #0
  404c60:	9102      	str	r1, [sp, #8]
  404c62:	930a      	str	r3, [sp, #40]	; 0x28
  404c64:	9b20      	ldr	r3, [sp, #128]	; 0x80
  404c66:	2b09      	cmp	r3, #9
  404c68:	d829      	bhi.n	404cbe <_dtoa_r+0x1ee>
  404c6a:	2b05      	cmp	r3, #5
  404c6c:	f340 8658 	ble.w	405920 <_dtoa_r+0xe50>
  404c70:	3b04      	subs	r3, #4
  404c72:	9320      	str	r3, [sp, #128]	; 0x80
  404c74:	2500      	movs	r5, #0
  404c76:	9b20      	ldr	r3, [sp, #128]	; 0x80
  404c78:	3b02      	subs	r3, #2
  404c7a:	2b03      	cmp	r3, #3
  404c7c:	f200 8635 	bhi.w	4058ea <_dtoa_r+0xe1a>
  404c80:	e8df f013 	tbh	[pc, r3, lsl #1]
  404c84:	0228032c 	.word	0x0228032c
  404c88:	04590337 	.word	0x04590337
  404c8c:	4b44      	ldr	r3, [pc, #272]	; (404da0 <_dtoa_r+0x2d0>)
  404c8e:	4a47      	ldr	r2, [pc, #284]	; (404dac <_dtoa_r+0x2dc>)
  404c90:	f3c8 0013 	ubfx	r0, r8, #0, #20
  404c94:	2800      	cmp	r0, #0
  404c96:	bf14      	ite	ne
  404c98:	4618      	movne	r0, r3
  404c9a:	4610      	moveq	r0, r2
  404c9c:	e755      	b.n	404b4a <_dtoa_r+0x7a>
  404c9e:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404ca2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  404ca6:	9510      	str	r5, [sp, #64]	; 0x40
  404ca8:	4650      	mov	r0, sl
  404caa:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
  404cae:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  404cb2:	9d14      	ldr	r5, [sp, #80]	; 0x50
  404cb4:	e784      	b.n	404bc0 <_dtoa_r+0xf0>
  404cb6:	483e      	ldr	r0, [pc, #248]	; (404db0 <_dtoa_r+0x2e0>)
  404cb8:	e73b      	b.n	404b32 <_dtoa_r+0x62>
  404cba:	1cc3      	adds	r3, r0, #3
  404cbc:	e74e      	b.n	404b5c <_dtoa_r+0x8c>
  404cbe:	2100      	movs	r1, #0
  404cc0:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  404cc4:	4648      	mov	r0, r9
  404cc6:	9120      	str	r1, [sp, #128]	; 0x80
  404cc8:	f001 fbfe 	bl	4064c8 <_Balloc>
  404ccc:	f04f 33ff 	mov.w	r3, #4294967295
  404cd0:	9306      	str	r3, [sp, #24]
  404cd2:	9a20      	ldr	r2, [sp, #128]	; 0x80
  404cd4:	930d      	str	r3, [sp, #52]	; 0x34
  404cd6:	2301      	movs	r3, #1
  404cd8:	9007      	str	r0, [sp, #28]
  404cda:	9221      	str	r2, [sp, #132]	; 0x84
  404cdc:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  404ce0:	9309      	str	r3, [sp, #36]	; 0x24
  404ce2:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404ce4:	2b00      	cmp	r3, #0
  404ce6:	f2c0 80d1 	blt.w	404e8c <_dtoa_r+0x3bc>
  404cea:	9a04      	ldr	r2, [sp, #16]
  404cec:	2a0e      	cmp	r2, #14
  404cee:	f300 80cd 	bgt.w	404e8c <_dtoa_r+0x3bc>
  404cf2:	4b2d      	ldr	r3, [pc, #180]	; (404da8 <_dtoa_r+0x2d8>)
  404cf4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404cf8:	e9d3 3400 	ldrd	r3, r4, [r3]
  404cfc:	e9cd 3402 	strd	r3, r4, [sp, #8]
  404d00:	9b21      	ldr	r3, [sp, #132]	; 0x84
  404d02:	2b00      	cmp	r3, #0
  404d04:	f2c0 8300 	blt.w	405308 <_dtoa_r+0x838>
  404d08:	4656      	mov	r6, sl
  404d0a:	465f      	mov	r7, fp
  404d0c:	4650      	mov	r0, sl
  404d0e:	4659      	mov	r1, fp
  404d10:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  404d14:	4652      	mov	r2, sl
  404d16:	465b      	mov	r3, fp
  404d18:	f002 fe46 	bl	4079a8 <__aeabi_ddiv>
  404d1c:	f002 ffca 	bl	407cb4 <__aeabi_d2iz>
  404d20:	4604      	mov	r4, r0
  404d22:	f002 fcb1 	bl	407688 <__aeabi_i2d>
  404d26:	4652      	mov	r2, sl
  404d28:	465b      	mov	r3, fp
  404d2a:	f002 fd13 	bl	407754 <__aeabi_dmul>
  404d2e:	460b      	mov	r3, r1
  404d30:	4602      	mov	r2, r0
  404d32:	4639      	mov	r1, r7
  404d34:	4630      	mov	r0, r6
  404d36:	f002 fb59 	bl	4073ec <__aeabi_dsub>
  404d3a:	9d07      	ldr	r5, [sp, #28]
  404d3c:	f104 0330 	add.w	r3, r4, #48	; 0x30
  404d40:	702b      	strb	r3, [r5, #0]
  404d42:	9b06      	ldr	r3, [sp, #24]
  404d44:	2b01      	cmp	r3, #1
  404d46:	4606      	mov	r6, r0
  404d48:	460f      	mov	r7, r1
  404d4a:	f105 0501 	add.w	r5, r5, #1
  404d4e:	d062      	beq.n	404e16 <_dtoa_r+0x346>
  404d50:	2200      	movs	r2, #0
  404d52:	4b18      	ldr	r3, [pc, #96]	; (404db4 <_dtoa_r+0x2e4>)
  404d54:	f002 fcfe 	bl	407754 <__aeabi_dmul>
  404d58:	2200      	movs	r2, #0
  404d5a:	2300      	movs	r3, #0
  404d5c:	4606      	mov	r6, r0
  404d5e:	460f      	mov	r7, r1
  404d60:	f002 ff60 	bl	407c24 <__aeabi_dcmpeq>
  404d64:	2800      	cmp	r0, #0
  404d66:	d17e      	bne.n	404e66 <_dtoa_r+0x396>
  404d68:	f8cd 9014 	str.w	r9, [sp, #20]
  404d6c:	f8dd a018 	ldr.w	sl, [sp, #24]
  404d70:	f8dd b01c 	ldr.w	fp, [sp, #28]
  404d74:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  404d78:	e029      	b.n	404dce <_dtoa_r+0x2fe>
  404d7a:	bf00      	nop
  404d7c:	f3af 8000 	nop.w
  404d80:	636f4361 	.word	0x636f4361
  404d84:	3fd287a7 	.word	0x3fd287a7
  404d88:	8b60c8b3 	.word	0x8b60c8b3
  404d8c:	3fc68a28 	.word	0x3fc68a28
  404d90:	509f79fb 	.word	0x509f79fb
  404d94:	3fd34413 	.word	0x3fd34413
  404d98:	7ff00000 	.word	0x7ff00000
  404d9c:	00408171 	.word	0x00408171
  404da0:	004081b0 	.word	0x004081b0
  404da4:	3ff80000 	.word	0x3ff80000
  404da8:	004081c0 	.word	0x004081c0
  404dac:	004081a4 	.word	0x004081a4
  404db0:	00408170 	.word	0x00408170
  404db4:	40240000 	.word	0x40240000
  404db8:	f002 fccc 	bl	407754 <__aeabi_dmul>
  404dbc:	2200      	movs	r2, #0
  404dbe:	2300      	movs	r3, #0
  404dc0:	4606      	mov	r6, r0
  404dc2:	460f      	mov	r7, r1
  404dc4:	f002 ff2e 	bl	407c24 <__aeabi_dcmpeq>
  404dc8:	2800      	cmp	r0, #0
  404dca:	f040 83b7 	bne.w	40553c <_dtoa_r+0xa6c>
  404dce:	4642      	mov	r2, r8
  404dd0:	464b      	mov	r3, r9
  404dd2:	4630      	mov	r0, r6
  404dd4:	4639      	mov	r1, r7
  404dd6:	f002 fde7 	bl	4079a8 <__aeabi_ddiv>
  404dda:	f002 ff6b 	bl	407cb4 <__aeabi_d2iz>
  404dde:	4604      	mov	r4, r0
  404de0:	f002 fc52 	bl	407688 <__aeabi_i2d>
  404de4:	4642      	mov	r2, r8
  404de6:	464b      	mov	r3, r9
  404de8:	f002 fcb4 	bl	407754 <__aeabi_dmul>
  404dec:	4602      	mov	r2, r0
  404dee:	460b      	mov	r3, r1
  404df0:	4630      	mov	r0, r6
  404df2:	4639      	mov	r1, r7
  404df4:	f002 fafa 	bl	4073ec <__aeabi_dsub>
  404df8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  404dfc:	f805 eb01 	strb.w	lr, [r5], #1
  404e00:	ebcb 0e05 	rsb	lr, fp, r5
  404e04:	45d6      	cmp	lr, sl
  404e06:	4606      	mov	r6, r0
  404e08:	460f      	mov	r7, r1
  404e0a:	f04f 0200 	mov.w	r2, #0
  404e0e:	4bb0      	ldr	r3, [pc, #704]	; (4050d0 <_dtoa_r+0x600>)
  404e10:	d1d2      	bne.n	404db8 <_dtoa_r+0x2e8>
  404e12:	f8dd 9014 	ldr.w	r9, [sp, #20]
  404e16:	4632      	mov	r2, r6
  404e18:	463b      	mov	r3, r7
  404e1a:	4630      	mov	r0, r6
  404e1c:	4639      	mov	r1, r7
  404e1e:	f002 fae7 	bl	4073f0 <__adddf3>
  404e22:	4606      	mov	r6, r0
  404e24:	460f      	mov	r7, r1
  404e26:	4602      	mov	r2, r0
  404e28:	460b      	mov	r3, r1
  404e2a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404e2e:	f002 ff03 	bl	407c38 <__aeabi_dcmplt>
  404e32:	b940      	cbnz	r0, 404e46 <_dtoa_r+0x376>
  404e34:	4632      	mov	r2, r6
  404e36:	463b      	mov	r3, r7
  404e38:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404e3c:	f002 fef2 	bl	407c24 <__aeabi_dcmpeq>
  404e40:	b188      	cbz	r0, 404e66 <_dtoa_r+0x396>
  404e42:	07e3      	lsls	r3, r4, #31
  404e44:	d50f      	bpl.n	404e66 <_dtoa_r+0x396>
  404e46:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  404e4a:	9a07      	ldr	r2, [sp, #28]
  404e4c:	1e6b      	subs	r3, r5, #1
  404e4e:	e004      	b.n	404e5a <_dtoa_r+0x38a>
  404e50:	429a      	cmp	r2, r3
  404e52:	f000 842c 	beq.w	4056ae <_dtoa_r+0xbde>
  404e56:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  404e5a:	2c39      	cmp	r4, #57	; 0x39
  404e5c:	f103 0501 	add.w	r5, r3, #1
  404e60:	d0f6      	beq.n	404e50 <_dtoa_r+0x380>
  404e62:	3401      	adds	r4, #1
  404e64:	701c      	strb	r4, [r3, #0]
  404e66:	9908      	ldr	r1, [sp, #32]
  404e68:	4648      	mov	r0, r9
  404e6a:	f001 fb53 	bl	406514 <_Bfree>
  404e6e:	2200      	movs	r2, #0
  404e70:	9b04      	ldr	r3, [sp, #16]
  404e72:	702a      	strb	r2, [r5, #0]
  404e74:	9a22      	ldr	r2, [sp, #136]	; 0x88
  404e76:	3301      	adds	r3, #1
  404e78:	6013      	str	r3, [r2, #0]
  404e7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404e7c:	2b00      	cmp	r3, #0
  404e7e:	f000 83a7 	beq.w	4055d0 <_dtoa_r+0xb00>
  404e82:	9807      	ldr	r0, [sp, #28]
  404e84:	601d      	str	r5, [r3, #0]
  404e86:	b017      	add	sp, #92	; 0x5c
  404e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404e8e:	2a00      	cmp	r2, #0
  404e90:	f000 8112 	beq.w	4050b8 <_dtoa_r+0x5e8>
  404e94:	9a20      	ldr	r2, [sp, #128]	; 0x80
  404e96:	2a01      	cmp	r2, #1
  404e98:	f340 8258 	ble.w	40534c <_dtoa_r+0x87c>
  404e9c:	9b06      	ldr	r3, [sp, #24]
  404e9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404ea0:	1e5f      	subs	r7, r3, #1
  404ea2:	42ba      	cmp	r2, r7
  404ea4:	f2c0 8397 	blt.w	4055d6 <_dtoa_r+0xb06>
  404ea8:	1bd7      	subs	r7, r2, r7
  404eaa:	9b06      	ldr	r3, [sp, #24]
  404eac:	2b00      	cmp	r3, #0
  404eae:	f2c0 848a 	blt.w	4057c6 <_dtoa_r+0xcf6>
  404eb2:	9d05      	ldr	r5, [sp, #20]
  404eb4:	9b06      	ldr	r3, [sp, #24]
  404eb6:	9a05      	ldr	r2, [sp, #20]
  404eb8:	441a      	add	r2, r3
  404eba:	9205      	str	r2, [sp, #20]
  404ebc:	9a02      	ldr	r2, [sp, #8]
  404ebe:	2101      	movs	r1, #1
  404ec0:	441a      	add	r2, r3
  404ec2:	4648      	mov	r0, r9
  404ec4:	9202      	str	r2, [sp, #8]
  404ec6:	f001 fbbd 	bl	406644 <__i2b>
  404eca:	4606      	mov	r6, r0
  404ecc:	b165      	cbz	r5, 404ee8 <_dtoa_r+0x418>
  404ece:	9902      	ldr	r1, [sp, #8]
  404ed0:	2900      	cmp	r1, #0
  404ed2:	460b      	mov	r3, r1
  404ed4:	dd08      	ble.n	404ee8 <_dtoa_r+0x418>
  404ed6:	42a9      	cmp	r1, r5
  404ed8:	9a05      	ldr	r2, [sp, #20]
  404eda:	bfa8      	it	ge
  404edc:	462b      	movge	r3, r5
  404ede:	1ad2      	subs	r2, r2, r3
  404ee0:	1aed      	subs	r5, r5, r3
  404ee2:	1acb      	subs	r3, r1, r3
  404ee4:	9205      	str	r2, [sp, #20]
  404ee6:	9302      	str	r3, [sp, #8]
  404ee8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404eea:	2b00      	cmp	r3, #0
  404eec:	f340 82fc 	ble.w	4054e8 <_dtoa_r+0xa18>
  404ef0:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404ef2:	2a00      	cmp	r2, #0
  404ef4:	f000 8201 	beq.w	4052fa <_dtoa_r+0x82a>
  404ef8:	2f00      	cmp	r7, #0
  404efa:	f000 81fe 	beq.w	4052fa <_dtoa_r+0x82a>
  404efe:	4631      	mov	r1, r6
  404f00:	463a      	mov	r2, r7
  404f02:	4648      	mov	r0, r9
  404f04:	f001 fc40 	bl	406788 <__pow5mult>
  404f08:	f8dd 8020 	ldr.w	r8, [sp, #32]
  404f0c:	4601      	mov	r1, r0
  404f0e:	4642      	mov	r2, r8
  404f10:	4606      	mov	r6, r0
  404f12:	4648      	mov	r0, r9
  404f14:	f001 fba0 	bl	406658 <__multiply>
  404f18:	4641      	mov	r1, r8
  404f1a:	4604      	mov	r4, r0
  404f1c:	4648      	mov	r0, r9
  404f1e:	f001 faf9 	bl	406514 <_Bfree>
  404f22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404f24:	1bdb      	subs	r3, r3, r7
  404f26:	930a      	str	r3, [sp, #40]	; 0x28
  404f28:	f040 81e6 	bne.w	4052f8 <_dtoa_r+0x828>
  404f2c:	2101      	movs	r1, #1
  404f2e:	4648      	mov	r0, r9
  404f30:	f001 fb88 	bl	406644 <__i2b>
  404f34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404f36:	4680      	mov	r8, r0
  404f38:	2b00      	cmp	r3, #0
  404f3a:	f000 8219 	beq.w	405370 <_dtoa_r+0x8a0>
  404f3e:	4601      	mov	r1, r0
  404f40:	461a      	mov	r2, r3
  404f42:	4648      	mov	r0, r9
  404f44:	f001 fc20 	bl	406788 <__pow5mult>
  404f48:	9b20      	ldr	r3, [sp, #128]	; 0x80
  404f4a:	2b01      	cmp	r3, #1
  404f4c:	4680      	mov	r8, r0
  404f4e:	f340 82f8 	ble.w	405542 <_dtoa_r+0xa72>
  404f52:	2700      	movs	r7, #0
  404f54:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404f58:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  404f5c:	6918      	ldr	r0, [r3, #16]
  404f5e:	f001 fb23 	bl	4065a8 <__hi0bits>
  404f62:	f1c0 0020 	rsb	r0, r0, #32
  404f66:	9a02      	ldr	r2, [sp, #8]
  404f68:	4410      	add	r0, r2
  404f6a:	f010 001f 	ands.w	r0, r0, #31
  404f6e:	f000 81f6 	beq.w	40535e <_dtoa_r+0x88e>
  404f72:	f1c0 0320 	rsb	r3, r0, #32
  404f76:	2b04      	cmp	r3, #4
  404f78:	f340 84ca 	ble.w	405910 <_dtoa_r+0xe40>
  404f7c:	9b05      	ldr	r3, [sp, #20]
  404f7e:	f1c0 001c 	rsb	r0, r0, #28
  404f82:	4403      	add	r3, r0
  404f84:	9305      	str	r3, [sp, #20]
  404f86:	4613      	mov	r3, r2
  404f88:	4403      	add	r3, r0
  404f8a:	4405      	add	r5, r0
  404f8c:	9302      	str	r3, [sp, #8]
  404f8e:	9b05      	ldr	r3, [sp, #20]
  404f90:	2b00      	cmp	r3, #0
  404f92:	dd05      	ble.n	404fa0 <_dtoa_r+0x4d0>
  404f94:	4621      	mov	r1, r4
  404f96:	461a      	mov	r2, r3
  404f98:	4648      	mov	r0, r9
  404f9a:	f001 fc45 	bl	406828 <__lshift>
  404f9e:	4604      	mov	r4, r0
  404fa0:	9b02      	ldr	r3, [sp, #8]
  404fa2:	2b00      	cmp	r3, #0
  404fa4:	dd05      	ble.n	404fb2 <_dtoa_r+0x4e2>
  404fa6:	4641      	mov	r1, r8
  404fa8:	461a      	mov	r2, r3
  404faa:	4648      	mov	r0, r9
  404fac:	f001 fc3c 	bl	406828 <__lshift>
  404fb0:	4680      	mov	r8, r0
  404fb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404fb4:	2b00      	cmp	r3, #0
  404fb6:	f040 827c 	bne.w	4054b2 <_dtoa_r+0x9e2>
  404fba:	9b06      	ldr	r3, [sp, #24]
  404fbc:	2b00      	cmp	r3, #0
  404fbe:	f340 8295 	ble.w	4054ec <_dtoa_r+0xa1c>
  404fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404fc4:	2b00      	cmp	r3, #0
  404fc6:	f040 81f5 	bne.w	4053b4 <_dtoa_r+0x8e4>
  404fca:	f8dd b01c 	ldr.w	fp, [sp, #28]
  404fce:	9f06      	ldr	r7, [sp, #24]
  404fd0:	465d      	mov	r5, fp
  404fd2:	e002      	b.n	404fda <_dtoa_r+0x50a>
  404fd4:	f001 faa8 	bl	406528 <__multadd>
  404fd8:	4604      	mov	r4, r0
  404fda:	4641      	mov	r1, r8
  404fdc:	4620      	mov	r0, r4
  404fde:	f7ff fce3 	bl	4049a8 <quorem>
  404fe2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  404fe6:	f805 ab01 	strb.w	sl, [r5], #1
  404fea:	ebcb 0305 	rsb	r3, fp, r5
  404fee:	42bb      	cmp	r3, r7
  404ff0:	f04f 020a 	mov.w	r2, #10
  404ff4:	f04f 0300 	mov.w	r3, #0
  404ff8:	4621      	mov	r1, r4
  404ffa:	4648      	mov	r0, r9
  404ffc:	dbea      	blt.n	404fd4 <_dtoa_r+0x504>
  404ffe:	9b07      	ldr	r3, [sp, #28]
  405000:	9a06      	ldr	r2, [sp, #24]
  405002:	2a01      	cmp	r2, #1
  405004:	bfac      	ite	ge
  405006:	189b      	addge	r3, r3, r2
  405008:	3301      	addlt	r3, #1
  40500a:	461d      	mov	r5, r3
  40500c:	f04f 0b00 	mov.w	fp, #0
  405010:	4621      	mov	r1, r4
  405012:	2201      	movs	r2, #1
  405014:	4648      	mov	r0, r9
  405016:	f001 fc07 	bl	406828 <__lshift>
  40501a:	4641      	mov	r1, r8
  40501c:	9008      	str	r0, [sp, #32]
  40501e:	f001 fc5b 	bl	4068d8 <__mcmp>
  405022:	2800      	cmp	r0, #0
  405024:	f340 830d 	ble.w	405642 <_dtoa_r+0xb72>
  405028:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40502c:	9907      	ldr	r1, [sp, #28]
  40502e:	1e6b      	subs	r3, r5, #1
  405030:	e004      	b.n	40503c <_dtoa_r+0x56c>
  405032:	428b      	cmp	r3, r1
  405034:	f000 8278 	beq.w	405528 <_dtoa_r+0xa58>
  405038:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40503c:	2a39      	cmp	r2, #57	; 0x39
  40503e:	f103 0501 	add.w	r5, r3, #1
  405042:	d0f6      	beq.n	405032 <_dtoa_r+0x562>
  405044:	3201      	adds	r2, #1
  405046:	701a      	strb	r2, [r3, #0]
  405048:	4641      	mov	r1, r8
  40504a:	4648      	mov	r0, r9
  40504c:	f001 fa62 	bl	406514 <_Bfree>
  405050:	2e00      	cmp	r6, #0
  405052:	f43f af08 	beq.w	404e66 <_dtoa_r+0x396>
  405056:	f1bb 0f00 	cmp.w	fp, #0
  40505a:	d005      	beq.n	405068 <_dtoa_r+0x598>
  40505c:	45b3      	cmp	fp, r6
  40505e:	d003      	beq.n	405068 <_dtoa_r+0x598>
  405060:	4659      	mov	r1, fp
  405062:	4648      	mov	r0, r9
  405064:	f001 fa56 	bl	406514 <_Bfree>
  405068:	4631      	mov	r1, r6
  40506a:	4648      	mov	r0, r9
  40506c:	f001 fa52 	bl	406514 <_Bfree>
  405070:	e6f9      	b.n	404e66 <_dtoa_r+0x396>
  405072:	2301      	movs	r3, #1
  405074:	930c      	str	r3, [sp, #48]	; 0x30
  405076:	e5e3      	b.n	404c40 <_dtoa_r+0x170>
  405078:	f8dd 8010 	ldr.w	r8, [sp, #16]
  40507c:	4640      	mov	r0, r8
  40507e:	f002 fb03 	bl	407688 <__aeabi_i2d>
  405082:	4602      	mov	r2, r0
  405084:	460b      	mov	r3, r1
  405086:	4630      	mov	r0, r6
  405088:	4639      	mov	r1, r7
  40508a:	f002 fdcb 	bl	407c24 <__aeabi_dcmpeq>
  40508e:	2800      	cmp	r0, #0
  405090:	f47f adc2 	bne.w	404c18 <_dtoa_r+0x148>
  405094:	f108 33ff 	add.w	r3, r8, #4294967295
  405098:	9304      	str	r3, [sp, #16]
  40509a:	e5bd      	b.n	404c18 <_dtoa_r+0x148>
  40509c:	9a05      	ldr	r2, [sp, #20]
  40509e:	9b04      	ldr	r3, [sp, #16]
  4050a0:	1ad2      	subs	r2, r2, r3
  4050a2:	425b      	negs	r3, r3
  4050a4:	930a      	str	r3, [sp, #40]	; 0x28
  4050a6:	2300      	movs	r3, #0
  4050a8:	9205      	str	r2, [sp, #20]
  4050aa:	930b      	str	r3, [sp, #44]	; 0x2c
  4050ac:	e5da      	b.n	404c64 <_dtoa_r+0x194>
  4050ae:	425b      	negs	r3, r3
  4050b0:	9305      	str	r3, [sp, #20]
  4050b2:	2300      	movs	r3, #0
  4050b4:	9302      	str	r3, [sp, #8]
  4050b6:	e5ca      	b.n	404c4e <_dtoa_r+0x17e>
  4050b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4050ba:	9d05      	ldr	r5, [sp, #20]
  4050bc:	9e09      	ldr	r6, [sp, #36]	; 0x24
  4050be:	e705      	b.n	404ecc <_dtoa_r+0x3fc>
  4050c0:	f1c3 0820 	rsb	r8, r3, #32
  4050c4:	fa0a f008 	lsl.w	r0, sl, r8
  4050c8:	e573      	b.n	404bb2 <_dtoa_r+0xe2>
  4050ca:	900c      	str	r0, [sp, #48]	; 0x30
  4050cc:	e5b8      	b.n	404c40 <_dtoa_r+0x170>
  4050ce:	bf00      	nop
  4050d0:	40240000 	.word	0x40240000
  4050d4:	2300      	movs	r3, #0
  4050d6:	9309      	str	r3, [sp, #36]	; 0x24
  4050d8:	9b04      	ldr	r3, [sp, #16]
  4050da:	9a21      	ldr	r2, [sp, #132]	; 0x84
  4050dc:	4413      	add	r3, r2
  4050de:	930d      	str	r3, [sp, #52]	; 0x34
  4050e0:	3301      	adds	r3, #1
  4050e2:	2b00      	cmp	r3, #0
  4050e4:	9306      	str	r3, [sp, #24]
  4050e6:	f340 8283 	ble.w	4055f0 <_dtoa_r+0xb20>
  4050ea:	9c06      	ldr	r4, [sp, #24]
  4050ec:	4626      	mov	r6, r4
  4050ee:	2100      	movs	r1, #0
  4050f0:	2e17      	cmp	r6, #23
  4050f2:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  4050f6:	d90b      	bls.n	405110 <_dtoa_r+0x640>
  4050f8:	2201      	movs	r2, #1
  4050fa:	2304      	movs	r3, #4
  4050fc:	005b      	lsls	r3, r3, #1
  4050fe:	f103 0014 	add.w	r0, r3, #20
  405102:	42b0      	cmp	r0, r6
  405104:	4611      	mov	r1, r2
  405106:	f102 0201 	add.w	r2, r2, #1
  40510a:	d9f7      	bls.n	4050fc <_dtoa_r+0x62c>
  40510c:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  405110:	4648      	mov	r0, r9
  405112:	f001 f9d9 	bl	4064c8 <_Balloc>
  405116:	2c0e      	cmp	r4, #14
  405118:	9007      	str	r0, [sp, #28]
  40511a:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  40511e:	f63f ade0 	bhi.w	404ce2 <_dtoa_r+0x212>
  405122:	2d00      	cmp	r5, #0
  405124:	f43f addd 	beq.w	404ce2 <_dtoa_r+0x212>
  405128:	9904      	ldr	r1, [sp, #16]
  40512a:	4657      	mov	r7, sl
  40512c:	46d8      	mov	r8, fp
  40512e:	2900      	cmp	r1, #0
  405130:	e9cd 780e 	strd	r7, r8, [sp, #56]	; 0x38
  405134:	f340 8292 	ble.w	40565c <_dtoa_r+0xb8c>
  405138:	4b91      	ldr	r3, [pc, #580]	; (405380 <_dtoa_r+0x8b0>)
  40513a:	f001 020f 	and.w	r2, r1, #15
  40513e:	110e      	asrs	r6, r1, #4
  405140:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405144:	06f0      	lsls	r0, r6, #27
  405146:	e9d3 4500 	ldrd	r4, r5, [r3]
  40514a:	f140 824c 	bpl.w	4055e6 <_dtoa_r+0xb16>
  40514e:	4b8d      	ldr	r3, [pc, #564]	; (405384 <_dtoa_r+0x8b4>)
  405150:	4650      	mov	r0, sl
  405152:	4659      	mov	r1, fp
  405154:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  405158:	f002 fc26 	bl	4079a8 <__aeabi_ddiv>
  40515c:	f006 060f 	and.w	r6, r6, #15
  405160:	4682      	mov	sl, r0
  405162:	468b      	mov	fp, r1
  405164:	f04f 0803 	mov.w	r8, #3
  405168:	b186      	cbz	r6, 40518c <_dtoa_r+0x6bc>
  40516a:	4f86      	ldr	r7, [pc, #536]	; (405384 <_dtoa_r+0x8b4>)
  40516c:	07f1      	lsls	r1, r6, #31
  40516e:	d509      	bpl.n	405184 <_dtoa_r+0x6b4>
  405170:	4620      	mov	r0, r4
  405172:	4629      	mov	r1, r5
  405174:	e9d7 2300 	ldrd	r2, r3, [r7]
  405178:	f002 faec 	bl	407754 <__aeabi_dmul>
  40517c:	f108 0801 	add.w	r8, r8, #1
  405180:	4604      	mov	r4, r0
  405182:	460d      	mov	r5, r1
  405184:	1076      	asrs	r6, r6, #1
  405186:	f107 0708 	add.w	r7, r7, #8
  40518a:	d1ef      	bne.n	40516c <_dtoa_r+0x69c>
  40518c:	4622      	mov	r2, r4
  40518e:	462b      	mov	r3, r5
  405190:	4650      	mov	r0, sl
  405192:	4659      	mov	r1, fp
  405194:	f002 fc08 	bl	4079a8 <__aeabi_ddiv>
  405198:	4606      	mov	r6, r0
  40519a:	460f      	mov	r7, r1
  40519c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40519e:	b143      	cbz	r3, 4051b2 <_dtoa_r+0x6e2>
  4051a0:	2200      	movs	r2, #0
  4051a2:	4b79      	ldr	r3, [pc, #484]	; (405388 <_dtoa_r+0x8b8>)
  4051a4:	4630      	mov	r0, r6
  4051a6:	4639      	mov	r1, r7
  4051a8:	f002 fd46 	bl	407c38 <__aeabi_dcmplt>
  4051ac:	2800      	cmp	r0, #0
  4051ae:	f040 8320 	bne.w	4057f2 <_dtoa_r+0xd22>
  4051b2:	4640      	mov	r0, r8
  4051b4:	f002 fa68 	bl	407688 <__aeabi_i2d>
  4051b8:	4632      	mov	r2, r6
  4051ba:	463b      	mov	r3, r7
  4051bc:	f002 faca 	bl	407754 <__aeabi_dmul>
  4051c0:	4b72      	ldr	r3, [pc, #456]	; (40538c <_dtoa_r+0x8bc>)
  4051c2:	2200      	movs	r2, #0
  4051c4:	f002 f914 	bl	4073f0 <__adddf3>
  4051c8:	9b06      	ldr	r3, [sp, #24]
  4051ca:	4604      	mov	r4, r0
  4051cc:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  4051d0:	2b00      	cmp	r3, #0
  4051d2:	f000 81df 	beq.w	405594 <_dtoa_r+0xac4>
  4051d6:	9b04      	ldr	r3, [sp, #16]
  4051d8:	f8dd 8018 	ldr.w	r8, [sp, #24]
  4051dc:	9311      	str	r3, [sp, #68]	; 0x44
  4051de:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051e0:	2b00      	cmp	r3, #0
  4051e2:	f000 8297 	beq.w	405714 <_dtoa_r+0xc44>
  4051e6:	4b66      	ldr	r3, [pc, #408]	; (405380 <_dtoa_r+0x8b0>)
  4051e8:	4969      	ldr	r1, [pc, #420]	; (405390 <_dtoa_r+0x8c0>)
  4051ea:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
  4051ee:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4051f2:	2000      	movs	r0, #0
  4051f4:	f002 fbd8 	bl	4079a8 <__aeabi_ddiv>
  4051f8:	4622      	mov	r2, r4
  4051fa:	462b      	mov	r3, r5
  4051fc:	f002 f8f6 	bl	4073ec <__aeabi_dsub>
  405200:	4682      	mov	sl, r0
  405202:	468b      	mov	fp, r1
  405204:	4630      	mov	r0, r6
  405206:	4639      	mov	r1, r7
  405208:	f002 fd54 	bl	407cb4 <__aeabi_d2iz>
  40520c:	4604      	mov	r4, r0
  40520e:	f002 fa3b 	bl	407688 <__aeabi_i2d>
  405212:	4602      	mov	r2, r0
  405214:	460b      	mov	r3, r1
  405216:	4630      	mov	r0, r6
  405218:	4639      	mov	r1, r7
  40521a:	f002 f8e7 	bl	4073ec <__aeabi_dsub>
  40521e:	3430      	adds	r4, #48	; 0x30
  405220:	9d07      	ldr	r5, [sp, #28]
  405222:	b2e4      	uxtb	r4, r4
  405224:	4606      	mov	r6, r0
  405226:	460f      	mov	r7, r1
  405228:	702c      	strb	r4, [r5, #0]
  40522a:	4602      	mov	r2, r0
  40522c:	460b      	mov	r3, r1
  40522e:	4650      	mov	r0, sl
  405230:	4659      	mov	r1, fp
  405232:	3501      	adds	r5, #1
  405234:	f002 fd1e 	bl	407c74 <__aeabi_dcmpgt>
  405238:	2800      	cmp	r0, #0
  40523a:	d14c      	bne.n	4052d6 <_dtoa_r+0x806>
  40523c:	4632      	mov	r2, r6
  40523e:	463b      	mov	r3, r7
  405240:	2000      	movs	r0, #0
  405242:	4951      	ldr	r1, [pc, #324]	; (405388 <_dtoa_r+0x8b8>)
  405244:	f002 f8d2 	bl	4073ec <__aeabi_dsub>
  405248:	4602      	mov	r2, r0
  40524a:	460b      	mov	r3, r1
  40524c:	4650      	mov	r0, sl
  40524e:	4659      	mov	r1, fp
  405250:	f002 fd10 	bl	407c74 <__aeabi_dcmpgt>
  405254:	2800      	cmp	r0, #0
  405256:	f040 830d 	bne.w	405874 <_dtoa_r+0xda4>
  40525a:	f1b8 0f01 	cmp.w	r8, #1
  40525e:	f340 81b3 	ble.w	4055c8 <_dtoa_r+0xaf8>
  405262:	9b07      	ldr	r3, [sp, #28]
  405264:	4498      	add	r8, r3
  405266:	e00d      	b.n	405284 <_dtoa_r+0x7b4>
  405268:	2000      	movs	r0, #0
  40526a:	4947      	ldr	r1, [pc, #284]	; (405388 <_dtoa_r+0x8b8>)
  40526c:	f002 f8be 	bl	4073ec <__aeabi_dsub>
  405270:	4652      	mov	r2, sl
  405272:	465b      	mov	r3, fp
  405274:	f002 fce0 	bl	407c38 <__aeabi_dcmplt>
  405278:	2800      	cmp	r0, #0
  40527a:	f040 82fb 	bne.w	405874 <_dtoa_r+0xda4>
  40527e:	4545      	cmp	r5, r8
  405280:	f000 81a2 	beq.w	4055c8 <_dtoa_r+0xaf8>
  405284:	4650      	mov	r0, sl
  405286:	4659      	mov	r1, fp
  405288:	2200      	movs	r2, #0
  40528a:	4b42      	ldr	r3, [pc, #264]	; (405394 <_dtoa_r+0x8c4>)
  40528c:	f002 fa62 	bl	407754 <__aeabi_dmul>
  405290:	2200      	movs	r2, #0
  405292:	4b40      	ldr	r3, [pc, #256]	; (405394 <_dtoa_r+0x8c4>)
  405294:	4682      	mov	sl, r0
  405296:	468b      	mov	fp, r1
  405298:	4630      	mov	r0, r6
  40529a:	4639      	mov	r1, r7
  40529c:	f002 fa5a 	bl	407754 <__aeabi_dmul>
  4052a0:	460f      	mov	r7, r1
  4052a2:	4606      	mov	r6, r0
  4052a4:	f002 fd06 	bl	407cb4 <__aeabi_d2iz>
  4052a8:	4604      	mov	r4, r0
  4052aa:	f002 f9ed 	bl	407688 <__aeabi_i2d>
  4052ae:	4602      	mov	r2, r0
  4052b0:	460b      	mov	r3, r1
  4052b2:	4630      	mov	r0, r6
  4052b4:	4639      	mov	r1, r7
  4052b6:	f002 f899 	bl	4073ec <__aeabi_dsub>
  4052ba:	3430      	adds	r4, #48	; 0x30
  4052bc:	b2e4      	uxtb	r4, r4
  4052be:	4652      	mov	r2, sl
  4052c0:	465b      	mov	r3, fp
  4052c2:	f805 4b01 	strb.w	r4, [r5], #1
  4052c6:	4606      	mov	r6, r0
  4052c8:	460f      	mov	r7, r1
  4052ca:	f002 fcb5 	bl	407c38 <__aeabi_dcmplt>
  4052ce:	4632      	mov	r2, r6
  4052d0:	463b      	mov	r3, r7
  4052d2:	2800      	cmp	r0, #0
  4052d4:	d0c8      	beq.n	405268 <_dtoa_r+0x798>
  4052d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4052d8:	9304      	str	r3, [sp, #16]
  4052da:	e5c4      	b.n	404e66 <_dtoa_r+0x396>
  4052dc:	2300      	movs	r3, #0
  4052de:	9309      	str	r3, [sp, #36]	; 0x24
  4052e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4052e2:	2b00      	cmp	r3, #0
  4052e4:	f340 8189 	ble.w	4055fa <_dtoa_r+0xb2a>
  4052e8:	461e      	mov	r6, r3
  4052ea:	461c      	mov	r4, r3
  4052ec:	930d      	str	r3, [sp, #52]	; 0x34
  4052ee:	9306      	str	r3, [sp, #24]
  4052f0:	e6fd      	b.n	4050ee <_dtoa_r+0x61e>
  4052f2:	2301      	movs	r3, #1
  4052f4:	9309      	str	r3, [sp, #36]	; 0x24
  4052f6:	e7f3      	b.n	4052e0 <_dtoa_r+0x810>
  4052f8:	9408      	str	r4, [sp, #32]
  4052fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4052fc:	9908      	ldr	r1, [sp, #32]
  4052fe:	4648      	mov	r0, r9
  405300:	f001 fa42 	bl	406788 <__pow5mult>
  405304:	4604      	mov	r4, r0
  405306:	e611      	b.n	404f2c <_dtoa_r+0x45c>
  405308:	9b06      	ldr	r3, [sp, #24]
  40530a:	2b00      	cmp	r3, #0
  40530c:	f73f acfc 	bgt.w	404d08 <_dtoa_r+0x238>
  405310:	f040 82da 	bne.w	4058c8 <_dtoa_r+0xdf8>
  405314:	2200      	movs	r2, #0
  405316:	4b20      	ldr	r3, [pc, #128]	; (405398 <_dtoa_r+0x8c8>)
  405318:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40531c:	f002 fa1a 	bl	407754 <__aeabi_dmul>
  405320:	4652      	mov	r2, sl
  405322:	465b      	mov	r3, fp
  405324:	f002 fc9c 	bl	407c60 <__aeabi_dcmpge>
  405328:	f8dd 8018 	ldr.w	r8, [sp, #24]
  40532c:	4646      	mov	r6, r8
  40532e:	2800      	cmp	r0, #0
  405330:	f000 80f2 	beq.w	405518 <_dtoa_r+0xa48>
  405334:	9b21      	ldr	r3, [sp, #132]	; 0x84
  405336:	9d07      	ldr	r5, [sp, #28]
  405338:	43db      	mvns	r3, r3
  40533a:	9304      	str	r3, [sp, #16]
  40533c:	4641      	mov	r1, r8
  40533e:	4648      	mov	r0, r9
  405340:	f001 f8e8 	bl	406514 <_Bfree>
  405344:	2e00      	cmp	r6, #0
  405346:	f43f ad8e 	beq.w	404e66 <_dtoa_r+0x396>
  40534a:	e68d      	b.n	405068 <_dtoa_r+0x598>
  40534c:	9a10      	ldr	r2, [sp, #64]	; 0x40
  40534e:	2a00      	cmp	r2, #0
  405350:	f000 8241 	beq.w	4057d6 <_dtoa_r+0xd06>
  405354:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405358:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  40535a:	9d05      	ldr	r5, [sp, #20]
  40535c:	e5ab      	b.n	404eb6 <_dtoa_r+0x3e6>
  40535e:	201c      	movs	r0, #28
  405360:	9b05      	ldr	r3, [sp, #20]
  405362:	4403      	add	r3, r0
  405364:	9305      	str	r3, [sp, #20]
  405366:	9b02      	ldr	r3, [sp, #8]
  405368:	4403      	add	r3, r0
  40536a:	4405      	add	r5, r0
  40536c:	9302      	str	r3, [sp, #8]
  40536e:	e60e      	b.n	404f8e <_dtoa_r+0x4be>
  405370:	9b20      	ldr	r3, [sp, #128]	; 0x80
  405372:	2b01      	cmp	r3, #1
  405374:	f340 8282 	ble.w	40587c <_dtoa_r+0xdac>
  405378:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  40537a:	2001      	movs	r0, #1
  40537c:	e5f3      	b.n	404f66 <_dtoa_r+0x496>
  40537e:	bf00      	nop
  405380:	004081c0 	.word	0x004081c0
  405384:	00408288 	.word	0x00408288
  405388:	3ff00000 	.word	0x3ff00000
  40538c:	401c0000 	.word	0x401c0000
  405390:	3fe00000 	.word	0x3fe00000
  405394:	40240000 	.word	0x40240000
  405398:	40140000 	.word	0x40140000
  40539c:	4631      	mov	r1, r6
  40539e:	2300      	movs	r3, #0
  4053a0:	220a      	movs	r2, #10
  4053a2:	4648      	mov	r0, r9
  4053a4:	f001 f8c0 	bl	406528 <__multadd>
  4053a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4053aa:	2b00      	cmp	r3, #0
  4053ac:	4606      	mov	r6, r0
  4053ae:	f340 8297 	ble.w	4058e0 <_dtoa_r+0xe10>
  4053b2:	9306      	str	r3, [sp, #24]
  4053b4:	2d00      	cmp	r5, #0
  4053b6:	dd05      	ble.n	4053c4 <_dtoa_r+0x8f4>
  4053b8:	4631      	mov	r1, r6
  4053ba:	462a      	mov	r2, r5
  4053bc:	4648      	mov	r0, r9
  4053be:	f001 fa33 	bl	406828 <__lshift>
  4053c2:	4606      	mov	r6, r0
  4053c4:	2f00      	cmp	r7, #0
  4053c6:	f040 817c 	bne.w	4056c2 <_dtoa_r+0xbf2>
  4053ca:	9605      	str	r6, [sp, #20]
  4053cc:	9b06      	ldr	r3, [sp, #24]
  4053ce:	9a07      	ldr	r2, [sp, #28]
  4053d0:	f8dd b014 	ldr.w	fp, [sp, #20]
  4053d4:	3b01      	subs	r3, #1
  4053d6:	18d3      	adds	r3, r2, r3
  4053d8:	9308      	str	r3, [sp, #32]
  4053da:	f00a 0301 	and.w	r3, sl, #1
  4053de:	9309      	str	r3, [sp, #36]	; 0x24
  4053e0:	4617      	mov	r7, r2
  4053e2:	46c2      	mov	sl, r8
  4053e4:	4651      	mov	r1, sl
  4053e6:	4620      	mov	r0, r4
  4053e8:	f7ff fade 	bl	4049a8 <quorem>
  4053ec:	4631      	mov	r1, r6
  4053ee:	4605      	mov	r5, r0
  4053f0:	4620      	mov	r0, r4
  4053f2:	f001 fa71 	bl	4068d8 <__mcmp>
  4053f6:	465a      	mov	r2, fp
  4053f8:	9002      	str	r0, [sp, #8]
  4053fa:	4651      	mov	r1, sl
  4053fc:	4648      	mov	r0, r9
  4053fe:	f001 fa8b 	bl	406918 <__mdiff>
  405402:	68c2      	ldr	r2, [r0, #12]
  405404:	4680      	mov	r8, r0
  405406:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40540a:	2a00      	cmp	r2, #0
  40540c:	d149      	bne.n	4054a2 <_dtoa_r+0x9d2>
  40540e:	4601      	mov	r1, r0
  405410:	4620      	mov	r0, r4
  405412:	9306      	str	r3, [sp, #24]
  405414:	f001 fa60 	bl	4068d8 <__mcmp>
  405418:	4641      	mov	r1, r8
  40541a:	9005      	str	r0, [sp, #20]
  40541c:	4648      	mov	r0, r9
  40541e:	f001 f879 	bl	406514 <_Bfree>
  405422:	9a05      	ldr	r2, [sp, #20]
  405424:	9b06      	ldr	r3, [sp, #24]
  405426:	b92a      	cbnz	r2, 405434 <_dtoa_r+0x964>
  405428:	9920      	ldr	r1, [sp, #128]	; 0x80
  40542a:	b919      	cbnz	r1, 405434 <_dtoa_r+0x964>
  40542c:	9909      	ldr	r1, [sp, #36]	; 0x24
  40542e:	2900      	cmp	r1, #0
  405430:	f000 8236 	beq.w	4058a0 <_dtoa_r+0xdd0>
  405434:	9902      	ldr	r1, [sp, #8]
  405436:	2900      	cmp	r1, #0
  405438:	f2c0 80e4 	blt.w	405604 <_dtoa_r+0xb34>
  40543c:	d105      	bne.n	40544a <_dtoa_r+0x97a>
  40543e:	9920      	ldr	r1, [sp, #128]	; 0x80
  405440:	b919      	cbnz	r1, 40544a <_dtoa_r+0x97a>
  405442:	9909      	ldr	r1, [sp, #36]	; 0x24
  405444:	2900      	cmp	r1, #0
  405446:	f000 80dd 	beq.w	405604 <_dtoa_r+0xb34>
  40544a:	2a00      	cmp	r2, #0
  40544c:	f300 814d 	bgt.w	4056ea <_dtoa_r+0xc1a>
  405450:	9a08      	ldr	r2, [sp, #32]
  405452:	703b      	strb	r3, [r7, #0]
  405454:	f107 0801 	add.w	r8, r7, #1
  405458:	4297      	cmp	r7, r2
  40545a:	4645      	mov	r5, r8
  40545c:	f000 8154 	beq.w	405708 <_dtoa_r+0xc38>
  405460:	4621      	mov	r1, r4
  405462:	2300      	movs	r3, #0
  405464:	220a      	movs	r2, #10
  405466:	4648      	mov	r0, r9
  405468:	f001 f85e 	bl	406528 <__multadd>
  40546c:	455e      	cmp	r6, fp
  40546e:	4604      	mov	r4, r0
  405470:	4631      	mov	r1, r6
  405472:	f04f 0300 	mov.w	r3, #0
  405476:	f04f 020a 	mov.w	r2, #10
  40547a:	4648      	mov	r0, r9
  40547c:	d00b      	beq.n	405496 <_dtoa_r+0x9c6>
  40547e:	f001 f853 	bl	406528 <__multadd>
  405482:	4659      	mov	r1, fp
  405484:	4606      	mov	r6, r0
  405486:	2300      	movs	r3, #0
  405488:	220a      	movs	r2, #10
  40548a:	4648      	mov	r0, r9
  40548c:	f001 f84c 	bl	406528 <__multadd>
  405490:	4647      	mov	r7, r8
  405492:	4683      	mov	fp, r0
  405494:	e7a6      	b.n	4053e4 <_dtoa_r+0x914>
  405496:	f001 f847 	bl	406528 <__multadd>
  40549a:	4647      	mov	r7, r8
  40549c:	4606      	mov	r6, r0
  40549e:	4683      	mov	fp, r0
  4054a0:	e7a0      	b.n	4053e4 <_dtoa_r+0x914>
  4054a2:	4601      	mov	r1, r0
  4054a4:	4648      	mov	r0, r9
  4054a6:	9305      	str	r3, [sp, #20]
  4054a8:	f001 f834 	bl	406514 <_Bfree>
  4054ac:	2201      	movs	r2, #1
  4054ae:	9b05      	ldr	r3, [sp, #20]
  4054b0:	e7c0      	b.n	405434 <_dtoa_r+0x964>
  4054b2:	4641      	mov	r1, r8
  4054b4:	4620      	mov	r0, r4
  4054b6:	f001 fa0f 	bl	4068d8 <__mcmp>
  4054ba:	2800      	cmp	r0, #0
  4054bc:	f6bf ad7d 	bge.w	404fba <_dtoa_r+0x4ea>
  4054c0:	4621      	mov	r1, r4
  4054c2:	9c04      	ldr	r4, [sp, #16]
  4054c4:	2300      	movs	r3, #0
  4054c6:	3c01      	subs	r4, #1
  4054c8:	220a      	movs	r2, #10
  4054ca:	4648      	mov	r0, r9
  4054cc:	9404      	str	r4, [sp, #16]
  4054ce:	f001 f82b 	bl	406528 <__multadd>
  4054d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4054d4:	4604      	mov	r4, r0
  4054d6:	2b00      	cmp	r3, #0
  4054d8:	f47f af60 	bne.w	40539c <_dtoa_r+0x8cc>
  4054dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4054de:	2b00      	cmp	r3, #0
  4054e0:	f340 81f6 	ble.w	4058d0 <_dtoa_r+0xe00>
  4054e4:	9306      	str	r3, [sp, #24]
  4054e6:	e570      	b.n	404fca <_dtoa_r+0x4fa>
  4054e8:	9c08      	ldr	r4, [sp, #32]
  4054ea:	e51f      	b.n	404f2c <_dtoa_r+0x45c>
  4054ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4054ee:	2b02      	cmp	r3, #2
  4054f0:	f77f ad67 	ble.w	404fc2 <_dtoa_r+0x4f2>
  4054f4:	9b06      	ldr	r3, [sp, #24]
  4054f6:	2b00      	cmp	r3, #0
  4054f8:	f040 8179 	bne.w	4057ee <_dtoa_r+0xd1e>
  4054fc:	4641      	mov	r1, r8
  4054fe:	2205      	movs	r2, #5
  405500:	4648      	mov	r0, r9
  405502:	f001 f811 	bl	406528 <__multadd>
  405506:	4601      	mov	r1, r0
  405508:	4680      	mov	r8, r0
  40550a:	4620      	mov	r0, r4
  40550c:	f001 f9e4 	bl	4068d8 <__mcmp>
  405510:	2800      	cmp	r0, #0
  405512:	9408      	str	r4, [sp, #32]
  405514:	f77f af0e 	ble.w	405334 <_dtoa_r+0x864>
  405518:	9a04      	ldr	r2, [sp, #16]
  40551a:	9907      	ldr	r1, [sp, #28]
  40551c:	2331      	movs	r3, #49	; 0x31
  40551e:	3201      	adds	r2, #1
  405520:	9204      	str	r2, [sp, #16]
  405522:	700b      	strb	r3, [r1, #0]
  405524:	1c4d      	adds	r5, r1, #1
  405526:	e709      	b.n	40533c <_dtoa_r+0x86c>
  405528:	9a04      	ldr	r2, [sp, #16]
  40552a:	3201      	adds	r2, #1
  40552c:	9204      	str	r2, [sp, #16]
  40552e:	9a07      	ldr	r2, [sp, #28]
  405530:	2331      	movs	r3, #49	; 0x31
  405532:	7013      	strb	r3, [r2, #0]
  405534:	e588      	b.n	405048 <_dtoa_r+0x578>
  405536:	2301      	movs	r3, #1
  405538:	9309      	str	r3, [sp, #36]	; 0x24
  40553a:	e5cd      	b.n	4050d8 <_dtoa_r+0x608>
  40553c:	f8dd 9014 	ldr.w	r9, [sp, #20]
  405540:	e491      	b.n	404e66 <_dtoa_r+0x396>
  405542:	f1ba 0f00 	cmp.w	sl, #0
  405546:	f47f ad04 	bne.w	404f52 <_dtoa_r+0x482>
  40554a:	f3cb 0313 	ubfx	r3, fp, #0, #20
  40554e:	2b00      	cmp	r3, #0
  405550:	f040 813f 	bne.w	4057d2 <_dtoa_r+0xd02>
  405554:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405558:	0d3f      	lsrs	r7, r7, #20
  40555a:	053f      	lsls	r7, r7, #20
  40555c:	b137      	cbz	r7, 40556c <_dtoa_r+0xa9c>
  40555e:	9b05      	ldr	r3, [sp, #20]
  405560:	3301      	adds	r3, #1
  405562:	9305      	str	r3, [sp, #20]
  405564:	9b02      	ldr	r3, [sp, #8]
  405566:	3301      	adds	r3, #1
  405568:	9302      	str	r3, [sp, #8]
  40556a:	2701      	movs	r7, #1
  40556c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40556e:	2001      	movs	r0, #1
  405570:	2b00      	cmp	r3, #0
  405572:	f43f acf8 	beq.w	404f66 <_dtoa_r+0x496>
  405576:	e4ed      	b.n	404f54 <_dtoa_r+0x484>
  405578:	4640      	mov	r0, r8
  40557a:	f002 f885 	bl	407688 <__aeabi_i2d>
  40557e:	4632      	mov	r2, r6
  405580:	463b      	mov	r3, r7
  405582:	f002 f8e7 	bl	407754 <__aeabi_dmul>
  405586:	2200      	movs	r2, #0
  405588:	4bbf      	ldr	r3, [pc, #764]	; (405888 <_dtoa_r+0xdb8>)
  40558a:	f001 ff31 	bl	4073f0 <__adddf3>
  40558e:	4604      	mov	r4, r0
  405590:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  405594:	4630      	mov	r0, r6
  405596:	4639      	mov	r1, r7
  405598:	2200      	movs	r2, #0
  40559a:	4bbc      	ldr	r3, [pc, #752]	; (40588c <_dtoa_r+0xdbc>)
  40559c:	f001 ff26 	bl	4073ec <__aeabi_dsub>
  4055a0:	4622      	mov	r2, r4
  4055a2:	462b      	mov	r3, r5
  4055a4:	4606      	mov	r6, r0
  4055a6:	460f      	mov	r7, r1
  4055a8:	f002 fb64 	bl	407c74 <__aeabi_dcmpgt>
  4055ac:	4680      	mov	r8, r0
  4055ae:	2800      	cmp	r0, #0
  4055b0:	f040 8105 	bne.w	4057be <_dtoa_r+0xcee>
  4055b4:	4622      	mov	r2, r4
  4055b6:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  4055ba:	4630      	mov	r0, r6
  4055bc:	4639      	mov	r1, r7
  4055be:	f002 fb3b 	bl	407c38 <__aeabi_dcmplt>
  4055c2:	b108      	cbz	r0, 4055c8 <_dtoa_r+0xaf8>
  4055c4:	4646      	mov	r6, r8
  4055c6:	e6b5      	b.n	405334 <_dtoa_r+0x864>
  4055c8:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
  4055cc:	f7ff bb89 	b.w	404ce2 <_dtoa_r+0x212>
  4055d0:	9807      	ldr	r0, [sp, #28]
  4055d2:	f7ff baae 	b.w	404b32 <_dtoa_r+0x62>
  4055d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4055d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4055da:	970a      	str	r7, [sp, #40]	; 0x28
  4055dc:	1afb      	subs	r3, r7, r3
  4055de:	441a      	add	r2, r3
  4055e0:	920b      	str	r2, [sp, #44]	; 0x2c
  4055e2:	2700      	movs	r7, #0
  4055e4:	e461      	b.n	404eaa <_dtoa_r+0x3da>
  4055e6:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
  4055ea:	f04f 0802 	mov.w	r8, #2
  4055ee:	e5bb      	b.n	405168 <_dtoa_r+0x698>
  4055f0:	461c      	mov	r4, r3
  4055f2:	2100      	movs	r1, #0
  4055f4:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  4055f8:	e58a      	b.n	405110 <_dtoa_r+0x640>
  4055fa:	2401      	movs	r4, #1
  4055fc:	9421      	str	r4, [sp, #132]	; 0x84
  4055fe:	940d      	str	r4, [sp, #52]	; 0x34
  405600:	9406      	str	r4, [sp, #24]
  405602:	e7f6      	b.n	4055f2 <_dtoa_r+0xb22>
  405604:	2a00      	cmp	r2, #0
  405606:	46d0      	mov	r8, sl
  405608:	f8cd b014 	str.w	fp, [sp, #20]
  40560c:	469a      	mov	sl, r3
  40560e:	dd11      	ble.n	405634 <_dtoa_r+0xb64>
  405610:	4621      	mov	r1, r4
  405612:	2201      	movs	r2, #1
  405614:	4648      	mov	r0, r9
  405616:	f001 f907 	bl	406828 <__lshift>
  40561a:	4641      	mov	r1, r8
  40561c:	4604      	mov	r4, r0
  40561e:	f001 f95b 	bl	4068d8 <__mcmp>
  405622:	2800      	cmp	r0, #0
  405624:	f340 8149 	ble.w	4058ba <_dtoa_r+0xdea>
  405628:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40562c:	f000 8106 	beq.w	40583c <_dtoa_r+0xd6c>
  405630:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  405634:	46b3      	mov	fp, r6
  405636:	f887 a000 	strb.w	sl, [r7]
  40563a:	1c7d      	adds	r5, r7, #1
  40563c:	9e05      	ldr	r6, [sp, #20]
  40563e:	9408      	str	r4, [sp, #32]
  405640:	e502      	b.n	405048 <_dtoa_r+0x578>
  405642:	d104      	bne.n	40564e <_dtoa_r+0xb7e>
  405644:	f01a 0f01 	tst.w	sl, #1
  405648:	d001      	beq.n	40564e <_dtoa_r+0xb7e>
  40564a:	e4ed      	b.n	405028 <_dtoa_r+0x558>
  40564c:	4615      	mov	r5, r2
  40564e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405652:	2b30      	cmp	r3, #48	; 0x30
  405654:	f105 32ff 	add.w	r2, r5, #4294967295
  405658:	d0f8      	beq.n	40564c <_dtoa_r+0xb7c>
  40565a:	e4f5      	b.n	405048 <_dtoa_r+0x578>
  40565c:	9b04      	ldr	r3, [sp, #16]
  40565e:	425c      	negs	r4, r3
  405660:	2c00      	cmp	r4, #0
  405662:	f000 80bf 	beq.w	4057e4 <_dtoa_r+0xd14>
  405666:	4b8a      	ldr	r3, [pc, #552]	; (405890 <_dtoa_r+0xdc0>)
  405668:	f004 020f 	and.w	r2, r4, #15
  40566c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405670:	e9d3 2300 	ldrd	r2, r3, [r3]
  405674:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  405678:	f002 f86c 	bl	407754 <__aeabi_dmul>
  40567c:	1124      	asrs	r4, r4, #4
  40567e:	4606      	mov	r6, r0
  405680:	460f      	mov	r7, r1
  405682:	f000 812a 	beq.w	4058da <_dtoa_r+0xe0a>
  405686:	4d83      	ldr	r5, [pc, #524]	; (405894 <_dtoa_r+0xdc4>)
  405688:	f04f 0802 	mov.w	r8, #2
  40568c:	07e2      	lsls	r2, r4, #31
  40568e:	d509      	bpl.n	4056a4 <_dtoa_r+0xbd4>
  405690:	4630      	mov	r0, r6
  405692:	4639      	mov	r1, r7
  405694:	e9d5 2300 	ldrd	r2, r3, [r5]
  405698:	f002 f85c 	bl	407754 <__aeabi_dmul>
  40569c:	f108 0801 	add.w	r8, r8, #1
  4056a0:	4606      	mov	r6, r0
  4056a2:	460f      	mov	r7, r1
  4056a4:	1064      	asrs	r4, r4, #1
  4056a6:	f105 0508 	add.w	r5, r5, #8
  4056aa:	d1ef      	bne.n	40568c <_dtoa_r+0xbbc>
  4056ac:	e576      	b.n	40519c <_dtoa_r+0x6cc>
  4056ae:	9907      	ldr	r1, [sp, #28]
  4056b0:	2230      	movs	r2, #48	; 0x30
  4056b2:	700a      	strb	r2, [r1, #0]
  4056b4:	9a04      	ldr	r2, [sp, #16]
  4056b6:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  4056ba:	3201      	adds	r2, #1
  4056bc:	9204      	str	r2, [sp, #16]
  4056be:	f7ff bbd0 	b.w	404e62 <_dtoa_r+0x392>
  4056c2:	6871      	ldr	r1, [r6, #4]
  4056c4:	4648      	mov	r0, r9
  4056c6:	f000 feff 	bl	4064c8 <_Balloc>
  4056ca:	6933      	ldr	r3, [r6, #16]
  4056cc:	1c9a      	adds	r2, r3, #2
  4056ce:	4605      	mov	r5, r0
  4056d0:	0092      	lsls	r2, r2, #2
  4056d2:	f106 010c 	add.w	r1, r6, #12
  4056d6:	300c      	adds	r0, #12
  4056d8:	f7fc fb2c 	bl	401d34 <memcpy>
  4056dc:	4629      	mov	r1, r5
  4056de:	2201      	movs	r2, #1
  4056e0:	4648      	mov	r0, r9
  4056e2:	f001 f8a1 	bl	406828 <__lshift>
  4056e6:	9005      	str	r0, [sp, #20]
  4056e8:	e670      	b.n	4053cc <_dtoa_r+0x8fc>
  4056ea:	2b39      	cmp	r3, #57	; 0x39
  4056ec:	f8cd b014 	str.w	fp, [sp, #20]
  4056f0:	46d0      	mov	r8, sl
  4056f2:	f000 80a3 	beq.w	40583c <_dtoa_r+0xd6c>
  4056f6:	f103 0a01 	add.w	sl, r3, #1
  4056fa:	46b3      	mov	fp, r6
  4056fc:	f887 a000 	strb.w	sl, [r7]
  405700:	1c7d      	adds	r5, r7, #1
  405702:	9e05      	ldr	r6, [sp, #20]
  405704:	9408      	str	r4, [sp, #32]
  405706:	e49f      	b.n	405048 <_dtoa_r+0x578>
  405708:	465a      	mov	r2, fp
  40570a:	46d0      	mov	r8, sl
  40570c:	46b3      	mov	fp, r6
  40570e:	469a      	mov	sl, r3
  405710:	4616      	mov	r6, r2
  405712:	e47d      	b.n	405010 <_dtoa_r+0x540>
  405714:	495e      	ldr	r1, [pc, #376]	; (405890 <_dtoa_r+0xdc0>)
  405716:	f108 3aff 	add.w	sl, r8, #4294967295
  40571a:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
  40571e:	4622      	mov	r2, r4
  405720:	462b      	mov	r3, r5
  405722:	e9d1 0100 	ldrd	r0, r1, [r1]
  405726:	f002 f815 	bl	407754 <__aeabi_dmul>
  40572a:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40572e:	4639      	mov	r1, r7
  405730:	4630      	mov	r0, r6
  405732:	f002 fabf 	bl	407cb4 <__aeabi_d2iz>
  405736:	4604      	mov	r4, r0
  405738:	f001 ffa6 	bl	407688 <__aeabi_i2d>
  40573c:	4602      	mov	r2, r0
  40573e:	460b      	mov	r3, r1
  405740:	4630      	mov	r0, r6
  405742:	4639      	mov	r1, r7
  405744:	f001 fe52 	bl	4073ec <__aeabi_dsub>
  405748:	9a07      	ldr	r2, [sp, #28]
  40574a:	3430      	adds	r4, #48	; 0x30
  40574c:	f1b8 0f01 	cmp.w	r8, #1
  405750:	4606      	mov	r6, r0
  405752:	460f      	mov	r7, r1
  405754:	7014      	strb	r4, [r2, #0]
  405756:	f102 0501 	add.w	r5, r2, #1
  40575a:	d01e      	beq.n	40579a <_dtoa_r+0xcca>
  40575c:	9b07      	ldr	r3, [sp, #28]
  40575e:	eb03 0b08 	add.w	fp, r3, r8
  405762:	46a8      	mov	r8, r5
  405764:	2200      	movs	r2, #0
  405766:	4b4c      	ldr	r3, [pc, #304]	; (405898 <_dtoa_r+0xdc8>)
  405768:	4630      	mov	r0, r6
  40576a:	4639      	mov	r1, r7
  40576c:	f001 fff2 	bl	407754 <__aeabi_dmul>
  405770:	460f      	mov	r7, r1
  405772:	4606      	mov	r6, r0
  405774:	f002 fa9e 	bl	407cb4 <__aeabi_d2iz>
  405778:	4604      	mov	r4, r0
  40577a:	f001 ff85 	bl	407688 <__aeabi_i2d>
  40577e:	3430      	adds	r4, #48	; 0x30
  405780:	4602      	mov	r2, r0
  405782:	460b      	mov	r3, r1
  405784:	4630      	mov	r0, r6
  405786:	4639      	mov	r1, r7
  405788:	f001 fe30 	bl	4073ec <__aeabi_dsub>
  40578c:	f808 4b01 	strb.w	r4, [r8], #1
  405790:	45c3      	cmp	fp, r8
  405792:	4606      	mov	r6, r0
  405794:	460f      	mov	r7, r1
  405796:	d1e5      	bne.n	405764 <_dtoa_r+0xc94>
  405798:	4455      	add	r5, sl
  40579a:	2200      	movs	r2, #0
  40579c:	4b3f      	ldr	r3, [pc, #252]	; (40589c <_dtoa_r+0xdcc>)
  40579e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4057a2:	f001 fe25 	bl	4073f0 <__adddf3>
  4057a6:	4632      	mov	r2, r6
  4057a8:	463b      	mov	r3, r7
  4057aa:	f002 fa45 	bl	407c38 <__aeabi_dcmplt>
  4057ae:	2800      	cmp	r0, #0
  4057b0:	d04c      	beq.n	40584c <_dtoa_r+0xd7c>
  4057b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4057b4:	9304      	str	r3, [sp, #16]
  4057b6:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  4057ba:	f7ff bb46 	b.w	404e4a <_dtoa_r+0x37a>
  4057be:	f04f 0800 	mov.w	r8, #0
  4057c2:	4646      	mov	r6, r8
  4057c4:	e6a8      	b.n	405518 <_dtoa_r+0xa48>
  4057c6:	9b05      	ldr	r3, [sp, #20]
  4057c8:	9a06      	ldr	r2, [sp, #24]
  4057ca:	1a9d      	subs	r5, r3, r2
  4057cc:	2300      	movs	r3, #0
  4057ce:	f7ff bb72 	b.w	404eb6 <_dtoa_r+0x3e6>
  4057d2:	2700      	movs	r7, #0
  4057d4:	e6ca      	b.n	40556c <_dtoa_r+0xa9c>
  4057d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4057d8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4057da:	9d05      	ldr	r5, [sp, #20]
  4057dc:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4057e0:	f7ff bb69 	b.w	404eb6 <_dtoa_r+0x3e6>
  4057e4:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
  4057e8:	f04f 0802 	mov.w	r8, #2
  4057ec:	e4d6      	b.n	40519c <_dtoa_r+0x6cc>
  4057ee:	9408      	str	r4, [sp, #32]
  4057f0:	e5a0      	b.n	405334 <_dtoa_r+0x864>
  4057f2:	9b06      	ldr	r3, [sp, #24]
  4057f4:	2b00      	cmp	r3, #0
  4057f6:	f43f aebf 	beq.w	405578 <_dtoa_r+0xaa8>
  4057fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4057fc:	2b00      	cmp	r3, #0
  4057fe:	f77f aee3 	ble.w	4055c8 <_dtoa_r+0xaf8>
  405802:	2200      	movs	r2, #0
  405804:	4b24      	ldr	r3, [pc, #144]	; (405898 <_dtoa_r+0xdc8>)
  405806:	4630      	mov	r0, r6
  405808:	4639      	mov	r1, r7
  40580a:	f001 ffa3 	bl	407754 <__aeabi_dmul>
  40580e:	4606      	mov	r6, r0
  405810:	460f      	mov	r7, r1
  405812:	f108 0001 	add.w	r0, r8, #1
  405816:	f001 ff37 	bl	407688 <__aeabi_i2d>
  40581a:	4632      	mov	r2, r6
  40581c:	463b      	mov	r3, r7
  40581e:	f001 ff99 	bl	407754 <__aeabi_dmul>
  405822:	2200      	movs	r2, #0
  405824:	4b18      	ldr	r3, [pc, #96]	; (405888 <_dtoa_r+0xdb8>)
  405826:	f001 fde3 	bl	4073f0 <__adddf3>
  40582a:	9a04      	ldr	r2, [sp, #16]
  40582c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  405830:	3a01      	subs	r2, #1
  405832:	4604      	mov	r4, r0
  405834:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  405838:	9211      	str	r2, [sp, #68]	; 0x44
  40583a:	e4d0      	b.n	4051de <_dtoa_r+0x70e>
  40583c:	2239      	movs	r2, #57	; 0x39
  40583e:	46b3      	mov	fp, r6
  405840:	9408      	str	r4, [sp, #32]
  405842:	9e05      	ldr	r6, [sp, #20]
  405844:	703a      	strb	r2, [r7, #0]
  405846:	1c7d      	adds	r5, r7, #1
  405848:	f7ff bbf0 	b.w	40502c <_dtoa_r+0x55c>
  40584c:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
  405850:	2000      	movs	r0, #0
  405852:	4912      	ldr	r1, [pc, #72]	; (40589c <_dtoa_r+0xdcc>)
  405854:	f001 fdca 	bl	4073ec <__aeabi_dsub>
  405858:	4632      	mov	r2, r6
  40585a:	463b      	mov	r3, r7
  40585c:	f002 fa0a 	bl	407c74 <__aeabi_dcmpgt>
  405860:	b908      	cbnz	r0, 405866 <_dtoa_r+0xd96>
  405862:	e6b1      	b.n	4055c8 <_dtoa_r+0xaf8>
  405864:	4615      	mov	r5, r2
  405866:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40586a:	2b30      	cmp	r3, #48	; 0x30
  40586c:	f105 32ff 	add.w	r2, r5, #4294967295
  405870:	d0f8      	beq.n	405864 <_dtoa_r+0xd94>
  405872:	e530      	b.n	4052d6 <_dtoa_r+0x806>
  405874:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405876:	9304      	str	r3, [sp, #16]
  405878:	f7ff bae7 	b.w	404e4a <_dtoa_r+0x37a>
  40587c:	f1ba 0f00 	cmp.w	sl, #0
  405880:	f47f ad7a 	bne.w	405378 <_dtoa_r+0x8a8>
  405884:	e661      	b.n	40554a <_dtoa_r+0xa7a>
  405886:	bf00      	nop
  405888:	401c0000 	.word	0x401c0000
  40588c:	40140000 	.word	0x40140000
  405890:	004081c0 	.word	0x004081c0
  405894:	00408288 	.word	0x00408288
  405898:	40240000 	.word	0x40240000
  40589c:	3fe00000 	.word	0x3fe00000
  4058a0:	2b39      	cmp	r3, #57	; 0x39
  4058a2:	f8cd b014 	str.w	fp, [sp, #20]
  4058a6:	46d0      	mov	r8, sl
  4058a8:	f8dd b008 	ldr.w	fp, [sp, #8]
  4058ac:	469a      	mov	sl, r3
  4058ae:	d0c5      	beq.n	40583c <_dtoa_r+0xd6c>
  4058b0:	f1bb 0f00 	cmp.w	fp, #0
  4058b4:	f73f aebc 	bgt.w	405630 <_dtoa_r+0xb60>
  4058b8:	e6bc      	b.n	405634 <_dtoa_r+0xb64>
  4058ba:	f47f aebb 	bne.w	405634 <_dtoa_r+0xb64>
  4058be:	f01a 0f01 	tst.w	sl, #1
  4058c2:	f43f aeb7 	beq.w	405634 <_dtoa_r+0xb64>
  4058c6:	e6af      	b.n	405628 <_dtoa_r+0xb58>
  4058c8:	f04f 0800 	mov.w	r8, #0
  4058cc:	4646      	mov	r6, r8
  4058ce:	e531      	b.n	405334 <_dtoa_r+0x864>
  4058d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4058d2:	2b02      	cmp	r3, #2
  4058d4:	dc21      	bgt.n	40591a <_dtoa_r+0xe4a>
  4058d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4058d8:	e604      	b.n	4054e4 <_dtoa_r+0xa14>
  4058da:	f04f 0802 	mov.w	r8, #2
  4058de:	e45d      	b.n	40519c <_dtoa_r+0x6cc>
  4058e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4058e2:	2b02      	cmp	r3, #2
  4058e4:	dc19      	bgt.n	40591a <_dtoa_r+0xe4a>
  4058e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4058e8:	e563      	b.n	4053b2 <_dtoa_r+0x8e2>
  4058ea:	2400      	movs	r4, #0
  4058ec:	f8c9 4044 	str.w	r4, [r9, #68]	; 0x44
  4058f0:	4621      	mov	r1, r4
  4058f2:	4648      	mov	r0, r9
  4058f4:	f000 fde8 	bl	4064c8 <_Balloc>
  4058f8:	f04f 33ff 	mov.w	r3, #4294967295
  4058fc:	9306      	str	r3, [sp, #24]
  4058fe:	930d      	str	r3, [sp, #52]	; 0x34
  405900:	2301      	movs	r3, #1
  405902:	9007      	str	r0, [sp, #28]
  405904:	9421      	str	r4, [sp, #132]	; 0x84
  405906:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  40590a:	9309      	str	r3, [sp, #36]	; 0x24
  40590c:	f7ff b9e9 	b.w	404ce2 <_dtoa_r+0x212>
  405910:	f43f ab3d 	beq.w	404f8e <_dtoa_r+0x4be>
  405914:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  405918:	e522      	b.n	405360 <_dtoa_r+0x890>
  40591a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40591c:	9306      	str	r3, [sp, #24]
  40591e:	e5e9      	b.n	4054f4 <_dtoa_r+0xa24>
  405920:	2501      	movs	r5, #1
  405922:	f7ff b9a8 	b.w	404c76 <_dtoa_r+0x1a6>
  405926:	bf00      	nop

00405928 <__sflush_r>:
  405928:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  40592c:	b29a      	uxth	r2, r3
  40592e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405932:	460d      	mov	r5, r1
  405934:	0711      	lsls	r1, r2, #28
  405936:	4680      	mov	r8, r0
  405938:	d43c      	bmi.n	4059b4 <__sflush_r+0x8c>
  40593a:	686a      	ldr	r2, [r5, #4]
  40593c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  405940:	2a00      	cmp	r2, #0
  405942:	81ab      	strh	r3, [r5, #12]
  405944:	dd73      	ble.n	405a2e <__sflush_r+0x106>
  405946:	6aac      	ldr	r4, [r5, #40]	; 0x28
  405948:	2c00      	cmp	r4, #0
  40594a:	d04b      	beq.n	4059e4 <__sflush_r+0xbc>
  40594c:	b29b      	uxth	r3, r3
  40594e:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  405952:	2100      	movs	r1, #0
  405954:	b292      	uxth	r2, r2
  405956:	f8d8 6000 	ldr.w	r6, [r8]
  40595a:	f8c8 1000 	str.w	r1, [r8]
  40595e:	2a00      	cmp	r2, #0
  405960:	d069      	beq.n	405a36 <__sflush_r+0x10e>
  405962:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  405964:	075f      	lsls	r7, r3, #29
  405966:	d505      	bpl.n	405974 <__sflush_r+0x4c>
  405968:	6869      	ldr	r1, [r5, #4]
  40596a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40596c:	1a52      	subs	r2, r2, r1
  40596e:	b10b      	cbz	r3, 405974 <__sflush_r+0x4c>
  405970:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  405972:	1ad2      	subs	r2, r2, r3
  405974:	2300      	movs	r3, #0
  405976:	69e9      	ldr	r1, [r5, #28]
  405978:	4640      	mov	r0, r8
  40597a:	47a0      	blx	r4
  40597c:	1c44      	adds	r4, r0, #1
  40597e:	d03c      	beq.n	4059fa <__sflush_r+0xd2>
  405980:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  405984:	692a      	ldr	r2, [r5, #16]
  405986:	602a      	str	r2, [r5, #0]
  405988:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40598c:	2200      	movs	r2, #0
  40598e:	81ab      	strh	r3, [r5, #12]
  405990:	04db      	lsls	r3, r3, #19
  405992:	606a      	str	r2, [r5, #4]
  405994:	d449      	bmi.n	405a2a <__sflush_r+0x102>
  405996:	6b29      	ldr	r1, [r5, #48]	; 0x30
  405998:	f8c8 6000 	str.w	r6, [r8]
  40599c:	b311      	cbz	r1, 4059e4 <__sflush_r+0xbc>
  40599e:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4059a2:	4299      	cmp	r1, r3
  4059a4:	d002      	beq.n	4059ac <__sflush_r+0x84>
  4059a6:	4640      	mov	r0, r8
  4059a8:	f000 f9c0 	bl	405d2c <_free_r>
  4059ac:	2000      	movs	r0, #0
  4059ae:	6328      	str	r0, [r5, #48]	; 0x30
  4059b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059b4:	692e      	ldr	r6, [r5, #16]
  4059b6:	b1ae      	cbz	r6, 4059e4 <__sflush_r+0xbc>
  4059b8:	682c      	ldr	r4, [r5, #0]
  4059ba:	602e      	str	r6, [r5, #0]
  4059bc:	0790      	lsls	r0, r2, #30
  4059be:	bf0c      	ite	eq
  4059c0:	696b      	ldreq	r3, [r5, #20]
  4059c2:	2300      	movne	r3, #0
  4059c4:	1ba4      	subs	r4, r4, r6
  4059c6:	60ab      	str	r3, [r5, #8]
  4059c8:	e00a      	b.n	4059e0 <__sflush_r+0xb8>
  4059ca:	4623      	mov	r3, r4
  4059cc:	4632      	mov	r2, r6
  4059ce:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4059d0:	69e9      	ldr	r1, [r5, #28]
  4059d2:	4640      	mov	r0, r8
  4059d4:	47b8      	blx	r7
  4059d6:	2800      	cmp	r0, #0
  4059d8:	eba4 0400 	sub.w	r4, r4, r0
  4059dc:	4406      	add	r6, r0
  4059de:	dd04      	ble.n	4059ea <__sflush_r+0xc2>
  4059e0:	2c00      	cmp	r4, #0
  4059e2:	dcf2      	bgt.n	4059ca <__sflush_r+0xa2>
  4059e4:	2000      	movs	r0, #0
  4059e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059ea:	89ab      	ldrh	r3, [r5, #12]
  4059ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4059f0:	81ab      	strh	r3, [r5, #12]
  4059f2:	f04f 30ff 	mov.w	r0, #4294967295
  4059f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059fa:	f8d8 2000 	ldr.w	r2, [r8]
  4059fe:	2a1d      	cmp	r2, #29
  405a00:	d8f3      	bhi.n	4059ea <__sflush_r+0xc2>
  405a02:	4b1a      	ldr	r3, [pc, #104]	; (405a6c <__sflush_r+0x144>)
  405a04:	40d3      	lsrs	r3, r2
  405a06:	f003 0301 	and.w	r3, r3, #1
  405a0a:	f083 0401 	eor.w	r4, r3, #1
  405a0e:	2b00      	cmp	r3, #0
  405a10:	d0eb      	beq.n	4059ea <__sflush_r+0xc2>
  405a12:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  405a16:	6929      	ldr	r1, [r5, #16]
  405a18:	6029      	str	r1, [r5, #0]
  405a1a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  405a1e:	04d9      	lsls	r1, r3, #19
  405a20:	606c      	str	r4, [r5, #4]
  405a22:	81ab      	strh	r3, [r5, #12]
  405a24:	d5b7      	bpl.n	405996 <__sflush_r+0x6e>
  405a26:	2a00      	cmp	r2, #0
  405a28:	d1b5      	bne.n	405996 <__sflush_r+0x6e>
  405a2a:	6528      	str	r0, [r5, #80]	; 0x50
  405a2c:	e7b3      	b.n	405996 <__sflush_r+0x6e>
  405a2e:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  405a30:	2a00      	cmp	r2, #0
  405a32:	dc88      	bgt.n	405946 <__sflush_r+0x1e>
  405a34:	e7d6      	b.n	4059e4 <__sflush_r+0xbc>
  405a36:	2301      	movs	r3, #1
  405a38:	69e9      	ldr	r1, [r5, #28]
  405a3a:	4640      	mov	r0, r8
  405a3c:	47a0      	blx	r4
  405a3e:	1c43      	adds	r3, r0, #1
  405a40:	4602      	mov	r2, r0
  405a42:	d002      	beq.n	405a4a <__sflush_r+0x122>
  405a44:	89ab      	ldrh	r3, [r5, #12]
  405a46:	6aac      	ldr	r4, [r5, #40]	; 0x28
  405a48:	e78c      	b.n	405964 <__sflush_r+0x3c>
  405a4a:	f8d8 3000 	ldr.w	r3, [r8]
  405a4e:	2b00      	cmp	r3, #0
  405a50:	d0f8      	beq.n	405a44 <__sflush_r+0x11c>
  405a52:	2b1d      	cmp	r3, #29
  405a54:	d001      	beq.n	405a5a <__sflush_r+0x132>
  405a56:	2b16      	cmp	r3, #22
  405a58:	d102      	bne.n	405a60 <__sflush_r+0x138>
  405a5a:	f8c8 6000 	str.w	r6, [r8]
  405a5e:	e7c1      	b.n	4059e4 <__sflush_r+0xbc>
  405a60:	89ab      	ldrh	r3, [r5, #12]
  405a62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405a66:	81ab      	strh	r3, [r5, #12]
  405a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405a6c:	20400001 	.word	0x20400001

00405a70 <_fflush_r>:
  405a70:	b510      	push	{r4, lr}
  405a72:	4604      	mov	r4, r0
  405a74:	b082      	sub	sp, #8
  405a76:	b108      	cbz	r0, 405a7c <_fflush_r+0xc>
  405a78:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405a7a:	b153      	cbz	r3, 405a92 <_fflush_r+0x22>
  405a7c:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  405a80:	b908      	cbnz	r0, 405a86 <_fflush_r+0x16>
  405a82:	b002      	add	sp, #8
  405a84:	bd10      	pop	{r4, pc}
  405a86:	4620      	mov	r0, r4
  405a88:	b002      	add	sp, #8
  405a8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  405a8e:	f7ff bf4b 	b.w	405928 <__sflush_r>
  405a92:	9101      	str	r1, [sp, #4]
  405a94:	f000 f880 	bl	405b98 <__sinit>
  405a98:	9901      	ldr	r1, [sp, #4]
  405a9a:	e7ef      	b.n	405a7c <_fflush_r+0xc>

00405a9c <_cleanup_r>:
  405a9c:	4901      	ldr	r1, [pc, #4]	; (405aa4 <_cleanup_r+0x8>)
  405a9e:	f000 bbaf 	b.w	406200 <_fwalk_reent>
  405aa2:	bf00      	nop
  405aa4:	004072bd 	.word	0x004072bd

00405aa8 <__sinit.part.1>:
  405aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405aac:	4b35      	ldr	r3, [pc, #212]	; (405b84 <__sinit.part.1+0xdc>)
  405aae:	6845      	ldr	r5, [r0, #4]
  405ab0:	63c3      	str	r3, [r0, #60]	; 0x3c
  405ab2:	2400      	movs	r4, #0
  405ab4:	4607      	mov	r7, r0
  405ab6:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  405aba:	2304      	movs	r3, #4
  405abc:	2103      	movs	r1, #3
  405abe:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  405ac2:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  405ac6:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  405aca:	b083      	sub	sp, #12
  405acc:	602c      	str	r4, [r5, #0]
  405ace:	606c      	str	r4, [r5, #4]
  405ad0:	60ac      	str	r4, [r5, #8]
  405ad2:	666c      	str	r4, [r5, #100]	; 0x64
  405ad4:	81ec      	strh	r4, [r5, #14]
  405ad6:	612c      	str	r4, [r5, #16]
  405ad8:	616c      	str	r4, [r5, #20]
  405ada:	61ac      	str	r4, [r5, #24]
  405adc:	81ab      	strh	r3, [r5, #12]
  405ade:	4621      	mov	r1, r4
  405ae0:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  405ae4:	2208      	movs	r2, #8
  405ae6:	f7fc f9bf 	bl	401e68 <memset>
  405aea:	68be      	ldr	r6, [r7, #8]
  405aec:	f8df b098 	ldr.w	fp, [pc, #152]	; 405b88 <__sinit.part.1+0xe0>
  405af0:	f8df a098 	ldr.w	sl, [pc, #152]	; 405b8c <__sinit.part.1+0xe4>
  405af4:	f8df 9098 	ldr.w	r9, [pc, #152]	; 405b90 <__sinit.part.1+0xe8>
  405af8:	f8df 8098 	ldr.w	r8, [pc, #152]	; 405b94 <__sinit.part.1+0xec>
  405afc:	f8c5 b020 	str.w	fp, [r5, #32]
  405b00:	2301      	movs	r3, #1
  405b02:	2209      	movs	r2, #9
  405b04:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  405b08:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  405b0c:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  405b10:	61ed      	str	r5, [r5, #28]
  405b12:	4621      	mov	r1, r4
  405b14:	81f3      	strh	r3, [r6, #14]
  405b16:	81b2      	strh	r2, [r6, #12]
  405b18:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  405b1c:	6034      	str	r4, [r6, #0]
  405b1e:	6074      	str	r4, [r6, #4]
  405b20:	60b4      	str	r4, [r6, #8]
  405b22:	6674      	str	r4, [r6, #100]	; 0x64
  405b24:	6134      	str	r4, [r6, #16]
  405b26:	6174      	str	r4, [r6, #20]
  405b28:	61b4      	str	r4, [r6, #24]
  405b2a:	2208      	movs	r2, #8
  405b2c:	9301      	str	r3, [sp, #4]
  405b2e:	f7fc f99b 	bl	401e68 <memset>
  405b32:	68fd      	ldr	r5, [r7, #12]
  405b34:	61f6      	str	r6, [r6, #28]
  405b36:	2012      	movs	r0, #18
  405b38:	2202      	movs	r2, #2
  405b3a:	f8c6 b020 	str.w	fp, [r6, #32]
  405b3e:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  405b42:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  405b46:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  405b4a:	4621      	mov	r1, r4
  405b4c:	81a8      	strh	r0, [r5, #12]
  405b4e:	81ea      	strh	r2, [r5, #14]
  405b50:	602c      	str	r4, [r5, #0]
  405b52:	606c      	str	r4, [r5, #4]
  405b54:	60ac      	str	r4, [r5, #8]
  405b56:	666c      	str	r4, [r5, #100]	; 0x64
  405b58:	612c      	str	r4, [r5, #16]
  405b5a:	616c      	str	r4, [r5, #20]
  405b5c:	61ac      	str	r4, [r5, #24]
  405b5e:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  405b62:	2208      	movs	r2, #8
  405b64:	f7fc f980 	bl	401e68 <memset>
  405b68:	9b01      	ldr	r3, [sp, #4]
  405b6a:	61ed      	str	r5, [r5, #28]
  405b6c:	f8c5 b020 	str.w	fp, [r5, #32]
  405b70:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  405b74:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  405b78:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  405b7c:	63bb      	str	r3, [r7, #56]	; 0x38
  405b7e:	b003      	add	sp, #12
  405b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405b84:	00405a9d 	.word	0x00405a9d
  405b88:	00406ec5 	.word	0x00406ec5
  405b8c:	00406ee9 	.word	0x00406ee9
  405b90:	00406f25 	.word	0x00406f25
  405b94:	00406f45 	.word	0x00406f45

00405b98 <__sinit>:
  405b98:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405b9a:	b103      	cbz	r3, 405b9e <__sinit+0x6>
  405b9c:	4770      	bx	lr
  405b9e:	f7ff bf83 	b.w	405aa8 <__sinit.part.1>
  405ba2:	bf00      	nop

00405ba4 <__sfp_lock_acquire>:
  405ba4:	4770      	bx	lr
  405ba6:	bf00      	nop

00405ba8 <__sfp_lock_release>:
  405ba8:	4770      	bx	lr
  405baa:	bf00      	nop

00405bac <__libc_fini_array>:
  405bac:	b538      	push	{r3, r4, r5, lr}
  405bae:	4d07      	ldr	r5, [pc, #28]	; (405bcc <__libc_fini_array+0x20>)
  405bb0:	4c07      	ldr	r4, [pc, #28]	; (405bd0 <__libc_fini_array+0x24>)
  405bb2:	1b2c      	subs	r4, r5, r4
  405bb4:	10a4      	asrs	r4, r4, #2
  405bb6:	d005      	beq.n	405bc4 <__libc_fini_array+0x18>
  405bb8:	3c01      	subs	r4, #1
  405bba:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  405bbe:	4798      	blx	r3
  405bc0:	2c00      	cmp	r4, #0
  405bc2:	d1f9      	bne.n	405bb8 <__libc_fini_array+0xc>
  405bc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  405bc8:	f002 bb82 	b.w	4082d0 <_fini>
  405bcc:	004082e0 	.word	0x004082e0
  405bd0:	004082dc 	.word	0x004082dc

00405bd4 <__fputwc>:
  405bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405bd8:	b082      	sub	sp, #8
  405bda:	4680      	mov	r8, r0
  405bdc:	4689      	mov	r9, r1
  405bde:	4614      	mov	r4, r2
  405be0:	f000 fb3c 	bl	40625c <__locale_mb_cur_max>
  405be4:	2801      	cmp	r0, #1
  405be6:	d033      	beq.n	405c50 <__fputwc+0x7c>
  405be8:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  405bec:	464a      	mov	r2, r9
  405bee:	a901      	add	r1, sp, #4
  405bf0:	4640      	mov	r0, r8
  405bf2:	f001 fa81 	bl	4070f8 <_wcrtomb_r>
  405bf6:	f1b0 3fff 	cmp.w	r0, #4294967295
  405bfa:	4682      	mov	sl, r0
  405bfc:	d021      	beq.n	405c42 <__fputwc+0x6e>
  405bfe:	b388      	cbz	r0, 405c64 <__fputwc+0x90>
  405c00:	f89d 6004 	ldrb.w	r6, [sp, #4]
  405c04:	2500      	movs	r5, #0
  405c06:	e008      	b.n	405c1a <__fputwc+0x46>
  405c08:	6823      	ldr	r3, [r4, #0]
  405c0a:	1c5a      	adds	r2, r3, #1
  405c0c:	6022      	str	r2, [r4, #0]
  405c0e:	701e      	strb	r6, [r3, #0]
  405c10:	3501      	adds	r5, #1
  405c12:	4555      	cmp	r5, sl
  405c14:	d226      	bcs.n	405c64 <__fputwc+0x90>
  405c16:	ab01      	add	r3, sp, #4
  405c18:	5d5e      	ldrb	r6, [r3, r5]
  405c1a:	68a3      	ldr	r3, [r4, #8]
  405c1c:	3b01      	subs	r3, #1
  405c1e:	2b00      	cmp	r3, #0
  405c20:	60a3      	str	r3, [r4, #8]
  405c22:	daf1      	bge.n	405c08 <__fputwc+0x34>
  405c24:	69a7      	ldr	r7, [r4, #24]
  405c26:	42bb      	cmp	r3, r7
  405c28:	4631      	mov	r1, r6
  405c2a:	4622      	mov	r2, r4
  405c2c:	4640      	mov	r0, r8
  405c2e:	db01      	blt.n	405c34 <__fputwc+0x60>
  405c30:	2e0a      	cmp	r6, #10
  405c32:	d1e9      	bne.n	405c08 <__fputwc+0x34>
  405c34:	f001 fa0a 	bl	40704c <__swbuf_r>
  405c38:	1c43      	adds	r3, r0, #1
  405c3a:	d1e9      	bne.n	405c10 <__fputwc+0x3c>
  405c3c:	b002      	add	sp, #8
  405c3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405c42:	89a3      	ldrh	r3, [r4, #12]
  405c44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405c48:	81a3      	strh	r3, [r4, #12]
  405c4a:	b002      	add	sp, #8
  405c4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405c50:	f109 33ff 	add.w	r3, r9, #4294967295
  405c54:	2bfe      	cmp	r3, #254	; 0xfe
  405c56:	d8c7      	bhi.n	405be8 <__fputwc+0x14>
  405c58:	fa5f f689 	uxtb.w	r6, r9
  405c5c:	4682      	mov	sl, r0
  405c5e:	f88d 6004 	strb.w	r6, [sp, #4]
  405c62:	e7cf      	b.n	405c04 <__fputwc+0x30>
  405c64:	4648      	mov	r0, r9
  405c66:	b002      	add	sp, #8
  405c68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00405c6c <_fputwc_r>:
  405c6c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  405c70:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  405c74:	d10a      	bne.n	405c8c <_fputwc_r+0x20>
  405c76:	b410      	push	{r4}
  405c78:	6e54      	ldr	r4, [r2, #100]	; 0x64
  405c7a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  405c7e:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  405c82:	6654      	str	r4, [r2, #100]	; 0x64
  405c84:	8193      	strh	r3, [r2, #12]
  405c86:	bc10      	pop	{r4}
  405c88:	f7ff bfa4 	b.w	405bd4 <__fputwc>
  405c8c:	f7ff bfa2 	b.w	405bd4 <__fputwc>

00405c90 <_malloc_trim_r>:
  405c90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405c92:	4f23      	ldr	r7, [pc, #140]	; (405d20 <_malloc_trim_r+0x90>)
  405c94:	460c      	mov	r4, r1
  405c96:	4606      	mov	r6, r0
  405c98:	f7fc f934 	bl	401f04 <__malloc_lock>
  405c9c:	68bb      	ldr	r3, [r7, #8]
  405c9e:	685d      	ldr	r5, [r3, #4]
  405ca0:	f025 0503 	bic.w	r5, r5, #3
  405ca4:	1b29      	subs	r1, r5, r4
  405ca6:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  405caa:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  405cae:	f021 010f 	bic.w	r1, r1, #15
  405cb2:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405cb6:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405cba:	db07      	blt.n	405ccc <_malloc_trim_r+0x3c>
  405cbc:	2100      	movs	r1, #0
  405cbe:	4630      	mov	r0, r6
  405cc0:	f7fc f924 	bl	401f0c <_sbrk_r>
  405cc4:	68bb      	ldr	r3, [r7, #8]
  405cc6:	442b      	add	r3, r5
  405cc8:	4298      	cmp	r0, r3
  405cca:	d004      	beq.n	405cd6 <_malloc_trim_r+0x46>
  405ccc:	4630      	mov	r0, r6
  405cce:	f7fc f91b 	bl	401f08 <__malloc_unlock>
  405cd2:	2000      	movs	r0, #0
  405cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405cd6:	4261      	negs	r1, r4
  405cd8:	4630      	mov	r0, r6
  405cda:	f7fc f917 	bl	401f0c <_sbrk_r>
  405cde:	3001      	adds	r0, #1
  405ce0:	d00d      	beq.n	405cfe <_malloc_trim_r+0x6e>
  405ce2:	4b10      	ldr	r3, [pc, #64]	; (405d24 <_malloc_trim_r+0x94>)
  405ce4:	68ba      	ldr	r2, [r7, #8]
  405ce6:	6819      	ldr	r1, [r3, #0]
  405ce8:	1b2d      	subs	r5, r5, r4
  405cea:	f045 0501 	orr.w	r5, r5, #1
  405cee:	4630      	mov	r0, r6
  405cf0:	1b09      	subs	r1, r1, r4
  405cf2:	6055      	str	r5, [r2, #4]
  405cf4:	6019      	str	r1, [r3, #0]
  405cf6:	f7fc f907 	bl	401f08 <__malloc_unlock>
  405cfa:	2001      	movs	r0, #1
  405cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405cfe:	2100      	movs	r1, #0
  405d00:	4630      	mov	r0, r6
  405d02:	f7fc f903 	bl	401f0c <_sbrk_r>
  405d06:	68ba      	ldr	r2, [r7, #8]
  405d08:	1a83      	subs	r3, r0, r2
  405d0a:	2b0f      	cmp	r3, #15
  405d0c:	ddde      	ble.n	405ccc <_malloc_trim_r+0x3c>
  405d0e:	4c06      	ldr	r4, [pc, #24]	; (405d28 <_malloc_trim_r+0x98>)
  405d10:	4904      	ldr	r1, [pc, #16]	; (405d24 <_malloc_trim_r+0x94>)
  405d12:	6824      	ldr	r4, [r4, #0]
  405d14:	f043 0301 	orr.w	r3, r3, #1
  405d18:	1b00      	subs	r0, r0, r4
  405d1a:	6053      	str	r3, [r2, #4]
  405d1c:	6008      	str	r0, [r1, #0]
  405d1e:	e7d5      	b.n	405ccc <_malloc_trim_r+0x3c>
  405d20:	2000043c 	.word	0x2000043c
  405d24:	20000b74 	.word	0x20000b74
  405d28:	20000848 	.word	0x20000848

00405d2c <_free_r>:
  405d2c:	2900      	cmp	r1, #0
  405d2e:	d045      	beq.n	405dbc <_free_r+0x90>
  405d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405d34:	460d      	mov	r5, r1
  405d36:	4680      	mov	r8, r0
  405d38:	f7fc f8e4 	bl	401f04 <__malloc_lock>
  405d3c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405d40:	496a      	ldr	r1, [pc, #424]	; (405eec <_free_r+0x1c0>)
  405d42:	f027 0301 	bic.w	r3, r7, #1
  405d46:	f1a5 0408 	sub.w	r4, r5, #8
  405d4a:	18e2      	adds	r2, r4, r3
  405d4c:	688e      	ldr	r6, [r1, #8]
  405d4e:	6850      	ldr	r0, [r2, #4]
  405d50:	42b2      	cmp	r2, r6
  405d52:	f020 0003 	bic.w	r0, r0, #3
  405d56:	d062      	beq.n	405e1e <_free_r+0xf2>
  405d58:	07fe      	lsls	r6, r7, #31
  405d5a:	6050      	str	r0, [r2, #4]
  405d5c:	d40b      	bmi.n	405d76 <_free_r+0x4a>
  405d5e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405d62:	1be4      	subs	r4, r4, r7
  405d64:	f101 0e08 	add.w	lr, r1, #8
  405d68:	68a5      	ldr	r5, [r4, #8]
  405d6a:	4575      	cmp	r5, lr
  405d6c:	443b      	add	r3, r7
  405d6e:	d06f      	beq.n	405e50 <_free_r+0x124>
  405d70:	68e7      	ldr	r7, [r4, #12]
  405d72:	60ef      	str	r7, [r5, #12]
  405d74:	60bd      	str	r5, [r7, #8]
  405d76:	1815      	adds	r5, r2, r0
  405d78:	686d      	ldr	r5, [r5, #4]
  405d7a:	07ed      	lsls	r5, r5, #31
  405d7c:	d542      	bpl.n	405e04 <_free_r+0xd8>
  405d7e:	f043 0201 	orr.w	r2, r3, #1
  405d82:	6062      	str	r2, [r4, #4]
  405d84:	50e3      	str	r3, [r4, r3]
  405d86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405d8a:	d218      	bcs.n	405dbe <_free_r+0x92>
  405d8c:	08db      	lsrs	r3, r3, #3
  405d8e:	1c5a      	adds	r2, r3, #1
  405d90:	684d      	ldr	r5, [r1, #4]
  405d92:	f851 7032 	ldr.w	r7, [r1, r2, lsl #3]
  405d96:	60a7      	str	r7, [r4, #8]
  405d98:	2001      	movs	r0, #1
  405d9a:	109b      	asrs	r3, r3, #2
  405d9c:	fa00 f303 	lsl.w	r3, r0, r3
  405da0:	eb01 00c2 	add.w	r0, r1, r2, lsl #3
  405da4:	431d      	orrs	r5, r3
  405da6:	3808      	subs	r0, #8
  405da8:	60e0      	str	r0, [r4, #12]
  405daa:	604d      	str	r5, [r1, #4]
  405dac:	f841 4032 	str.w	r4, [r1, r2, lsl #3]
  405db0:	60fc      	str	r4, [r7, #12]
  405db2:	4640      	mov	r0, r8
  405db4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405db8:	f7fc b8a6 	b.w	401f08 <__malloc_unlock>
  405dbc:	4770      	bx	lr
  405dbe:	0a5a      	lsrs	r2, r3, #9
  405dc0:	2a04      	cmp	r2, #4
  405dc2:	d853      	bhi.n	405e6c <_free_r+0x140>
  405dc4:	099a      	lsrs	r2, r3, #6
  405dc6:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405dca:	007f      	lsls	r7, r7, #1
  405dcc:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405dd0:	eb01 0087 	add.w	r0, r1, r7, lsl #2
  405dd4:	f851 2027 	ldr.w	r2, [r1, r7, lsl #2]
  405dd8:	4944      	ldr	r1, [pc, #272]	; (405eec <_free_r+0x1c0>)
  405dda:	3808      	subs	r0, #8
  405ddc:	4290      	cmp	r0, r2
  405dde:	d04d      	beq.n	405e7c <_free_r+0x150>
  405de0:	6851      	ldr	r1, [r2, #4]
  405de2:	f021 0103 	bic.w	r1, r1, #3
  405de6:	428b      	cmp	r3, r1
  405de8:	d202      	bcs.n	405df0 <_free_r+0xc4>
  405dea:	6892      	ldr	r2, [r2, #8]
  405dec:	4290      	cmp	r0, r2
  405dee:	d1f7      	bne.n	405de0 <_free_r+0xb4>
  405df0:	68d0      	ldr	r0, [r2, #12]
  405df2:	60e0      	str	r0, [r4, #12]
  405df4:	60a2      	str	r2, [r4, #8]
  405df6:	6084      	str	r4, [r0, #8]
  405df8:	60d4      	str	r4, [r2, #12]
  405dfa:	4640      	mov	r0, r8
  405dfc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405e00:	f7fc b882 	b.w	401f08 <__malloc_unlock>
  405e04:	6895      	ldr	r5, [r2, #8]
  405e06:	4f3a      	ldr	r7, [pc, #232]	; (405ef0 <_free_r+0x1c4>)
  405e08:	42bd      	cmp	r5, r7
  405e0a:	4403      	add	r3, r0
  405e0c:	d03f      	beq.n	405e8e <_free_r+0x162>
  405e0e:	68d0      	ldr	r0, [r2, #12]
  405e10:	60e8      	str	r0, [r5, #12]
  405e12:	f043 0201 	orr.w	r2, r3, #1
  405e16:	6085      	str	r5, [r0, #8]
  405e18:	6062      	str	r2, [r4, #4]
  405e1a:	50e3      	str	r3, [r4, r3]
  405e1c:	e7b3      	b.n	405d86 <_free_r+0x5a>
  405e1e:	07ff      	lsls	r7, r7, #31
  405e20:	4403      	add	r3, r0
  405e22:	d407      	bmi.n	405e34 <_free_r+0x108>
  405e24:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405e28:	1aa4      	subs	r4, r4, r2
  405e2a:	4413      	add	r3, r2
  405e2c:	68a0      	ldr	r0, [r4, #8]
  405e2e:	68e2      	ldr	r2, [r4, #12]
  405e30:	60c2      	str	r2, [r0, #12]
  405e32:	6090      	str	r0, [r2, #8]
  405e34:	4a2f      	ldr	r2, [pc, #188]	; (405ef4 <_free_r+0x1c8>)
  405e36:	6812      	ldr	r2, [r2, #0]
  405e38:	f043 0001 	orr.w	r0, r3, #1
  405e3c:	4293      	cmp	r3, r2
  405e3e:	6060      	str	r0, [r4, #4]
  405e40:	608c      	str	r4, [r1, #8]
  405e42:	d3b6      	bcc.n	405db2 <_free_r+0x86>
  405e44:	4b2c      	ldr	r3, [pc, #176]	; (405ef8 <_free_r+0x1cc>)
  405e46:	4640      	mov	r0, r8
  405e48:	6819      	ldr	r1, [r3, #0]
  405e4a:	f7ff ff21 	bl	405c90 <_malloc_trim_r>
  405e4e:	e7b0      	b.n	405db2 <_free_r+0x86>
  405e50:	1811      	adds	r1, r2, r0
  405e52:	6849      	ldr	r1, [r1, #4]
  405e54:	07c9      	lsls	r1, r1, #31
  405e56:	d444      	bmi.n	405ee2 <_free_r+0x1b6>
  405e58:	6891      	ldr	r1, [r2, #8]
  405e5a:	68d2      	ldr	r2, [r2, #12]
  405e5c:	60ca      	str	r2, [r1, #12]
  405e5e:	4403      	add	r3, r0
  405e60:	f043 0001 	orr.w	r0, r3, #1
  405e64:	6091      	str	r1, [r2, #8]
  405e66:	6060      	str	r0, [r4, #4]
  405e68:	50e3      	str	r3, [r4, r3]
  405e6a:	e7a2      	b.n	405db2 <_free_r+0x86>
  405e6c:	2a14      	cmp	r2, #20
  405e6e:	d817      	bhi.n	405ea0 <_free_r+0x174>
  405e70:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405e74:	007f      	lsls	r7, r7, #1
  405e76:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405e7a:	e7a9      	b.n	405dd0 <_free_r+0xa4>
  405e7c:	10aa      	asrs	r2, r5, #2
  405e7e:	684b      	ldr	r3, [r1, #4]
  405e80:	2501      	movs	r5, #1
  405e82:	fa05 f202 	lsl.w	r2, r5, r2
  405e86:	4313      	orrs	r3, r2
  405e88:	604b      	str	r3, [r1, #4]
  405e8a:	4602      	mov	r2, r0
  405e8c:	e7b1      	b.n	405df2 <_free_r+0xc6>
  405e8e:	f043 0201 	orr.w	r2, r3, #1
  405e92:	614c      	str	r4, [r1, #20]
  405e94:	610c      	str	r4, [r1, #16]
  405e96:	60e5      	str	r5, [r4, #12]
  405e98:	60a5      	str	r5, [r4, #8]
  405e9a:	6062      	str	r2, [r4, #4]
  405e9c:	50e3      	str	r3, [r4, r3]
  405e9e:	e788      	b.n	405db2 <_free_r+0x86>
  405ea0:	2a54      	cmp	r2, #84	; 0x54
  405ea2:	d806      	bhi.n	405eb2 <_free_r+0x186>
  405ea4:	0b1a      	lsrs	r2, r3, #12
  405ea6:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405eaa:	007f      	lsls	r7, r7, #1
  405eac:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405eb0:	e78e      	b.n	405dd0 <_free_r+0xa4>
  405eb2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405eb6:	d806      	bhi.n	405ec6 <_free_r+0x19a>
  405eb8:	0bda      	lsrs	r2, r3, #15
  405eba:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405ebe:	007f      	lsls	r7, r7, #1
  405ec0:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405ec4:	e784      	b.n	405dd0 <_free_r+0xa4>
  405ec6:	f240 5054 	movw	r0, #1364	; 0x554
  405eca:	4282      	cmp	r2, r0
  405ecc:	d806      	bhi.n	405edc <_free_r+0x1b0>
  405ece:	0c9a      	lsrs	r2, r3, #18
  405ed0:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405ed4:	007f      	lsls	r7, r7, #1
  405ed6:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405eda:	e779      	b.n	405dd0 <_free_r+0xa4>
  405edc:	27fe      	movs	r7, #254	; 0xfe
  405ede:	257e      	movs	r5, #126	; 0x7e
  405ee0:	e776      	b.n	405dd0 <_free_r+0xa4>
  405ee2:	f043 0201 	orr.w	r2, r3, #1
  405ee6:	6062      	str	r2, [r4, #4]
  405ee8:	50e3      	str	r3, [r4, r3]
  405eea:	e762      	b.n	405db2 <_free_r+0x86>
  405eec:	2000043c 	.word	0x2000043c
  405ef0:	20000444 	.word	0x20000444
  405ef4:	20000844 	.word	0x20000844
  405ef8:	20000b70 	.word	0x20000b70

00405efc <__sfvwrite_r>:
  405efc:	6893      	ldr	r3, [r2, #8]
  405efe:	2b00      	cmp	r3, #0
  405f00:	d076      	beq.n	405ff0 <__sfvwrite_r+0xf4>
  405f02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405f06:	898b      	ldrh	r3, [r1, #12]
  405f08:	b085      	sub	sp, #20
  405f0a:	460c      	mov	r4, r1
  405f0c:	0719      	lsls	r1, r3, #28
  405f0e:	9001      	str	r0, [sp, #4]
  405f10:	4616      	mov	r6, r2
  405f12:	d529      	bpl.n	405f68 <__sfvwrite_r+0x6c>
  405f14:	6922      	ldr	r2, [r4, #16]
  405f16:	b33a      	cbz	r2, 405f68 <__sfvwrite_r+0x6c>
  405f18:	f003 0802 	and.w	r8, r3, #2
  405f1c:	fa1f f088 	uxth.w	r0, r8
  405f20:	6835      	ldr	r5, [r6, #0]
  405f22:	2800      	cmp	r0, #0
  405f24:	d02f      	beq.n	405f86 <__sfvwrite_r+0x8a>
  405f26:	f04f 0900 	mov.w	r9, #0
  405f2a:	4fb4      	ldr	r7, [pc, #720]	; (4061fc <__sfvwrite_r+0x300>)
  405f2c:	46c8      	mov	r8, r9
  405f2e:	46b2      	mov	sl, r6
  405f30:	45b8      	cmp	r8, r7
  405f32:	4643      	mov	r3, r8
  405f34:	464a      	mov	r2, r9
  405f36:	bf28      	it	cs
  405f38:	463b      	movcs	r3, r7
  405f3a:	9801      	ldr	r0, [sp, #4]
  405f3c:	f1b8 0f00 	cmp.w	r8, #0
  405f40:	d050      	beq.n	405fe4 <__sfvwrite_r+0xe8>
  405f42:	69e1      	ldr	r1, [r4, #28]
  405f44:	6a66      	ldr	r6, [r4, #36]	; 0x24
  405f46:	47b0      	blx	r6
  405f48:	2800      	cmp	r0, #0
  405f4a:	dd71      	ble.n	406030 <__sfvwrite_r+0x134>
  405f4c:	f8da 3008 	ldr.w	r3, [sl, #8]
  405f50:	1a1b      	subs	r3, r3, r0
  405f52:	4481      	add	r9, r0
  405f54:	ebc0 0808 	rsb	r8, r0, r8
  405f58:	f8ca 3008 	str.w	r3, [sl, #8]
  405f5c:	2b00      	cmp	r3, #0
  405f5e:	d1e7      	bne.n	405f30 <__sfvwrite_r+0x34>
  405f60:	2000      	movs	r0, #0
  405f62:	b005      	add	sp, #20
  405f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405f68:	4621      	mov	r1, r4
  405f6a:	9801      	ldr	r0, [sp, #4]
  405f6c:	f7fe fca8 	bl	4048c0 <__swsetup_r>
  405f70:	2800      	cmp	r0, #0
  405f72:	f040 813a 	bne.w	4061ea <__sfvwrite_r+0x2ee>
  405f76:	89a3      	ldrh	r3, [r4, #12]
  405f78:	6835      	ldr	r5, [r6, #0]
  405f7a:	f003 0802 	and.w	r8, r3, #2
  405f7e:	fa1f f088 	uxth.w	r0, r8
  405f82:	2800      	cmp	r0, #0
  405f84:	d1cf      	bne.n	405f26 <__sfvwrite_r+0x2a>
  405f86:	f013 0901 	ands.w	r9, r3, #1
  405f8a:	d15b      	bne.n	406044 <__sfvwrite_r+0x148>
  405f8c:	464f      	mov	r7, r9
  405f8e:	9602      	str	r6, [sp, #8]
  405f90:	b31f      	cbz	r7, 405fda <__sfvwrite_r+0xde>
  405f92:	059a      	lsls	r2, r3, #22
  405f94:	f8d4 8008 	ldr.w	r8, [r4, #8]
  405f98:	d52c      	bpl.n	405ff4 <__sfvwrite_r+0xf8>
  405f9a:	4547      	cmp	r7, r8
  405f9c:	46c2      	mov	sl, r8
  405f9e:	f0c0 80a4 	bcc.w	4060ea <__sfvwrite_r+0x1ee>
  405fa2:	f413 6f90 	tst.w	r3, #1152	; 0x480
  405fa6:	f040 80b1 	bne.w	40610c <__sfvwrite_r+0x210>
  405faa:	6820      	ldr	r0, [r4, #0]
  405fac:	4652      	mov	r2, sl
  405fae:	4649      	mov	r1, r9
  405fb0:	f000 fa26 	bl	406400 <memmove>
  405fb4:	68a0      	ldr	r0, [r4, #8]
  405fb6:	6823      	ldr	r3, [r4, #0]
  405fb8:	ebc8 0000 	rsb	r0, r8, r0
  405fbc:	4453      	add	r3, sl
  405fbe:	60a0      	str	r0, [r4, #8]
  405fc0:	6023      	str	r3, [r4, #0]
  405fc2:	4638      	mov	r0, r7
  405fc4:	9a02      	ldr	r2, [sp, #8]
  405fc6:	6893      	ldr	r3, [r2, #8]
  405fc8:	1a1b      	subs	r3, r3, r0
  405fca:	4481      	add	r9, r0
  405fcc:	1a3f      	subs	r7, r7, r0
  405fce:	6093      	str	r3, [r2, #8]
  405fd0:	2b00      	cmp	r3, #0
  405fd2:	d0c5      	beq.n	405f60 <__sfvwrite_r+0x64>
  405fd4:	89a3      	ldrh	r3, [r4, #12]
  405fd6:	2f00      	cmp	r7, #0
  405fd8:	d1db      	bne.n	405f92 <__sfvwrite_r+0x96>
  405fda:	f8d5 9000 	ldr.w	r9, [r5]
  405fde:	686f      	ldr	r7, [r5, #4]
  405fe0:	3508      	adds	r5, #8
  405fe2:	e7d5      	b.n	405f90 <__sfvwrite_r+0x94>
  405fe4:	f8d5 9000 	ldr.w	r9, [r5]
  405fe8:	f8d5 8004 	ldr.w	r8, [r5, #4]
  405fec:	3508      	adds	r5, #8
  405fee:	e79f      	b.n	405f30 <__sfvwrite_r+0x34>
  405ff0:	2000      	movs	r0, #0
  405ff2:	4770      	bx	lr
  405ff4:	6820      	ldr	r0, [r4, #0]
  405ff6:	6923      	ldr	r3, [r4, #16]
  405ff8:	4298      	cmp	r0, r3
  405ffa:	d803      	bhi.n	406004 <__sfvwrite_r+0x108>
  405ffc:	6961      	ldr	r1, [r4, #20]
  405ffe:	428f      	cmp	r7, r1
  406000:	f080 80b7 	bcs.w	406172 <__sfvwrite_r+0x276>
  406004:	45b8      	cmp	r8, r7
  406006:	bf28      	it	cs
  406008:	46b8      	movcs	r8, r7
  40600a:	4642      	mov	r2, r8
  40600c:	4649      	mov	r1, r9
  40600e:	f000 f9f7 	bl	406400 <memmove>
  406012:	68a3      	ldr	r3, [r4, #8]
  406014:	6822      	ldr	r2, [r4, #0]
  406016:	ebc8 0303 	rsb	r3, r8, r3
  40601a:	4442      	add	r2, r8
  40601c:	60a3      	str	r3, [r4, #8]
  40601e:	6022      	str	r2, [r4, #0]
  406020:	2b00      	cmp	r3, #0
  406022:	d149      	bne.n	4060b8 <__sfvwrite_r+0x1bc>
  406024:	4621      	mov	r1, r4
  406026:	9801      	ldr	r0, [sp, #4]
  406028:	f7ff fd22 	bl	405a70 <_fflush_r>
  40602c:	2800      	cmp	r0, #0
  40602e:	d043      	beq.n	4060b8 <__sfvwrite_r+0x1bc>
  406030:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406034:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  406038:	f04f 30ff 	mov.w	r0, #4294967295
  40603c:	81a3      	strh	r3, [r4, #12]
  40603e:	b005      	add	sp, #20
  406040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406044:	4680      	mov	r8, r0
  406046:	9002      	str	r0, [sp, #8]
  406048:	4682      	mov	sl, r0
  40604a:	4681      	mov	r9, r0
  40604c:	f1b9 0f00 	cmp.w	r9, #0
  406050:	d02a      	beq.n	4060a8 <__sfvwrite_r+0x1ac>
  406052:	9b02      	ldr	r3, [sp, #8]
  406054:	2b00      	cmp	r3, #0
  406056:	d04c      	beq.n	4060f2 <__sfvwrite_r+0x1f6>
  406058:	6820      	ldr	r0, [r4, #0]
  40605a:	6923      	ldr	r3, [r4, #16]
  40605c:	6962      	ldr	r2, [r4, #20]
  40605e:	45c8      	cmp	r8, r9
  406060:	46c3      	mov	fp, r8
  406062:	bf28      	it	cs
  406064:	46cb      	movcs	fp, r9
  406066:	4298      	cmp	r0, r3
  406068:	465f      	mov	r7, fp
  40606a:	d904      	bls.n	406076 <__sfvwrite_r+0x17a>
  40606c:	68a3      	ldr	r3, [r4, #8]
  40606e:	4413      	add	r3, r2
  406070:	459b      	cmp	fp, r3
  406072:	f300 8090 	bgt.w	406196 <__sfvwrite_r+0x29a>
  406076:	4593      	cmp	fp, r2
  406078:	db20      	blt.n	4060bc <__sfvwrite_r+0x1c0>
  40607a:	4613      	mov	r3, r2
  40607c:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40607e:	69e1      	ldr	r1, [r4, #28]
  406080:	9801      	ldr	r0, [sp, #4]
  406082:	4652      	mov	r2, sl
  406084:	47b8      	blx	r7
  406086:	1e07      	subs	r7, r0, #0
  406088:	ddd2      	ble.n	406030 <__sfvwrite_r+0x134>
  40608a:	ebb8 0807 	subs.w	r8, r8, r7
  40608e:	d023      	beq.n	4060d8 <__sfvwrite_r+0x1dc>
  406090:	68b3      	ldr	r3, [r6, #8]
  406092:	1bdb      	subs	r3, r3, r7
  406094:	44ba      	add	sl, r7
  406096:	ebc7 0909 	rsb	r9, r7, r9
  40609a:	60b3      	str	r3, [r6, #8]
  40609c:	2b00      	cmp	r3, #0
  40609e:	f43f af5f 	beq.w	405f60 <__sfvwrite_r+0x64>
  4060a2:	f1b9 0f00 	cmp.w	r9, #0
  4060a6:	d1d4      	bne.n	406052 <__sfvwrite_r+0x156>
  4060a8:	2300      	movs	r3, #0
  4060aa:	f8d5 a000 	ldr.w	sl, [r5]
  4060ae:	f8d5 9004 	ldr.w	r9, [r5, #4]
  4060b2:	9302      	str	r3, [sp, #8]
  4060b4:	3508      	adds	r5, #8
  4060b6:	e7c9      	b.n	40604c <__sfvwrite_r+0x150>
  4060b8:	4640      	mov	r0, r8
  4060ba:	e783      	b.n	405fc4 <__sfvwrite_r+0xc8>
  4060bc:	465a      	mov	r2, fp
  4060be:	4651      	mov	r1, sl
  4060c0:	f000 f99e 	bl	406400 <memmove>
  4060c4:	68a2      	ldr	r2, [r4, #8]
  4060c6:	6823      	ldr	r3, [r4, #0]
  4060c8:	ebcb 0202 	rsb	r2, fp, r2
  4060cc:	445b      	add	r3, fp
  4060ce:	ebb8 0807 	subs.w	r8, r8, r7
  4060d2:	60a2      	str	r2, [r4, #8]
  4060d4:	6023      	str	r3, [r4, #0]
  4060d6:	d1db      	bne.n	406090 <__sfvwrite_r+0x194>
  4060d8:	4621      	mov	r1, r4
  4060da:	9801      	ldr	r0, [sp, #4]
  4060dc:	f7ff fcc8 	bl	405a70 <_fflush_r>
  4060e0:	2800      	cmp	r0, #0
  4060e2:	d1a5      	bne.n	406030 <__sfvwrite_r+0x134>
  4060e4:	f8cd 8008 	str.w	r8, [sp, #8]
  4060e8:	e7d2      	b.n	406090 <__sfvwrite_r+0x194>
  4060ea:	6820      	ldr	r0, [r4, #0]
  4060ec:	46b8      	mov	r8, r7
  4060ee:	46ba      	mov	sl, r7
  4060f0:	e75c      	b.n	405fac <__sfvwrite_r+0xb0>
  4060f2:	464a      	mov	r2, r9
  4060f4:	210a      	movs	r1, #10
  4060f6:	4650      	mov	r0, sl
  4060f8:	f000 f932 	bl	406360 <memchr>
  4060fc:	2800      	cmp	r0, #0
  4060fe:	d06f      	beq.n	4061e0 <__sfvwrite_r+0x2e4>
  406100:	3001      	adds	r0, #1
  406102:	2301      	movs	r3, #1
  406104:	ebca 0800 	rsb	r8, sl, r0
  406108:	9302      	str	r3, [sp, #8]
  40610a:	e7a5      	b.n	406058 <__sfvwrite_r+0x15c>
  40610c:	6962      	ldr	r2, [r4, #20]
  40610e:	6820      	ldr	r0, [r4, #0]
  406110:	6921      	ldr	r1, [r4, #16]
  406112:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  406116:	ebc1 0a00 	rsb	sl, r1, r0
  40611a:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40611e:	f10a 0001 	add.w	r0, sl, #1
  406122:	ea4f 0868 	mov.w	r8, r8, asr #1
  406126:	4438      	add	r0, r7
  406128:	4540      	cmp	r0, r8
  40612a:	4642      	mov	r2, r8
  40612c:	bf84      	itt	hi
  40612e:	4680      	movhi	r8, r0
  406130:	4642      	movhi	r2, r8
  406132:	055b      	lsls	r3, r3, #21
  406134:	d542      	bpl.n	4061bc <__sfvwrite_r+0x2c0>
  406136:	4611      	mov	r1, r2
  406138:	9801      	ldr	r0, [sp, #4]
  40613a:	f7fb fb11 	bl	401760 <_malloc_r>
  40613e:	4683      	mov	fp, r0
  406140:	2800      	cmp	r0, #0
  406142:	d055      	beq.n	4061f0 <__sfvwrite_r+0x2f4>
  406144:	4652      	mov	r2, sl
  406146:	6921      	ldr	r1, [r4, #16]
  406148:	f7fb fdf4 	bl	401d34 <memcpy>
  40614c:	89a3      	ldrh	r3, [r4, #12]
  40614e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  406152:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  406156:	81a3      	strh	r3, [r4, #12]
  406158:	ebca 0308 	rsb	r3, sl, r8
  40615c:	eb0b 000a 	add.w	r0, fp, sl
  406160:	f8c4 8014 	str.w	r8, [r4, #20]
  406164:	f8c4 b010 	str.w	fp, [r4, #16]
  406168:	6020      	str	r0, [r4, #0]
  40616a:	60a3      	str	r3, [r4, #8]
  40616c:	46b8      	mov	r8, r7
  40616e:	46ba      	mov	sl, r7
  406170:	e71c      	b.n	405fac <__sfvwrite_r+0xb0>
  406172:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  406176:	42bb      	cmp	r3, r7
  406178:	bf28      	it	cs
  40617a:	463b      	movcs	r3, r7
  40617c:	464a      	mov	r2, r9
  40617e:	fb93 f3f1 	sdiv	r3, r3, r1
  406182:	9801      	ldr	r0, [sp, #4]
  406184:	6a66      	ldr	r6, [r4, #36]	; 0x24
  406186:	fb01 f303 	mul.w	r3, r1, r3
  40618a:	69e1      	ldr	r1, [r4, #28]
  40618c:	47b0      	blx	r6
  40618e:	2800      	cmp	r0, #0
  406190:	f73f af18 	bgt.w	405fc4 <__sfvwrite_r+0xc8>
  406194:	e74c      	b.n	406030 <__sfvwrite_r+0x134>
  406196:	461a      	mov	r2, r3
  406198:	4651      	mov	r1, sl
  40619a:	9303      	str	r3, [sp, #12]
  40619c:	f000 f930 	bl	406400 <memmove>
  4061a0:	6822      	ldr	r2, [r4, #0]
  4061a2:	9b03      	ldr	r3, [sp, #12]
  4061a4:	9801      	ldr	r0, [sp, #4]
  4061a6:	441a      	add	r2, r3
  4061a8:	6022      	str	r2, [r4, #0]
  4061aa:	4621      	mov	r1, r4
  4061ac:	f7ff fc60 	bl	405a70 <_fflush_r>
  4061b0:	9b03      	ldr	r3, [sp, #12]
  4061b2:	2800      	cmp	r0, #0
  4061b4:	f47f af3c 	bne.w	406030 <__sfvwrite_r+0x134>
  4061b8:	461f      	mov	r7, r3
  4061ba:	e766      	b.n	40608a <__sfvwrite_r+0x18e>
  4061bc:	9801      	ldr	r0, [sp, #4]
  4061be:	f000 fc91 	bl	406ae4 <_realloc_r>
  4061c2:	4683      	mov	fp, r0
  4061c4:	2800      	cmp	r0, #0
  4061c6:	d1c7      	bne.n	406158 <__sfvwrite_r+0x25c>
  4061c8:	9d01      	ldr	r5, [sp, #4]
  4061ca:	6921      	ldr	r1, [r4, #16]
  4061cc:	4628      	mov	r0, r5
  4061ce:	f7ff fdad 	bl	405d2c <_free_r>
  4061d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4061d6:	220c      	movs	r2, #12
  4061d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4061dc:	602a      	str	r2, [r5, #0]
  4061de:	e729      	b.n	406034 <__sfvwrite_r+0x138>
  4061e0:	2301      	movs	r3, #1
  4061e2:	f109 0801 	add.w	r8, r9, #1
  4061e6:	9302      	str	r3, [sp, #8]
  4061e8:	e736      	b.n	406058 <__sfvwrite_r+0x15c>
  4061ea:	f04f 30ff 	mov.w	r0, #4294967295
  4061ee:	e6b8      	b.n	405f62 <__sfvwrite_r+0x66>
  4061f0:	9a01      	ldr	r2, [sp, #4]
  4061f2:	230c      	movs	r3, #12
  4061f4:	6013      	str	r3, [r2, #0]
  4061f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4061fa:	e71b      	b.n	406034 <__sfvwrite_r+0x138>
  4061fc:	7ffffc00 	.word	0x7ffffc00

00406200 <_fwalk_reent>:
  406200:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406204:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  406208:	d01f      	beq.n	40624a <_fwalk_reent+0x4a>
  40620a:	4688      	mov	r8, r1
  40620c:	4606      	mov	r6, r0
  40620e:	f04f 0900 	mov.w	r9, #0
  406212:	687d      	ldr	r5, [r7, #4]
  406214:	68bc      	ldr	r4, [r7, #8]
  406216:	3d01      	subs	r5, #1
  406218:	d411      	bmi.n	40623e <_fwalk_reent+0x3e>
  40621a:	89a3      	ldrh	r3, [r4, #12]
  40621c:	2b01      	cmp	r3, #1
  40621e:	f105 35ff 	add.w	r5, r5, #4294967295
  406222:	d908      	bls.n	406236 <_fwalk_reent+0x36>
  406224:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  406228:	3301      	adds	r3, #1
  40622a:	4621      	mov	r1, r4
  40622c:	4630      	mov	r0, r6
  40622e:	d002      	beq.n	406236 <_fwalk_reent+0x36>
  406230:	47c0      	blx	r8
  406232:	ea49 0900 	orr.w	r9, r9, r0
  406236:	1c6b      	adds	r3, r5, #1
  406238:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40623c:	d1ed      	bne.n	40621a <_fwalk_reent+0x1a>
  40623e:	683f      	ldr	r7, [r7, #0]
  406240:	2f00      	cmp	r7, #0
  406242:	d1e6      	bne.n	406212 <_fwalk_reent+0x12>
  406244:	4648      	mov	r0, r9
  406246:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40624a:	46b9      	mov	r9, r7
  40624c:	4648      	mov	r0, r9
  40624e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406252:	bf00      	nop

00406254 <__locale_charset>:
  406254:	4800      	ldr	r0, [pc, #0]	; (406258 <__locale_charset+0x4>)
  406256:	4770      	bx	lr
  406258:	20000884 	.word	0x20000884

0040625c <__locale_mb_cur_max>:
  40625c:	4b01      	ldr	r3, [pc, #4]	; (406264 <__locale_mb_cur_max+0x8>)
  40625e:	6818      	ldr	r0, [r3, #0]
  406260:	4770      	bx	lr
  406262:	bf00      	nop
  406264:	200008a4 	.word	0x200008a4

00406268 <_localeconv_r>:
  406268:	4800      	ldr	r0, [pc, #0]	; (40626c <_localeconv_r+0x4>)
  40626a:	4770      	bx	lr
  40626c:	2000084c 	.word	0x2000084c

00406270 <__swhatbuf_r>:
  406270:	b570      	push	{r4, r5, r6, lr}
  406272:	460d      	mov	r5, r1
  406274:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406278:	2900      	cmp	r1, #0
  40627a:	b090      	sub	sp, #64	; 0x40
  40627c:	4614      	mov	r4, r2
  40627e:	461e      	mov	r6, r3
  406280:	db14      	blt.n	4062ac <__swhatbuf_r+0x3c>
  406282:	aa01      	add	r2, sp, #4
  406284:	f001 f85c 	bl	407340 <_fstat_r>
  406288:	2800      	cmp	r0, #0
  40628a:	db0f      	blt.n	4062ac <__swhatbuf_r+0x3c>
  40628c:	9a02      	ldr	r2, [sp, #8]
  40628e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  406292:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  406296:	fab2 f282 	clz	r2, r2
  40629a:	0952      	lsrs	r2, r2, #5
  40629c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4062a0:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4062a4:	6032      	str	r2, [r6, #0]
  4062a6:	6023      	str	r3, [r4, #0]
  4062a8:	b010      	add	sp, #64	; 0x40
  4062aa:	bd70      	pop	{r4, r5, r6, pc}
  4062ac:	89a8      	ldrh	r0, [r5, #12]
  4062ae:	f000 0080 	and.w	r0, r0, #128	; 0x80
  4062b2:	b282      	uxth	r2, r0
  4062b4:	2000      	movs	r0, #0
  4062b6:	6030      	str	r0, [r6, #0]
  4062b8:	b11a      	cbz	r2, 4062c2 <__swhatbuf_r+0x52>
  4062ba:	2340      	movs	r3, #64	; 0x40
  4062bc:	6023      	str	r3, [r4, #0]
  4062be:	b010      	add	sp, #64	; 0x40
  4062c0:	bd70      	pop	{r4, r5, r6, pc}
  4062c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4062c6:	4610      	mov	r0, r2
  4062c8:	6023      	str	r3, [r4, #0]
  4062ca:	b010      	add	sp, #64	; 0x40
  4062cc:	bd70      	pop	{r4, r5, r6, pc}
  4062ce:	bf00      	nop

004062d0 <__smakebuf_r>:
  4062d0:	898a      	ldrh	r2, [r1, #12]
  4062d2:	0792      	lsls	r2, r2, #30
  4062d4:	460b      	mov	r3, r1
  4062d6:	d506      	bpl.n	4062e6 <__smakebuf_r+0x16>
  4062d8:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4062dc:	2101      	movs	r1, #1
  4062de:	601a      	str	r2, [r3, #0]
  4062e0:	611a      	str	r2, [r3, #16]
  4062e2:	6159      	str	r1, [r3, #20]
  4062e4:	4770      	bx	lr
  4062e6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4062e8:	b083      	sub	sp, #12
  4062ea:	ab01      	add	r3, sp, #4
  4062ec:	466a      	mov	r2, sp
  4062ee:	460c      	mov	r4, r1
  4062f0:	4605      	mov	r5, r0
  4062f2:	f7ff ffbd 	bl	406270 <__swhatbuf_r>
  4062f6:	9900      	ldr	r1, [sp, #0]
  4062f8:	4606      	mov	r6, r0
  4062fa:	4628      	mov	r0, r5
  4062fc:	f7fb fa30 	bl	401760 <_malloc_r>
  406300:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406304:	b1d0      	cbz	r0, 40633c <__smakebuf_r+0x6c>
  406306:	9a01      	ldr	r2, [sp, #4]
  406308:	4f12      	ldr	r7, [pc, #72]	; (406354 <__smakebuf_r+0x84>)
  40630a:	9900      	ldr	r1, [sp, #0]
  40630c:	63ef      	str	r7, [r5, #60]	; 0x3c
  40630e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  406312:	81a3      	strh	r3, [r4, #12]
  406314:	6020      	str	r0, [r4, #0]
  406316:	6120      	str	r0, [r4, #16]
  406318:	6161      	str	r1, [r4, #20]
  40631a:	b91a      	cbnz	r2, 406324 <__smakebuf_r+0x54>
  40631c:	4333      	orrs	r3, r6
  40631e:	81a3      	strh	r3, [r4, #12]
  406320:	b003      	add	sp, #12
  406322:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406324:	4628      	mov	r0, r5
  406326:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40632a:	f001 f81d 	bl	407368 <_isatty_r>
  40632e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406332:	2800      	cmp	r0, #0
  406334:	d0f2      	beq.n	40631c <__smakebuf_r+0x4c>
  406336:	f043 0301 	orr.w	r3, r3, #1
  40633a:	e7ef      	b.n	40631c <__smakebuf_r+0x4c>
  40633c:	059a      	lsls	r2, r3, #22
  40633e:	d4ef      	bmi.n	406320 <__smakebuf_r+0x50>
  406340:	f104 0243 	add.w	r2, r4, #67	; 0x43
  406344:	f043 0302 	orr.w	r3, r3, #2
  406348:	2101      	movs	r1, #1
  40634a:	81a3      	strh	r3, [r4, #12]
  40634c:	6022      	str	r2, [r4, #0]
  40634e:	6122      	str	r2, [r4, #16]
  406350:	6161      	str	r1, [r4, #20]
  406352:	e7e5      	b.n	406320 <__smakebuf_r+0x50>
  406354:	00405a9d 	.word	0x00405a9d
	...

00406360 <memchr>:
  406360:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406364:	2a10      	cmp	r2, #16
  406366:	db2b      	blt.n	4063c0 <memchr+0x60>
  406368:	f010 0f07 	tst.w	r0, #7
  40636c:	d008      	beq.n	406380 <memchr+0x20>
  40636e:	f810 3b01 	ldrb.w	r3, [r0], #1
  406372:	3a01      	subs	r2, #1
  406374:	428b      	cmp	r3, r1
  406376:	d02d      	beq.n	4063d4 <memchr+0x74>
  406378:	f010 0f07 	tst.w	r0, #7
  40637c:	b342      	cbz	r2, 4063d0 <memchr+0x70>
  40637e:	d1f6      	bne.n	40636e <memchr+0xe>
  406380:	b4f0      	push	{r4, r5, r6, r7}
  406382:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  406386:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40638a:	f022 0407 	bic.w	r4, r2, #7
  40638e:	f07f 0700 	mvns.w	r7, #0
  406392:	2300      	movs	r3, #0
  406394:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  406398:	3c08      	subs	r4, #8
  40639a:	ea85 0501 	eor.w	r5, r5, r1
  40639e:	ea86 0601 	eor.w	r6, r6, r1
  4063a2:	fa85 f547 	uadd8	r5, r5, r7
  4063a6:	faa3 f587 	sel	r5, r3, r7
  4063aa:	fa86 f647 	uadd8	r6, r6, r7
  4063ae:	faa5 f687 	sel	r6, r5, r7
  4063b2:	b98e      	cbnz	r6, 4063d8 <memchr+0x78>
  4063b4:	d1ee      	bne.n	406394 <memchr+0x34>
  4063b6:	bcf0      	pop	{r4, r5, r6, r7}
  4063b8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4063bc:	f002 0207 	and.w	r2, r2, #7
  4063c0:	b132      	cbz	r2, 4063d0 <memchr+0x70>
  4063c2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4063c6:	3a01      	subs	r2, #1
  4063c8:	ea83 0301 	eor.w	r3, r3, r1
  4063cc:	b113      	cbz	r3, 4063d4 <memchr+0x74>
  4063ce:	d1f8      	bne.n	4063c2 <memchr+0x62>
  4063d0:	2000      	movs	r0, #0
  4063d2:	4770      	bx	lr
  4063d4:	3801      	subs	r0, #1
  4063d6:	4770      	bx	lr
  4063d8:	2d00      	cmp	r5, #0
  4063da:	bf06      	itte	eq
  4063dc:	4635      	moveq	r5, r6
  4063de:	3803      	subeq	r0, #3
  4063e0:	3807      	subne	r0, #7
  4063e2:	f015 0f01 	tst.w	r5, #1
  4063e6:	d107      	bne.n	4063f8 <memchr+0x98>
  4063e8:	3001      	adds	r0, #1
  4063ea:	f415 7f80 	tst.w	r5, #256	; 0x100
  4063ee:	bf02      	ittt	eq
  4063f0:	3001      	addeq	r0, #1
  4063f2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4063f6:	3001      	addeq	r0, #1
  4063f8:	bcf0      	pop	{r4, r5, r6, r7}
  4063fa:	3801      	subs	r0, #1
  4063fc:	4770      	bx	lr
  4063fe:	bf00      	nop

00406400 <memmove>:
  406400:	4288      	cmp	r0, r1
  406402:	b5f0      	push	{r4, r5, r6, r7, lr}
  406404:	d90d      	bls.n	406422 <memmove+0x22>
  406406:	188b      	adds	r3, r1, r2
  406408:	4298      	cmp	r0, r3
  40640a:	d20a      	bcs.n	406422 <memmove+0x22>
  40640c:	1881      	adds	r1, r0, r2
  40640e:	2a00      	cmp	r2, #0
  406410:	d051      	beq.n	4064b6 <memmove+0xb6>
  406412:	1a9a      	subs	r2, r3, r2
  406414:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406418:	f801 4d01 	strb.w	r4, [r1, #-1]!
  40641c:	4293      	cmp	r3, r2
  40641e:	d1f9      	bne.n	406414 <memmove+0x14>
  406420:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406422:	2a0f      	cmp	r2, #15
  406424:	d948      	bls.n	4064b8 <memmove+0xb8>
  406426:	ea41 0300 	orr.w	r3, r1, r0
  40642a:	079b      	lsls	r3, r3, #30
  40642c:	d146      	bne.n	4064bc <memmove+0xbc>
  40642e:	f100 0410 	add.w	r4, r0, #16
  406432:	f101 0310 	add.w	r3, r1, #16
  406436:	4615      	mov	r5, r2
  406438:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40643c:	f844 6c10 	str.w	r6, [r4, #-16]
  406440:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  406444:	f844 6c0c 	str.w	r6, [r4, #-12]
  406448:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40644c:	f844 6c08 	str.w	r6, [r4, #-8]
  406450:	3d10      	subs	r5, #16
  406452:	f853 6c04 	ldr.w	r6, [r3, #-4]
  406456:	f844 6c04 	str.w	r6, [r4, #-4]
  40645a:	2d0f      	cmp	r5, #15
  40645c:	f103 0310 	add.w	r3, r3, #16
  406460:	f104 0410 	add.w	r4, r4, #16
  406464:	d8e8      	bhi.n	406438 <memmove+0x38>
  406466:	f1a2 0310 	sub.w	r3, r2, #16
  40646a:	f023 030f 	bic.w	r3, r3, #15
  40646e:	f002 0e0f 	and.w	lr, r2, #15
  406472:	3310      	adds	r3, #16
  406474:	f1be 0f03 	cmp.w	lr, #3
  406478:	4419      	add	r1, r3
  40647a:	4403      	add	r3, r0
  40647c:	d921      	bls.n	4064c2 <memmove+0xc2>
  40647e:	1f1e      	subs	r6, r3, #4
  406480:	460d      	mov	r5, r1
  406482:	4674      	mov	r4, lr
  406484:	3c04      	subs	r4, #4
  406486:	f855 7b04 	ldr.w	r7, [r5], #4
  40648a:	f846 7f04 	str.w	r7, [r6, #4]!
  40648e:	2c03      	cmp	r4, #3
  406490:	d8f8      	bhi.n	406484 <memmove+0x84>
  406492:	f1ae 0404 	sub.w	r4, lr, #4
  406496:	f024 0403 	bic.w	r4, r4, #3
  40649a:	3404      	adds	r4, #4
  40649c:	4423      	add	r3, r4
  40649e:	4421      	add	r1, r4
  4064a0:	f002 0203 	and.w	r2, r2, #3
  4064a4:	b162      	cbz	r2, 4064c0 <memmove+0xc0>
  4064a6:	3b01      	subs	r3, #1
  4064a8:	440a      	add	r2, r1
  4064aa:	f811 4b01 	ldrb.w	r4, [r1], #1
  4064ae:	f803 4f01 	strb.w	r4, [r3, #1]!
  4064b2:	428a      	cmp	r2, r1
  4064b4:	d1f9      	bne.n	4064aa <memmove+0xaa>
  4064b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4064b8:	4603      	mov	r3, r0
  4064ba:	e7f3      	b.n	4064a4 <memmove+0xa4>
  4064bc:	4603      	mov	r3, r0
  4064be:	e7f2      	b.n	4064a6 <memmove+0xa6>
  4064c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4064c2:	4672      	mov	r2, lr
  4064c4:	e7ee      	b.n	4064a4 <memmove+0xa4>
  4064c6:	bf00      	nop

004064c8 <_Balloc>:
  4064c8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4064ca:	b570      	push	{r4, r5, r6, lr}
  4064cc:	4605      	mov	r5, r0
  4064ce:	460c      	mov	r4, r1
  4064d0:	b14b      	cbz	r3, 4064e6 <_Balloc+0x1e>
  4064d2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4064d6:	b180      	cbz	r0, 4064fa <_Balloc+0x32>
  4064d8:	6802      	ldr	r2, [r0, #0]
  4064da:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4064de:	2300      	movs	r3, #0
  4064e0:	6103      	str	r3, [r0, #16]
  4064e2:	60c3      	str	r3, [r0, #12]
  4064e4:	bd70      	pop	{r4, r5, r6, pc}
  4064e6:	2221      	movs	r2, #33	; 0x21
  4064e8:	2104      	movs	r1, #4
  4064ea:	f000 fea5 	bl	407238 <_calloc_r>
  4064ee:	64e8      	str	r0, [r5, #76]	; 0x4c
  4064f0:	4603      	mov	r3, r0
  4064f2:	2800      	cmp	r0, #0
  4064f4:	d1ed      	bne.n	4064d2 <_Balloc+0xa>
  4064f6:	2000      	movs	r0, #0
  4064f8:	bd70      	pop	{r4, r5, r6, pc}
  4064fa:	2101      	movs	r1, #1
  4064fc:	fa01 f604 	lsl.w	r6, r1, r4
  406500:	1d72      	adds	r2, r6, #5
  406502:	4628      	mov	r0, r5
  406504:	0092      	lsls	r2, r2, #2
  406506:	f000 fe97 	bl	407238 <_calloc_r>
  40650a:	2800      	cmp	r0, #0
  40650c:	d0f3      	beq.n	4064f6 <_Balloc+0x2e>
  40650e:	6044      	str	r4, [r0, #4]
  406510:	6086      	str	r6, [r0, #8]
  406512:	e7e4      	b.n	4064de <_Balloc+0x16>

00406514 <_Bfree>:
  406514:	b131      	cbz	r1, 406524 <_Bfree+0x10>
  406516:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406518:	684a      	ldr	r2, [r1, #4]
  40651a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  40651e:	6008      	str	r0, [r1, #0]
  406520:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  406524:	4770      	bx	lr
  406526:	bf00      	nop

00406528 <__multadd>:
  406528:	b5f0      	push	{r4, r5, r6, r7, lr}
  40652a:	690c      	ldr	r4, [r1, #16]
  40652c:	b083      	sub	sp, #12
  40652e:	460d      	mov	r5, r1
  406530:	4606      	mov	r6, r0
  406532:	f101 0e14 	add.w	lr, r1, #20
  406536:	2700      	movs	r7, #0
  406538:	f8de 0000 	ldr.w	r0, [lr]
  40653c:	b281      	uxth	r1, r0
  40653e:	fb02 3101 	mla	r1, r2, r1, r3
  406542:	0c0b      	lsrs	r3, r1, #16
  406544:	0c00      	lsrs	r0, r0, #16
  406546:	fb02 3300 	mla	r3, r2, r0, r3
  40654a:	b289      	uxth	r1, r1
  40654c:	3701      	adds	r7, #1
  40654e:	eb01 4103 	add.w	r1, r1, r3, lsl #16
  406552:	42bc      	cmp	r4, r7
  406554:	f84e 1b04 	str.w	r1, [lr], #4
  406558:	ea4f 4313 	mov.w	r3, r3, lsr #16
  40655c:	dcec      	bgt.n	406538 <__multadd+0x10>
  40655e:	b13b      	cbz	r3, 406570 <__multadd+0x48>
  406560:	68aa      	ldr	r2, [r5, #8]
  406562:	4294      	cmp	r4, r2
  406564:	da07      	bge.n	406576 <__multadd+0x4e>
  406566:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40656a:	3401      	adds	r4, #1
  40656c:	6153      	str	r3, [r2, #20]
  40656e:	612c      	str	r4, [r5, #16]
  406570:	4628      	mov	r0, r5
  406572:	b003      	add	sp, #12
  406574:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406576:	6869      	ldr	r1, [r5, #4]
  406578:	9301      	str	r3, [sp, #4]
  40657a:	3101      	adds	r1, #1
  40657c:	4630      	mov	r0, r6
  40657e:	f7ff ffa3 	bl	4064c8 <_Balloc>
  406582:	692a      	ldr	r2, [r5, #16]
  406584:	3202      	adds	r2, #2
  406586:	f105 010c 	add.w	r1, r5, #12
  40658a:	4607      	mov	r7, r0
  40658c:	0092      	lsls	r2, r2, #2
  40658e:	300c      	adds	r0, #12
  406590:	f7fb fbd0 	bl	401d34 <memcpy>
  406594:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  406596:	6869      	ldr	r1, [r5, #4]
  406598:	9b01      	ldr	r3, [sp, #4]
  40659a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  40659e:	6028      	str	r0, [r5, #0]
  4065a0:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4065a4:	463d      	mov	r5, r7
  4065a6:	e7de      	b.n	406566 <__multadd+0x3e>

004065a8 <__hi0bits>:
  4065a8:	0c03      	lsrs	r3, r0, #16
  4065aa:	041b      	lsls	r3, r3, #16
  4065ac:	b9b3      	cbnz	r3, 4065dc <__hi0bits+0x34>
  4065ae:	0400      	lsls	r0, r0, #16
  4065b0:	2310      	movs	r3, #16
  4065b2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
  4065b6:	bf04      	itt	eq
  4065b8:	0200      	lsleq	r0, r0, #8
  4065ba:	3308      	addeq	r3, #8
  4065bc:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
  4065c0:	bf04      	itt	eq
  4065c2:	0100      	lsleq	r0, r0, #4
  4065c4:	3304      	addeq	r3, #4
  4065c6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
  4065ca:	bf04      	itt	eq
  4065cc:	0080      	lsleq	r0, r0, #2
  4065ce:	3302      	addeq	r3, #2
  4065d0:	2800      	cmp	r0, #0
  4065d2:	db07      	blt.n	4065e4 <__hi0bits+0x3c>
  4065d4:	0042      	lsls	r2, r0, #1
  4065d6:	d403      	bmi.n	4065e0 <__hi0bits+0x38>
  4065d8:	2020      	movs	r0, #32
  4065da:	4770      	bx	lr
  4065dc:	2300      	movs	r3, #0
  4065de:	e7e8      	b.n	4065b2 <__hi0bits+0xa>
  4065e0:	1c58      	adds	r0, r3, #1
  4065e2:	4770      	bx	lr
  4065e4:	4618      	mov	r0, r3
  4065e6:	4770      	bx	lr

004065e8 <__lo0bits>:
  4065e8:	6803      	ldr	r3, [r0, #0]
  4065ea:	f013 0207 	ands.w	r2, r3, #7
  4065ee:	d007      	beq.n	406600 <__lo0bits+0x18>
  4065f0:	07d9      	lsls	r1, r3, #31
  4065f2:	d420      	bmi.n	406636 <__lo0bits+0x4e>
  4065f4:	079a      	lsls	r2, r3, #30
  4065f6:	d420      	bmi.n	40663a <__lo0bits+0x52>
  4065f8:	089b      	lsrs	r3, r3, #2
  4065fa:	6003      	str	r3, [r0, #0]
  4065fc:	2002      	movs	r0, #2
  4065fe:	4770      	bx	lr
  406600:	b299      	uxth	r1, r3
  406602:	b909      	cbnz	r1, 406608 <__lo0bits+0x20>
  406604:	0c1b      	lsrs	r3, r3, #16
  406606:	2210      	movs	r2, #16
  406608:	f013 0fff 	tst.w	r3, #255	; 0xff
  40660c:	bf04      	itt	eq
  40660e:	0a1b      	lsreq	r3, r3, #8
  406610:	3208      	addeq	r2, #8
  406612:	0719      	lsls	r1, r3, #28
  406614:	bf04      	itt	eq
  406616:	091b      	lsreq	r3, r3, #4
  406618:	3204      	addeq	r2, #4
  40661a:	0799      	lsls	r1, r3, #30
  40661c:	bf04      	itt	eq
  40661e:	089b      	lsreq	r3, r3, #2
  406620:	3202      	addeq	r2, #2
  406622:	07d9      	lsls	r1, r3, #31
  406624:	d404      	bmi.n	406630 <__lo0bits+0x48>
  406626:	085b      	lsrs	r3, r3, #1
  406628:	d101      	bne.n	40662e <__lo0bits+0x46>
  40662a:	2020      	movs	r0, #32
  40662c:	4770      	bx	lr
  40662e:	3201      	adds	r2, #1
  406630:	6003      	str	r3, [r0, #0]
  406632:	4610      	mov	r0, r2
  406634:	4770      	bx	lr
  406636:	2000      	movs	r0, #0
  406638:	4770      	bx	lr
  40663a:	085b      	lsrs	r3, r3, #1
  40663c:	6003      	str	r3, [r0, #0]
  40663e:	2001      	movs	r0, #1
  406640:	4770      	bx	lr
  406642:	bf00      	nop

00406644 <__i2b>:
  406644:	b510      	push	{r4, lr}
  406646:	460c      	mov	r4, r1
  406648:	2101      	movs	r1, #1
  40664a:	f7ff ff3d 	bl	4064c8 <_Balloc>
  40664e:	2201      	movs	r2, #1
  406650:	6144      	str	r4, [r0, #20]
  406652:	6102      	str	r2, [r0, #16]
  406654:	bd10      	pop	{r4, pc}
  406656:	bf00      	nop

00406658 <__multiply>:
  406658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40665c:	690d      	ldr	r5, [r1, #16]
  40665e:	6917      	ldr	r7, [r2, #16]
  406660:	42bd      	cmp	r5, r7
  406662:	b083      	sub	sp, #12
  406664:	460c      	mov	r4, r1
  406666:	4616      	mov	r6, r2
  406668:	da04      	bge.n	406674 <__multiply+0x1c>
  40666a:	462a      	mov	r2, r5
  40666c:	4634      	mov	r4, r6
  40666e:	463d      	mov	r5, r7
  406670:	460e      	mov	r6, r1
  406672:	4617      	mov	r7, r2
  406674:	68a3      	ldr	r3, [r4, #8]
  406676:	6861      	ldr	r1, [r4, #4]
  406678:	eb05 0807 	add.w	r8, r5, r7
  40667c:	4598      	cmp	r8, r3
  40667e:	bfc8      	it	gt
  406680:	3101      	addgt	r1, #1
  406682:	f7ff ff21 	bl	4064c8 <_Balloc>
  406686:	f100 0c14 	add.w	ip, r0, #20
  40668a:	eb0c 0988 	add.w	r9, ip, r8, lsl #2
  40668e:	45cc      	cmp	ip, r9
  406690:	9000      	str	r0, [sp, #0]
  406692:	d205      	bcs.n	4066a0 <__multiply+0x48>
  406694:	4663      	mov	r3, ip
  406696:	2100      	movs	r1, #0
  406698:	f843 1b04 	str.w	r1, [r3], #4
  40669c:	4599      	cmp	r9, r3
  40669e:	d8fb      	bhi.n	406698 <__multiply+0x40>
  4066a0:	f106 0214 	add.w	r2, r6, #20
  4066a4:	eb02 0a87 	add.w	sl, r2, r7, lsl #2
  4066a8:	f104 0314 	add.w	r3, r4, #20
  4066ac:	4552      	cmp	r2, sl
  4066ae:	eb03 0e85 	add.w	lr, r3, r5, lsl #2
  4066b2:	d254      	bcs.n	40675e <__multiply+0x106>
  4066b4:	f8cd 9004 	str.w	r9, [sp, #4]
  4066b8:	4699      	mov	r9, r3
  4066ba:	f852 3b04 	ldr.w	r3, [r2], #4
  4066be:	fa1f fb83 	uxth.w	fp, r3
  4066c2:	f1bb 0f00 	cmp.w	fp, #0
  4066c6:	d020      	beq.n	40670a <__multiply+0xb2>
  4066c8:	2000      	movs	r0, #0
  4066ca:	464f      	mov	r7, r9
  4066cc:	4666      	mov	r6, ip
  4066ce:	4605      	mov	r5, r0
  4066d0:	e000      	b.n	4066d4 <__multiply+0x7c>
  4066d2:	461e      	mov	r6, r3
  4066d4:	f857 4b04 	ldr.w	r4, [r7], #4
  4066d8:	6830      	ldr	r0, [r6, #0]
  4066da:	b2a1      	uxth	r1, r4
  4066dc:	b283      	uxth	r3, r0
  4066de:	fb0b 3101 	mla	r1, fp, r1, r3
  4066e2:	0c24      	lsrs	r4, r4, #16
  4066e4:	0c00      	lsrs	r0, r0, #16
  4066e6:	194b      	adds	r3, r1, r5
  4066e8:	fb0b 0004 	mla	r0, fp, r4, r0
  4066ec:	eb00 4013 	add.w	r0, r0, r3, lsr #16
  4066f0:	b299      	uxth	r1, r3
  4066f2:	4633      	mov	r3, r6
  4066f4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
  4066f8:	45be      	cmp	lr, r7
  4066fa:	ea4f 4510 	mov.w	r5, r0, lsr #16
  4066fe:	f843 1b04 	str.w	r1, [r3], #4
  406702:	d8e6      	bhi.n	4066d2 <__multiply+0x7a>
  406704:	6075      	str	r5, [r6, #4]
  406706:	f852 3c04 	ldr.w	r3, [r2, #-4]
  40670a:	ea5f 4b13 	movs.w	fp, r3, lsr #16
  40670e:	d020      	beq.n	406752 <__multiply+0xfa>
  406710:	f8dc 3000 	ldr.w	r3, [ip]
  406714:	4667      	mov	r7, ip
  406716:	4618      	mov	r0, r3
  406718:	464d      	mov	r5, r9
  40671a:	2100      	movs	r1, #0
  40671c:	e000      	b.n	406720 <__multiply+0xc8>
  40671e:	4637      	mov	r7, r6
  406720:	882c      	ldrh	r4, [r5, #0]
  406722:	0c00      	lsrs	r0, r0, #16
  406724:	fb0b 0004 	mla	r0, fp, r4, r0
  406728:	4401      	add	r1, r0
  40672a:	b29c      	uxth	r4, r3
  40672c:	463e      	mov	r6, r7
  40672e:	ea44 4301 	orr.w	r3, r4, r1, lsl #16
  406732:	f846 3b04 	str.w	r3, [r6], #4
  406736:	6878      	ldr	r0, [r7, #4]
  406738:	f855 4b04 	ldr.w	r4, [r5], #4
  40673c:	b283      	uxth	r3, r0
  40673e:	0c24      	lsrs	r4, r4, #16
  406740:	fb0b 3404 	mla	r4, fp, r4, r3
  406744:	eb04 4311 	add.w	r3, r4, r1, lsr #16
  406748:	45ae      	cmp	lr, r5
  40674a:	ea4f 4113 	mov.w	r1, r3, lsr #16
  40674e:	d8e6      	bhi.n	40671e <__multiply+0xc6>
  406750:	607b      	str	r3, [r7, #4]
  406752:	4592      	cmp	sl, r2
  406754:	f10c 0c04 	add.w	ip, ip, #4
  406758:	d8af      	bhi.n	4066ba <__multiply+0x62>
  40675a:	f8dd 9004 	ldr.w	r9, [sp, #4]
  40675e:	f1b8 0f00 	cmp.w	r8, #0
  406762:	dd0b      	ble.n	40677c <__multiply+0x124>
  406764:	f859 3c04 	ldr.w	r3, [r9, #-4]
  406768:	f1a9 0904 	sub.w	r9, r9, #4
  40676c:	b11b      	cbz	r3, 406776 <__multiply+0x11e>
  40676e:	e005      	b.n	40677c <__multiply+0x124>
  406770:	f859 3d04 	ldr.w	r3, [r9, #-4]!
  406774:	b913      	cbnz	r3, 40677c <__multiply+0x124>
  406776:	f1b8 0801 	subs.w	r8, r8, #1
  40677a:	d1f9      	bne.n	406770 <__multiply+0x118>
  40677c:	9800      	ldr	r0, [sp, #0]
  40677e:	f8c0 8010 	str.w	r8, [r0, #16]
  406782:	b003      	add	sp, #12
  406784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406788 <__pow5mult>:
  406788:	f012 0303 	ands.w	r3, r2, #3
  40678c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406790:	4614      	mov	r4, r2
  406792:	4607      	mov	r7, r0
  406794:	d12e      	bne.n	4067f4 <__pow5mult+0x6c>
  406796:	460e      	mov	r6, r1
  406798:	10a4      	asrs	r4, r4, #2
  40679a:	d01c      	beq.n	4067d6 <__pow5mult+0x4e>
  40679c:	6cbd      	ldr	r5, [r7, #72]	; 0x48
  40679e:	b395      	cbz	r5, 406806 <__pow5mult+0x7e>
  4067a0:	07e3      	lsls	r3, r4, #31
  4067a2:	f04f 0800 	mov.w	r8, #0
  4067a6:	d406      	bmi.n	4067b6 <__pow5mult+0x2e>
  4067a8:	1064      	asrs	r4, r4, #1
  4067aa:	d014      	beq.n	4067d6 <__pow5mult+0x4e>
  4067ac:	6828      	ldr	r0, [r5, #0]
  4067ae:	b1a8      	cbz	r0, 4067dc <__pow5mult+0x54>
  4067b0:	4605      	mov	r5, r0
  4067b2:	07e3      	lsls	r3, r4, #31
  4067b4:	d5f8      	bpl.n	4067a8 <__pow5mult+0x20>
  4067b6:	462a      	mov	r2, r5
  4067b8:	4631      	mov	r1, r6
  4067ba:	4638      	mov	r0, r7
  4067bc:	f7ff ff4c 	bl	406658 <__multiply>
  4067c0:	b1b6      	cbz	r6, 4067f0 <__pow5mult+0x68>
  4067c2:	6872      	ldr	r2, [r6, #4]
  4067c4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4067c6:	1064      	asrs	r4, r4, #1
  4067c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4067cc:	6031      	str	r1, [r6, #0]
  4067ce:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  4067d2:	4606      	mov	r6, r0
  4067d4:	d1ea      	bne.n	4067ac <__pow5mult+0x24>
  4067d6:	4630      	mov	r0, r6
  4067d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4067dc:	462a      	mov	r2, r5
  4067de:	4629      	mov	r1, r5
  4067e0:	4638      	mov	r0, r7
  4067e2:	f7ff ff39 	bl	406658 <__multiply>
  4067e6:	6028      	str	r0, [r5, #0]
  4067e8:	f8c0 8000 	str.w	r8, [r0]
  4067ec:	4605      	mov	r5, r0
  4067ee:	e7e0      	b.n	4067b2 <__pow5mult+0x2a>
  4067f0:	4606      	mov	r6, r0
  4067f2:	e7d9      	b.n	4067a8 <__pow5mult+0x20>
  4067f4:	1e5a      	subs	r2, r3, #1
  4067f6:	4d0b      	ldr	r5, [pc, #44]	; (406824 <__pow5mult+0x9c>)
  4067f8:	2300      	movs	r3, #0
  4067fa:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4067fe:	f7ff fe93 	bl	406528 <__multadd>
  406802:	4606      	mov	r6, r0
  406804:	e7c8      	b.n	406798 <__pow5mult+0x10>
  406806:	2101      	movs	r1, #1
  406808:	4638      	mov	r0, r7
  40680a:	f7ff fe5d 	bl	4064c8 <_Balloc>
  40680e:	f240 2171 	movw	r1, #625	; 0x271
  406812:	2201      	movs	r2, #1
  406814:	2300      	movs	r3, #0
  406816:	6141      	str	r1, [r0, #20]
  406818:	6102      	str	r2, [r0, #16]
  40681a:	4605      	mov	r5, r0
  40681c:	64b8      	str	r0, [r7, #72]	; 0x48
  40681e:	6003      	str	r3, [r0, #0]
  406820:	e7be      	b.n	4067a0 <__pow5mult+0x18>
  406822:	bf00      	nop
  406824:	004082b0 	.word	0x004082b0

00406828 <__lshift>:
  406828:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40682c:	4691      	mov	r9, r2
  40682e:	690a      	ldr	r2, [r1, #16]
  406830:	688b      	ldr	r3, [r1, #8]
  406832:	ea4f 1469 	mov.w	r4, r9, asr #5
  406836:	eb04 0802 	add.w	r8, r4, r2
  40683a:	f108 0501 	add.w	r5, r8, #1
  40683e:	429d      	cmp	r5, r3
  406840:	460e      	mov	r6, r1
  406842:	4682      	mov	sl, r0
  406844:	6849      	ldr	r1, [r1, #4]
  406846:	dd04      	ble.n	406852 <__lshift+0x2a>
  406848:	005b      	lsls	r3, r3, #1
  40684a:	429d      	cmp	r5, r3
  40684c:	f101 0101 	add.w	r1, r1, #1
  406850:	dcfa      	bgt.n	406848 <__lshift+0x20>
  406852:	4650      	mov	r0, sl
  406854:	f7ff fe38 	bl	4064c8 <_Balloc>
  406858:	2c00      	cmp	r4, #0
  40685a:	f100 0214 	add.w	r2, r0, #20
  40685e:	dd38      	ble.n	4068d2 <__lshift+0xaa>
  406860:	eb02 0384 	add.w	r3, r2, r4, lsl #2
  406864:	2100      	movs	r1, #0
  406866:	f842 1b04 	str.w	r1, [r2], #4
  40686a:	4293      	cmp	r3, r2
  40686c:	d1fb      	bne.n	406866 <__lshift+0x3e>
  40686e:	6934      	ldr	r4, [r6, #16]
  406870:	f106 0114 	add.w	r1, r6, #20
  406874:	f019 091f 	ands.w	r9, r9, #31
  406878:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  40687c:	d021      	beq.n	4068c2 <__lshift+0x9a>
  40687e:	f1c9 0220 	rsb	r2, r9, #32
  406882:	2400      	movs	r4, #0
  406884:	680f      	ldr	r7, [r1, #0]
  406886:	fa07 fc09 	lsl.w	ip, r7, r9
  40688a:	ea4c 0404 	orr.w	r4, ip, r4
  40688e:	469c      	mov	ip, r3
  406890:	f843 4b04 	str.w	r4, [r3], #4
  406894:	f851 4b04 	ldr.w	r4, [r1], #4
  406898:	458e      	cmp	lr, r1
  40689a:	fa24 f402 	lsr.w	r4, r4, r2
  40689e:	d8f1      	bhi.n	406884 <__lshift+0x5c>
  4068a0:	f8cc 4004 	str.w	r4, [ip, #4]
  4068a4:	b10c      	cbz	r4, 4068aa <__lshift+0x82>
  4068a6:	f108 0502 	add.w	r5, r8, #2
  4068aa:	f8da 304c 	ldr.w	r3, [sl, #76]	; 0x4c
  4068ae:	6872      	ldr	r2, [r6, #4]
  4068b0:	3d01      	subs	r5, #1
  4068b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4068b6:	6105      	str	r5, [r0, #16]
  4068b8:	6031      	str	r1, [r6, #0]
  4068ba:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  4068be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4068c2:	3b04      	subs	r3, #4
  4068c4:	f851 2b04 	ldr.w	r2, [r1], #4
  4068c8:	f843 2f04 	str.w	r2, [r3, #4]!
  4068cc:	458e      	cmp	lr, r1
  4068ce:	d8f9      	bhi.n	4068c4 <__lshift+0x9c>
  4068d0:	e7eb      	b.n	4068aa <__lshift+0x82>
  4068d2:	4613      	mov	r3, r2
  4068d4:	e7cb      	b.n	40686e <__lshift+0x46>
  4068d6:	bf00      	nop

004068d8 <__mcmp>:
  4068d8:	6902      	ldr	r2, [r0, #16]
  4068da:	690b      	ldr	r3, [r1, #16]
  4068dc:	1ad2      	subs	r2, r2, r3
  4068de:	d112      	bne.n	406906 <__mcmp+0x2e>
  4068e0:	009b      	lsls	r3, r3, #2
  4068e2:	3014      	adds	r0, #20
  4068e4:	3114      	adds	r1, #20
  4068e6:	4419      	add	r1, r3
  4068e8:	b410      	push	{r4}
  4068ea:	4403      	add	r3, r0
  4068ec:	e001      	b.n	4068f2 <__mcmp+0x1a>
  4068ee:	4298      	cmp	r0, r3
  4068f0:	d20b      	bcs.n	40690a <__mcmp+0x32>
  4068f2:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4068f6:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4068fa:	4294      	cmp	r4, r2
  4068fc:	d0f7      	beq.n	4068ee <__mcmp+0x16>
  4068fe:	d307      	bcc.n	406910 <__mcmp+0x38>
  406900:	2001      	movs	r0, #1
  406902:	bc10      	pop	{r4}
  406904:	4770      	bx	lr
  406906:	4610      	mov	r0, r2
  406908:	4770      	bx	lr
  40690a:	2000      	movs	r0, #0
  40690c:	bc10      	pop	{r4}
  40690e:	4770      	bx	lr
  406910:	f04f 30ff 	mov.w	r0, #4294967295
  406914:	e7f5      	b.n	406902 <__mcmp+0x2a>
  406916:	bf00      	nop

00406918 <__mdiff>:
  406918:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40691c:	690b      	ldr	r3, [r1, #16]
  40691e:	460f      	mov	r7, r1
  406920:	6911      	ldr	r1, [r2, #16]
  406922:	1a5b      	subs	r3, r3, r1
  406924:	2b00      	cmp	r3, #0
  406926:	4690      	mov	r8, r2
  406928:	d117      	bne.n	40695a <__mdiff+0x42>
  40692a:	0089      	lsls	r1, r1, #2
  40692c:	f107 0214 	add.w	r2, r7, #20
  406930:	f108 0514 	add.w	r5, r8, #20
  406934:	1853      	adds	r3, r2, r1
  406936:	4429      	add	r1, r5
  406938:	e001      	b.n	40693e <__mdiff+0x26>
  40693a:	429a      	cmp	r2, r3
  40693c:	d25e      	bcs.n	4069fc <__mdiff+0xe4>
  40693e:	f853 6d04 	ldr.w	r6, [r3, #-4]!
  406942:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  406946:	42a6      	cmp	r6, r4
  406948:	d0f7      	beq.n	40693a <__mdiff+0x22>
  40694a:	d260      	bcs.n	406a0e <__mdiff+0xf6>
  40694c:	463b      	mov	r3, r7
  40694e:	4614      	mov	r4, r2
  406950:	4647      	mov	r7, r8
  406952:	f04f 0901 	mov.w	r9, #1
  406956:	4698      	mov	r8, r3
  406958:	e006      	b.n	406968 <__mdiff+0x50>
  40695a:	db5d      	blt.n	406a18 <__mdiff+0x100>
  40695c:	f107 0514 	add.w	r5, r7, #20
  406960:	f102 0414 	add.w	r4, r2, #20
  406964:	f04f 0900 	mov.w	r9, #0
  406968:	6879      	ldr	r1, [r7, #4]
  40696a:	f7ff fdad 	bl	4064c8 <_Balloc>
  40696e:	f8d8 3010 	ldr.w	r3, [r8, #16]
  406972:	693e      	ldr	r6, [r7, #16]
  406974:	f8c0 900c 	str.w	r9, [r0, #12]
  406978:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  40697c:	46a6      	mov	lr, r4
  40697e:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  406982:	f100 0414 	add.w	r4, r0, #20
  406986:	2300      	movs	r3, #0
  406988:	f85e 1b04 	ldr.w	r1, [lr], #4
  40698c:	f855 8b04 	ldr.w	r8, [r5], #4
  406990:	b28a      	uxth	r2, r1
  406992:	fa13 f388 	uxtah	r3, r3, r8
  406996:	0c09      	lsrs	r1, r1, #16
  406998:	1a9a      	subs	r2, r3, r2
  40699a:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  40699e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4069a2:	b292      	uxth	r2, r2
  4069a4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4069a8:	45f4      	cmp	ip, lr
  4069aa:	f844 2b04 	str.w	r2, [r4], #4
  4069ae:	ea4f 4323 	mov.w	r3, r3, asr #16
  4069b2:	d8e9      	bhi.n	406988 <__mdiff+0x70>
  4069b4:	42af      	cmp	r7, r5
  4069b6:	d917      	bls.n	4069e8 <__mdiff+0xd0>
  4069b8:	46a4      	mov	ip, r4
  4069ba:	4629      	mov	r1, r5
  4069bc:	f851 eb04 	ldr.w	lr, [r1], #4
  4069c0:	fa13 f28e 	uxtah	r2, r3, lr
  4069c4:	1413      	asrs	r3, r2, #16
  4069c6:	eb03 431e 	add.w	r3, r3, lr, lsr #16
  4069ca:	b292      	uxth	r2, r2
  4069cc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4069d0:	428f      	cmp	r7, r1
  4069d2:	f84c 2b04 	str.w	r2, [ip], #4
  4069d6:	ea4f 4323 	mov.w	r3, r3, asr #16
  4069da:	d8ef      	bhi.n	4069bc <__mdiff+0xa4>
  4069dc:	43ed      	mvns	r5, r5
  4069de:	443d      	add	r5, r7
  4069e0:	f025 0503 	bic.w	r5, r5, #3
  4069e4:	3504      	adds	r5, #4
  4069e6:	442c      	add	r4, r5
  4069e8:	3c04      	subs	r4, #4
  4069ea:	b922      	cbnz	r2, 4069f6 <__mdiff+0xde>
  4069ec:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4069f0:	3e01      	subs	r6, #1
  4069f2:	2b00      	cmp	r3, #0
  4069f4:	d0fa      	beq.n	4069ec <__mdiff+0xd4>
  4069f6:	6106      	str	r6, [r0, #16]
  4069f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4069fc:	2100      	movs	r1, #0
  4069fe:	f7ff fd63 	bl	4064c8 <_Balloc>
  406a02:	2201      	movs	r2, #1
  406a04:	2300      	movs	r3, #0
  406a06:	6102      	str	r2, [r0, #16]
  406a08:	6143      	str	r3, [r0, #20]
  406a0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406a0e:	462c      	mov	r4, r5
  406a10:	f04f 0900 	mov.w	r9, #0
  406a14:	4615      	mov	r5, r2
  406a16:	e7a7      	b.n	406968 <__mdiff+0x50>
  406a18:	463b      	mov	r3, r7
  406a1a:	f107 0414 	add.w	r4, r7, #20
  406a1e:	f108 0514 	add.w	r5, r8, #20
  406a22:	4647      	mov	r7, r8
  406a24:	f04f 0901 	mov.w	r9, #1
  406a28:	4698      	mov	r8, r3
  406a2a:	e79d      	b.n	406968 <__mdiff+0x50>

00406a2c <__d2b>:
  406a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406a30:	b082      	sub	sp, #8
  406a32:	2101      	movs	r1, #1
  406a34:	461c      	mov	r4, r3
  406a36:	f3c3 570a 	ubfx	r7, r3, #20, #11
  406a3a:	4615      	mov	r5, r2
  406a3c:	9e08      	ldr	r6, [sp, #32]
  406a3e:	f7ff fd43 	bl	4064c8 <_Balloc>
  406a42:	f3c4 0413 	ubfx	r4, r4, #0, #20
  406a46:	4680      	mov	r8, r0
  406a48:	b10f      	cbz	r7, 406a4e <__d2b+0x22>
  406a4a:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  406a4e:	9401      	str	r4, [sp, #4]
  406a50:	b31d      	cbz	r5, 406a9a <__d2b+0x6e>
  406a52:	a802      	add	r0, sp, #8
  406a54:	f840 5d08 	str.w	r5, [r0, #-8]!
  406a58:	f7ff fdc6 	bl	4065e8 <__lo0bits>
  406a5c:	2800      	cmp	r0, #0
  406a5e:	d134      	bne.n	406aca <__d2b+0x9e>
  406a60:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406a64:	f8c8 2014 	str.w	r2, [r8, #20]
  406a68:	2b00      	cmp	r3, #0
  406a6a:	bf0c      	ite	eq
  406a6c:	2101      	moveq	r1, #1
  406a6e:	2102      	movne	r1, #2
  406a70:	f8c8 3018 	str.w	r3, [r8, #24]
  406a74:	f8c8 1010 	str.w	r1, [r8, #16]
  406a78:	b9df      	cbnz	r7, 406ab2 <__d2b+0x86>
  406a7a:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  406a7e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406a82:	6030      	str	r0, [r6, #0]
  406a84:	6918      	ldr	r0, [r3, #16]
  406a86:	f7ff fd8f 	bl	4065a8 <__hi0bits>
  406a8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406a8c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406a90:	6018      	str	r0, [r3, #0]
  406a92:	4640      	mov	r0, r8
  406a94:	b002      	add	sp, #8
  406a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406a9a:	a801      	add	r0, sp, #4
  406a9c:	f7ff fda4 	bl	4065e8 <__lo0bits>
  406aa0:	9b01      	ldr	r3, [sp, #4]
  406aa2:	f8c8 3014 	str.w	r3, [r8, #20]
  406aa6:	2101      	movs	r1, #1
  406aa8:	3020      	adds	r0, #32
  406aaa:	f8c8 1010 	str.w	r1, [r8, #16]
  406aae:	2f00      	cmp	r7, #0
  406ab0:	d0e3      	beq.n	406a7a <__d2b+0x4e>
  406ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406ab4:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  406ab8:	4407      	add	r7, r0
  406aba:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  406abe:	6037      	str	r7, [r6, #0]
  406ac0:	6018      	str	r0, [r3, #0]
  406ac2:	4640      	mov	r0, r8
  406ac4:	b002      	add	sp, #8
  406ac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406aca:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406ace:	f1c0 0120 	rsb	r1, r0, #32
  406ad2:	fa03 f101 	lsl.w	r1, r3, r1
  406ad6:	430a      	orrs	r2, r1
  406ad8:	40c3      	lsrs	r3, r0
  406ada:	9301      	str	r3, [sp, #4]
  406adc:	f8c8 2014 	str.w	r2, [r8, #20]
  406ae0:	e7c2      	b.n	406a68 <__d2b+0x3c>
  406ae2:	bf00      	nop

00406ae4 <_realloc_r>:
  406ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406ae8:	4617      	mov	r7, r2
  406aea:	b083      	sub	sp, #12
  406aec:	2900      	cmp	r1, #0
  406aee:	f000 80c1 	beq.w	406c74 <_realloc_r+0x190>
  406af2:	460e      	mov	r6, r1
  406af4:	4681      	mov	r9, r0
  406af6:	f107 050b 	add.w	r5, r7, #11
  406afa:	f7fb fa03 	bl	401f04 <__malloc_lock>
  406afe:	f856 ec04 	ldr.w	lr, [r6, #-4]
  406b02:	2d16      	cmp	r5, #22
  406b04:	f02e 0403 	bic.w	r4, lr, #3
  406b08:	f1a6 0808 	sub.w	r8, r6, #8
  406b0c:	d840      	bhi.n	406b90 <_realloc_r+0xac>
  406b0e:	2210      	movs	r2, #16
  406b10:	4615      	mov	r5, r2
  406b12:	42af      	cmp	r7, r5
  406b14:	d841      	bhi.n	406b9a <_realloc_r+0xb6>
  406b16:	4294      	cmp	r4, r2
  406b18:	da75      	bge.n	406c06 <_realloc_r+0x122>
  406b1a:	4bc9      	ldr	r3, [pc, #804]	; (406e40 <_realloc_r+0x35c>)
  406b1c:	6899      	ldr	r1, [r3, #8]
  406b1e:	eb08 0004 	add.w	r0, r8, r4
  406b22:	4288      	cmp	r0, r1
  406b24:	6841      	ldr	r1, [r0, #4]
  406b26:	f000 80d9 	beq.w	406cdc <_realloc_r+0x1f8>
  406b2a:	f021 0301 	bic.w	r3, r1, #1
  406b2e:	4403      	add	r3, r0
  406b30:	685b      	ldr	r3, [r3, #4]
  406b32:	07db      	lsls	r3, r3, #31
  406b34:	d57d      	bpl.n	406c32 <_realloc_r+0x14e>
  406b36:	f01e 0f01 	tst.w	lr, #1
  406b3a:	d035      	beq.n	406ba8 <_realloc_r+0xc4>
  406b3c:	4639      	mov	r1, r7
  406b3e:	4648      	mov	r0, r9
  406b40:	f7fa fe0e 	bl	401760 <_malloc_r>
  406b44:	4607      	mov	r7, r0
  406b46:	b1e0      	cbz	r0, 406b82 <_realloc_r+0x9e>
  406b48:	f856 3c04 	ldr.w	r3, [r6, #-4]
  406b4c:	f023 0301 	bic.w	r3, r3, #1
  406b50:	4443      	add	r3, r8
  406b52:	f1a0 0208 	sub.w	r2, r0, #8
  406b56:	429a      	cmp	r2, r3
  406b58:	f000 8144 	beq.w	406de4 <_realloc_r+0x300>
  406b5c:	1f22      	subs	r2, r4, #4
  406b5e:	2a24      	cmp	r2, #36	; 0x24
  406b60:	f200 8131 	bhi.w	406dc6 <_realloc_r+0x2e2>
  406b64:	2a13      	cmp	r2, #19
  406b66:	f200 8104 	bhi.w	406d72 <_realloc_r+0x28e>
  406b6a:	4603      	mov	r3, r0
  406b6c:	4632      	mov	r2, r6
  406b6e:	6811      	ldr	r1, [r2, #0]
  406b70:	6019      	str	r1, [r3, #0]
  406b72:	6851      	ldr	r1, [r2, #4]
  406b74:	6059      	str	r1, [r3, #4]
  406b76:	6892      	ldr	r2, [r2, #8]
  406b78:	609a      	str	r2, [r3, #8]
  406b7a:	4631      	mov	r1, r6
  406b7c:	4648      	mov	r0, r9
  406b7e:	f7ff f8d5 	bl	405d2c <_free_r>
  406b82:	4648      	mov	r0, r9
  406b84:	f7fb f9c0 	bl	401f08 <__malloc_unlock>
  406b88:	4638      	mov	r0, r7
  406b8a:	b003      	add	sp, #12
  406b8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406b90:	f025 0507 	bic.w	r5, r5, #7
  406b94:	2d00      	cmp	r5, #0
  406b96:	462a      	mov	r2, r5
  406b98:	dabb      	bge.n	406b12 <_realloc_r+0x2e>
  406b9a:	230c      	movs	r3, #12
  406b9c:	2000      	movs	r0, #0
  406b9e:	f8c9 3000 	str.w	r3, [r9]
  406ba2:	b003      	add	sp, #12
  406ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406ba8:	f856 3c08 	ldr.w	r3, [r6, #-8]
  406bac:	ebc3 0a08 	rsb	sl, r3, r8
  406bb0:	f8da 3004 	ldr.w	r3, [sl, #4]
  406bb4:	f023 0c03 	bic.w	ip, r3, #3
  406bb8:	eb04 030c 	add.w	r3, r4, ip
  406bbc:	4293      	cmp	r3, r2
  406bbe:	dbbd      	blt.n	406b3c <_realloc_r+0x58>
  406bc0:	4657      	mov	r7, sl
  406bc2:	f8da 100c 	ldr.w	r1, [sl, #12]
  406bc6:	f857 0f08 	ldr.w	r0, [r7, #8]!
  406bca:	1f22      	subs	r2, r4, #4
  406bcc:	2a24      	cmp	r2, #36	; 0x24
  406bce:	60c1      	str	r1, [r0, #12]
  406bd0:	6088      	str	r0, [r1, #8]
  406bd2:	f200 8117 	bhi.w	406e04 <_realloc_r+0x320>
  406bd6:	2a13      	cmp	r2, #19
  406bd8:	f240 8112 	bls.w	406e00 <_realloc_r+0x31c>
  406bdc:	6831      	ldr	r1, [r6, #0]
  406bde:	f8ca 1008 	str.w	r1, [sl, #8]
  406be2:	6871      	ldr	r1, [r6, #4]
  406be4:	f8ca 100c 	str.w	r1, [sl, #12]
  406be8:	2a1b      	cmp	r2, #27
  406bea:	f200 812b 	bhi.w	406e44 <_realloc_r+0x360>
  406bee:	3608      	adds	r6, #8
  406bf0:	f10a 0210 	add.w	r2, sl, #16
  406bf4:	6831      	ldr	r1, [r6, #0]
  406bf6:	6011      	str	r1, [r2, #0]
  406bf8:	6871      	ldr	r1, [r6, #4]
  406bfa:	6051      	str	r1, [r2, #4]
  406bfc:	68b1      	ldr	r1, [r6, #8]
  406bfe:	6091      	str	r1, [r2, #8]
  406c00:	463e      	mov	r6, r7
  406c02:	461c      	mov	r4, r3
  406c04:	46d0      	mov	r8, sl
  406c06:	1b63      	subs	r3, r4, r5
  406c08:	2b0f      	cmp	r3, #15
  406c0a:	d81d      	bhi.n	406c48 <_realloc_r+0x164>
  406c0c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  406c10:	f003 0301 	and.w	r3, r3, #1
  406c14:	4323      	orrs	r3, r4
  406c16:	4444      	add	r4, r8
  406c18:	f8c8 3004 	str.w	r3, [r8, #4]
  406c1c:	6863      	ldr	r3, [r4, #4]
  406c1e:	f043 0301 	orr.w	r3, r3, #1
  406c22:	6063      	str	r3, [r4, #4]
  406c24:	4648      	mov	r0, r9
  406c26:	f7fb f96f 	bl	401f08 <__malloc_unlock>
  406c2a:	4630      	mov	r0, r6
  406c2c:	b003      	add	sp, #12
  406c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406c32:	f021 0103 	bic.w	r1, r1, #3
  406c36:	4421      	add	r1, r4
  406c38:	4291      	cmp	r1, r2
  406c3a:	db21      	blt.n	406c80 <_realloc_r+0x19c>
  406c3c:	68c3      	ldr	r3, [r0, #12]
  406c3e:	6882      	ldr	r2, [r0, #8]
  406c40:	460c      	mov	r4, r1
  406c42:	60d3      	str	r3, [r2, #12]
  406c44:	609a      	str	r2, [r3, #8]
  406c46:	e7de      	b.n	406c06 <_realloc_r+0x122>
  406c48:	f8d8 2004 	ldr.w	r2, [r8, #4]
  406c4c:	eb08 0105 	add.w	r1, r8, r5
  406c50:	f002 0201 	and.w	r2, r2, #1
  406c54:	4315      	orrs	r5, r2
  406c56:	f043 0201 	orr.w	r2, r3, #1
  406c5a:	440b      	add	r3, r1
  406c5c:	f8c8 5004 	str.w	r5, [r8, #4]
  406c60:	604a      	str	r2, [r1, #4]
  406c62:	685a      	ldr	r2, [r3, #4]
  406c64:	f042 0201 	orr.w	r2, r2, #1
  406c68:	3108      	adds	r1, #8
  406c6a:	605a      	str	r2, [r3, #4]
  406c6c:	4648      	mov	r0, r9
  406c6e:	f7ff f85d 	bl	405d2c <_free_r>
  406c72:	e7d7      	b.n	406c24 <_realloc_r+0x140>
  406c74:	4611      	mov	r1, r2
  406c76:	b003      	add	sp, #12
  406c78:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406c7c:	f7fa bd70 	b.w	401760 <_malloc_r>
  406c80:	f01e 0f01 	tst.w	lr, #1
  406c84:	f47f af5a 	bne.w	406b3c <_realloc_r+0x58>
  406c88:	f856 3c08 	ldr.w	r3, [r6, #-8]
  406c8c:	ebc3 0a08 	rsb	sl, r3, r8
  406c90:	f8da 3004 	ldr.w	r3, [sl, #4]
  406c94:	f023 0c03 	bic.w	ip, r3, #3
  406c98:	eb01 0e0c 	add.w	lr, r1, ip
  406c9c:	4596      	cmp	lr, r2
  406c9e:	db8b      	blt.n	406bb8 <_realloc_r+0xd4>
  406ca0:	68c3      	ldr	r3, [r0, #12]
  406ca2:	6882      	ldr	r2, [r0, #8]
  406ca4:	4657      	mov	r7, sl
  406ca6:	60d3      	str	r3, [r2, #12]
  406ca8:	609a      	str	r2, [r3, #8]
  406caa:	f857 1f08 	ldr.w	r1, [r7, #8]!
  406cae:	f8da 300c 	ldr.w	r3, [sl, #12]
  406cb2:	60cb      	str	r3, [r1, #12]
  406cb4:	1f22      	subs	r2, r4, #4
  406cb6:	2a24      	cmp	r2, #36	; 0x24
  406cb8:	6099      	str	r1, [r3, #8]
  406cba:	f200 8099 	bhi.w	406df0 <_realloc_r+0x30c>
  406cbe:	2a13      	cmp	r2, #19
  406cc0:	d962      	bls.n	406d88 <_realloc_r+0x2a4>
  406cc2:	6833      	ldr	r3, [r6, #0]
  406cc4:	f8ca 3008 	str.w	r3, [sl, #8]
  406cc8:	6873      	ldr	r3, [r6, #4]
  406cca:	f8ca 300c 	str.w	r3, [sl, #12]
  406cce:	2a1b      	cmp	r2, #27
  406cd0:	f200 80a0 	bhi.w	406e14 <_realloc_r+0x330>
  406cd4:	3608      	adds	r6, #8
  406cd6:	f10a 0310 	add.w	r3, sl, #16
  406cda:	e056      	b.n	406d8a <_realloc_r+0x2a6>
  406cdc:	f021 0b03 	bic.w	fp, r1, #3
  406ce0:	44a3      	add	fp, r4
  406ce2:	f105 0010 	add.w	r0, r5, #16
  406ce6:	4583      	cmp	fp, r0
  406ce8:	da59      	bge.n	406d9e <_realloc_r+0x2ba>
  406cea:	f01e 0f01 	tst.w	lr, #1
  406cee:	f47f af25 	bne.w	406b3c <_realloc_r+0x58>
  406cf2:	f856 1c08 	ldr.w	r1, [r6, #-8]
  406cf6:	ebc1 0a08 	rsb	sl, r1, r8
  406cfa:	f8da 1004 	ldr.w	r1, [sl, #4]
  406cfe:	f021 0c03 	bic.w	ip, r1, #3
  406d02:	44e3      	add	fp, ip
  406d04:	4558      	cmp	r0, fp
  406d06:	f73f af57 	bgt.w	406bb8 <_realloc_r+0xd4>
  406d0a:	4657      	mov	r7, sl
  406d0c:	f8da 100c 	ldr.w	r1, [sl, #12]
  406d10:	f857 0f08 	ldr.w	r0, [r7, #8]!
  406d14:	1f22      	subs	r2, r4, #4
  406d16:	2a24      	cmp	r2, #36	; 0x24
  406d18:	60c1      	str	r1, [r0, #12]
  406d1a:	6088      	str	r0, [r1, #8]
  406d1c:	f200 80b4 	bhi.w	406e88 <_realloc_r+0x3a4>
  406d20:	2a13      	cmp	r2, #19
  406d22:	f240 80a5 	bls.w	406e70 <_realloc_r+0x38c>
  406d26:	6831      	ldr	r1, [r6, #0]
  406d28:	f8ca 1008 	str.w	r1, [sl, #8]
  406d2c:	6871      	ldr	r1, [r6, #4]
  406d2e:	f8ca 100c 	str.w	r1, [sl, #12]
  406d32:	2a1b      	cmp	r2, #27
  406d34:	f200 80af 	bhi.w	406e96 <_realloc_r+0x3b2>
  406d38:	3608      	adds	r6, #8
  406d3a:	f10a 0210 	add.w	r2, sl, #16
  406d3e:	6831      	ldr	r1, [r6, #0]
  406d40:	6011      	str	r1, [r2, #0]
  406d42:	6871      	ldr	r1, [r6, #4]
  406d44:	6051      	str	r1, [r2, #4]
  406d46:	68b1      	ldr	r1, [r6, #8]
  406d48:	6091      	str	r1, [r2, #8]
  406d4a:	eb0a 0105 	add.w	r1, sl, r5
  406d4e:	ebc5 020b 	rsb	r2, r5, fp
  406d52:	f042 0201 	orr.w	r2, r2, #1
  406d56:	6099      	str	r1, [r3, #8]
  406d58:	604a      	str	r2, [r1, #4]
  406d5a:	f8da 3004 	ldr.w	r3, [sl, #4]
  406d5e:	f003 0301 	and.w	r3, r3, #1
  406d62:	431d      	orrs	r5, r3
  406d64:	4648      	mov	r0, r9
  406d66:	f8ca 5004 	str.w	r5, [sl, #4]
  406d6a:	f7fb f8cd 	bl	401f08 <__malloc_unlock>
  406d6e:	4638      	mov	r0, r7
  406d70:	e75c      	b.n	406c2c <_realloc_r+0x148>
  406d72:	6833      	ldr	r3, [r6, #0]
  406d74:	6003      	str	r3, [r0, #0]
  406d76:	6873      	ldr	r3, [r6, #4]
  406d78:	6043      	str	r3, [r0, #4]
  406d7a:	2a1b      	cmp	r2, #27
  406d7c:	d827      	bhi.n	406dce <_realloc_r+0x2ea>
  406d7e:	f100 0308 	add.w	r3, r0, #8
  406d82:	f106 0208 	add.w	r2, r6, #8
  406d86:	e6f2      	b.n	406b6e <_realloc_r+0x8a>
  406d88:	463b      	mov	r3, r7
  406d8a:	6832      	ldr	r2, [r6, #0]
  406d8c:	601a      	str	r2, [r3, #0]
  406d8e:	6872      	ldr	r2, [r6, #4]
  406d90:	605a      	str	r2, [r3, #4]
  406d92:	68b2      	ldr	r2, [r6, #8]
  406d94:	609a      	str	r2, [r3, #8]
  406d96:	463e      	mov	r6, r7
  406d98:	4674      	mov	r4, lr
  406d9a:	46d0      	mov	r8, sl
  406d9c:	e733      	b.n	406c06 <_realloc_r+0x122>
  406d9e:	eb08 0105 	add.w	r1, r8, r5
  406da2:	ebc5 0b0b 	rsb	fp, r5, fp
  406da6:	f04b 0201 	orr.w	r2, fp, #1
  406daa:	6099      	str	r1, [r3, #8]
  406dac:	604a      	str	r2, [r1, #4]
  406dae:	f856 3c04 	ldr.w	r3, [r6, #-4]
  406db2:	f003 0301 	and.w	r3, r3, #1
  406db6:	431d      	orrs	r5, r3
  406db8:	4648      	mov	r0, r9
  406dba:	f846 5c04 	str.w	r5, [r6, #-4]
  406dbe:	f7fb f8a3 	bl	401f08 <__malloc_unlock>
  406dc2:	4630      	mov	r0, r6
  406dc4:	e732      	b.n	406c2c <_realloc_r+0x148>
  406dc6:	4631      	mov	r1, r6
  406dc8:	f7ff fb1a 	bl	406400 <memmove>
  406dcc:	e6d5      	b.n	406b7a <_realloc_r+0x96>
  406dce:	68b3      	ldr	r3, [r6, #8]
  406dd0:	6083      	str	r3, [r0, #8]
  406dd2:	68f3      	ldr	r3, [r6, #12]
  406dd4:	60c3      	str	r3, [r0, #12]
  406dd6:	2a24      	cmp	r2, #36	; 0x24
  406dd8:	d028      	beq.n	406e2c <_realloc_r+0x348>
  406dda:	f100 0310 	add.w	r3, r0, #16
  406dde:	f106 0210 	add.w	r2, r6, #16
  406de2:	e6c4      	b.n	406b6e <_realloc_r+0x8a>
  406de4:	f850 3c04 	ldr.w	r3, [r0, #-4]
  406de8:	f023 0303 	bic.w	r3, r3, #3
  406dec:	441c      	add	r4, r3
  406dee:	e70a      	b.n	406c06 <_realloc_r+0x122>
  406df0:	4631      	mov	r1, r6
  406df2:	4638      	mov	r0, r7
  406df4:	4674      	mov	r4, lr
  406df6:	46d0      	mov	r8, sl
  406df8:	f7ff fb02 	bl	406400 <memmove>
  406dfc:	463e      	mov	r6, r7
  406dfe:	e702      	b.n	406c06 <_realloc_r+0x122>
  406e00:	463a      	mov	r2, r7
  406e02:	e6f7      	b.n	406bf4 <_realloc_r+0x110>
  406e04:	4631      	mov	r1, r6
  406e06:	4638      	mov	r0, r7
  406e08:	461c      	mov	r4, r3
  406e0a:	46d0      	mov	r8, sl
  406e0c:	f7ff faf8 	bl	406400 <memmove>
  406e10:	463e      	mov	r6, r7
  406e12:	e6f8      	b.n	406c06 <_realloc_r+0x122>
  406e14:	68b3      	ldr	r3, [r6, #8]
  406e16:	f8ca 3010 	str.w	r3, [sl, #16]
  406e1a:	68f3      	ldr	r3, [r6, #12]
  406e1c:	f8ca 3014 	str.w	r3, [sl, #20]
  406e20:	2a24      	cmp	r2, #36	; 0x24
  406e22:	d01b      	beq.n	406e5c <_realloc_r+0x378>
  406e24:	3610      	adds	r6, #16
  406e26:	f10a 0318 	add.w	r3, sl, #24
  406e2a:	e7ae      	b.n	406d8a <_realloc_r+0x2a6>
  406e2c:	6933      	ldr	r3, [r6, #16]
  406e2e:	6103      	str	r3, [r0, #16]
  406e30:	6973      	ldr	r3, [r6, #20]
  406e32:	6143      	str	r3, [r0, #20]
  406e34:	f106 0218 	add.w	r2, r6, #24
  406e38:	f100 0318 	add.w	r3, r0, #24
  406e3c:	e697      	b.n	406b6e <_realloc_r+0x8a>
  406e3e:	bf00      	nop
  406e40:	2000043c 	.word	0x2000043c
  406e44:	68b1      	ldr	r1, [r6, #8]
  406e46:	f8ca 1010 	str.w	r1, [sl, #16]
  406e4a:	68f1      	ldr	r1, [r6, #12]
  406e4c:	f8ca 1014 	str.w	r1, [sl, #20]
  406e50:	2a24      	cmp	r2, #36	; 0x24
  406e52:	d00f      	beq.n	406e74 <_realloc_r+0x390>
  406e54:	3610      	adds	r6, #16
  406e56:	f10a 0218 	add.w	r2, sl, #24
  406e5a:	e6cb      	b.n	406bf4 <_realloc_r+0x110>
  406e5c:	6933      	ldr	r3, [r6, #16]
  406e5e:	f8ca 3018 	str.w	r3, [sl, #24]
  406e62:	6973      	ldr	r3, [r6, #20]
  406e64:	f8ca 301c 	str.w	r3, [sl, #28]
  406e68:	3618      	adds	r6, #24
  406e6a:	f10a 0320 	add.w	r3, sl, #32
  406e6e:	e78c      	b.n	406d8a <_realloc_r+0x2a6>
  406e70:	463a      	mov	r2, r7
  406e72:	e764      	b.n	406d3e <_realloc_r+0x25a>
  406e74:	6932      	ldr	r2, [r6, #16]
  406e76:	f8ca 2018 	str.w	r2, [sl, #24]
  406e7a:	6972      	ldr	r2, [r6, #20]
  406e7c:	f8ca 201c 	str.w	r2, [sl, #28]
  406e80:	3618      	adds	r6, #24
  406e82:	f10a 0220 	add.w	r2, sl, #32
  406e86:	e6b5      	b.n	406bf4 <_realloc_r+0x110>
  406e88:	4631      	mov	r1, r6
  406e8a:	4638      	mov	r0, r7
  406e8c:	9301      	str	r3, [sp, #4]
  406e8e:	f7ff fab7 	bl	406400 <memmove>
  406e92:	9b01      	ldr	r3, [sp, #4]
  406e94:	e759      	b.n	406d4a <_realloc_r+0x266>
  406e96:	68b1      	ldr	r1, [r6, #8]
  406e98:	f8ca 1010 	str.w	r1, [sl, #16]
  406e9c:	68f1      	ldr	r1, [r6, #12]
  406e9e:	f8ca 1014 	str.w	r1, [sl, #20]
  406ea2:	2a24      	cmp	r2, #36	; 0x24
  406ea4:	d003      	beq.n	406eae <_realloc_r+0x3ca>
  406ea6:	3610      	adds	r6, #16
  406ea8:	f10a 0218 	add.w	r2, sl, #24
  406eac:	e747      	b.n	406d3e <_realloc_r+0x25a>
  406eae:	6932      	ldr	r2, [r6, #16]
  406eb0:	f8ca 2018 	str.w	r2, [sl, #24]
  406eb4:	6972      	ldr	r2, [r6, #20]
  406eb6:	f8ca 201c 	str.w	r2, [sl, #28]
  406eba:	3618      	adds	r6, #24
  406ebc:	f10a 0220 	add.w	r2, sl, #32
  406ec0:	e73d      	b.n	406d3e <_realloc_r+0x25a>
  406ec2:	bf00      	nop

00406ec4 <__sread>:
  406ec4:	b510      	push	{r4, lr}
  406ec6:	460c      	mov	r4, r1
  406ec8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406ecc:	f000 fa74 	bl	4073b8 <_read_r>
  406ed0:	2800      	cmp	r0, #0
  406ed2:	db03      	blt.n	406edc <__sread+0x18>
  406ed4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  406ed6:	4403      	add	r3, r0
  406ed8:	6523      	str	r3, [r4, #80]	; 0x50
  406eda:	bd10      	pop	{r4, pc}
  406edc:	89a3      	ldrh	r3, [r4, #12]
  406ede:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  406ee2:	81a3      	strh	r3, [r4, #12]
  406ee4:	bd10      	pop	{r4, pc}
  406ee6:	bf00      	nop

00406ee8 <__swrite>:
  406ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406eec:	4616      	mov	r6, r2
  406eee:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  406ef2:	461f      	mov	r7, r3
  406ef4:	05d3      	lsls	r3, r2, #23
  406ef6:	460c      	mov	r4, r1
  406ef8:	4605      	mov	r5, r0
  406efa:	d507      	bpl.n	406f0c <__swrite+0x24>
  406efc:	2200      	movs	r2, #0
  406efe:	2302      	movs	r3, #2
  406f00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406f04:	f000 fa42 	bl	40738c <_lseek_r>
  406f08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406f0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406f10:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  406f14:	81a2      	strh	r2, [r4, #12]
  406f16:	463b      	mov	r3, r7
  406f18:	4632      	mov	r2, r6
  406f1a:	4628      	mov	r0, r5
  406f1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406f20:	f000 b922 	b.w	407168 <_write_r>

00406f24 <__sseek>:
  406f24:	b510      	push	{r4, lr}
  406f26:	460c      	mov	r4, r1
  406f28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406f2c:	f000 fa2e 	bl	40738c <_lseek_r>
  406f30:	89a3      	ldrh	r3, [r4, #12]
  406f32:	1c42      	adds	r2, r0, #1
  406f34:	bf0e      	itee	eq
  406f36:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  406f3a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  406f3e:	6520      	strne	r0, [r4, #80]	; 0x50
  406f40:	81a3      	strh	r3, [r4, #12]
  406f42:	bd10      	pop	{r4, pc}

00406f44 <__sclose>:
  406f44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406f48:	f000 b9a6 	b.w	407298 <_close_r>

00406f4c <__ssprint_r>:
  406f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406f50:	6893      	ldr	r3, [r2, #8]
  406f52:	b083      	sub	sp, #12
  406f54:	4690      	mov	r8, r2
  406f56:	2b00      	cmp	r3, #0
  406f58:	d072      	beq.n	407040 <__ssprint_r+0xf4>
  406f5a:	4683      	mov	fp, r0
  406f5c:	f04f 0900 	mov.w	r9, #0
  406f60:	6816      	ldr	r6, [r2, #0]
  406f62:	6808      	ldr	r0, [r1, #0]
  406f64:	688b      	ldr	r3, [r1, #8]
  406f66:	460d      	mov	r5, r1
  406f68:	464c      	mov	r4, r9
  406f6a:	2c00      	cmp	r4, #0
  406f6c:	d045      	beq.n	406ffa <__ssprint_r+0xae>
  406f6e:	429c      	cmp	r4, r3
  406f70:	461f      	mov	r7, r3
  406f72:	469a      	mov	sl, r3
  406f74:	d346      	bcc.n	407004 <__ssprint_r+0xb8>
  406f76:	89ab      	ldrh	r3, [r5, #12]
  406f78:	f413 6f90 	tst.w	r3, #1152	; 0x480
  406f7c:	d02d      	beq.n	406fda <__ssprint_r+0x8e>
  406f7e:	696f      	ldr	r7, [r5, #20]
  406f80:	6929      	ldr	r1, [r5, #16]
  406f82:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  406f86:	ebc1 0a00 	rsb	sl, r1, r0
  406f8a:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  406f8e:	1c60      	adds	r0, r4, #1
  406f90:	107f      	asrs	r7, r7, #1
  406f92:	4450      	add	r0, sl
  406f94:	42b8      	cmp	r0, r7
  406f96:	463a      	mov	r2, r7
  406f98:	bf84      	itt	hi
  406f9a:	4607      	movhi	r7, r0
  406f9c:	463a      	movhi	r2, r7
  406f9e:	055b      	lsls	r3, r3, #21
  406fa0:	d533      	bpl.n	40700a <__ssprint_r+0xbe>
  406fa2:	4611      	mov	r1, r2
  406fa4:	4658      	mov	r0, fp
  406fa6:	f7fa fbdb 	bl	401760 <_malloc_r>
  406faa:	2800      	cmp	r0, #0
  406fac:	d037      	beq.n	40701e <__ssprint_r+0xd2>
  406fae:	4652      	mov	r2, sl
  406fb0:	6929      	ldr	r1, [r5, #16]
  406fb2:	9001      	str	r0, [sp, #4]
  406fb4:	f7fa febe 	bl	401d34 <memcpy>
  406fb8:	89aa      	ldrh	r2, [r5, #12]
  406fba:	9b01      	ldr	r3, [sp, #4]
  406fbc:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  406fc0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  406fc4:	81aa      	strh	r2, [r5, #12]
  406fc6:	ebca 0207 	rsb	r2, sl, r7
  406fca:	eb03 000a 	add.w	r0, r3, sl
  406fce:	616f      	str	r7, [r5, #20]
  406fd0:	612b      	str	r3, [r5, #16]
  406fd2:	6028      	str	r0, [r5, #0]
  406fd4:	60aa      	str	r2, [r5, #8]
  406fd6:	4627      	mov	r7, r4
  406fd8:	46a2      	mov	sl, r4
  406fda:	4652      	mov	r2, sl
  406fdc:	4649      	mov	r1, r9
  406fde:	f7ff fa0f 	bl	406400 <memmove>
  406fe2:	f8d8 2008 	ldr.w	r2, [r8, #8]
  406fe6:	68ab      	ldr	r3, [r5, #8]
  406fe8:	6828      	ldr	r0, [r5, #0]
  406fea:	1bdb      	subs	r3, r3, r7
  406fec:	4450      	add	r0, sl
  406fee:	1b14      	subs	r4, r2, r4
  406ff0:	60ab      	str	r3, [r5, #8]
  406ff2:	6028      	str	r0, [r5, #0]
  406ff4:	f8c8 4008 	str.w	r4, [r8, #8]
  406ff8:	b314      	cbz	r4, 407040 <__ssprint_r+0xf4>
  406ffa:	f8d6 9000 	ldr.w	r9, [r6]
  406ffe:	6874      	ldr	r4, [r6, #4]
  407000:	3608      	adds	r6, #8
  407002:	e7b2      	b.n	406f6a <__ssprint_r+0x1e>
  407004:	4627      	mov	r7, r4
  407006:	46a2      	mov	sl, r4
  407008:	e7e7      	b.n	406fda <__ssprint_r+0x8e>
  40700a:	4658      	mov	r0, fp
  40700c:	f7ff fd6a 	bl	406ae4 <_realloc_r>
  407010:	4603      	mov	r3, r0
  407012:	2800      	cmp	r0, #0
  407014:	d1d7      	bne.n	406fc6 <__ssprint_r+0x7a>
  407016:	6929      	ldr	r1, [r5, #16]
  407018:	4658      	mov	r0, fp
  40701a:	f7fe fe87 	bl	405d2c <_free_r>
  40701e:	230c      	movs	r3, #12
  407020:	f8cb 3000 	str.w	r3, [fp]
  407024:	89ab      	ldrh	r3, [r5, #12]
  407026:	2200      	movs	r2, #0
  407028:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40702c:	f04f 30ff 	mov.w	r0, #4294967295
  407030:	81ab      	strh	r3, [r5, #12]
  407032:	f8c8 2008 	str.w	r2, [r8, #8]
  407036:	f8c8 2004 	str.w	r2, [r8, #4]
  40703a:	b003      	add	sp, #12
  40703c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407040:	2000      	movs	r0, #0
  407042:	f8c8 0004 	str.w	r0, [r8, #4]
  407046:	b003      	add	sp, #12
  407048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040704c <__swbuf_r>:
  40704c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40704e:	460e      	mov	r6, r1
  407050:	4614      	mov	r4, r2
  407052:	4607      	mov	r7, r0
  407054:	b110      	cbz	r0, 40705c <__swbuf_r+0x10>
  407056:	6b83      	ldr	r3, [r0, #56]	; 0x38
  407058:	2b00      	cmp	r3, #0
  40705a:	d04a      	beq.n	4070f2 <__swbuf_r+0xa6>
  40705c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407060:	69a3      	ldr	r3, [r4, #24]
  407062:	60a3      	str	r3, [r4, #8]
  407064:	b291      	uxth	r1, r2
  407066:	0708      	lsls	r0, r1, #28
  407068:	d538      	bpl.n	4070dc <__swbuf_r+0x90>
  40706a:	6923      	ldr	r3, [r4, #16]
  40706c:	2b00      	cmp	r3, #0
  40706e:	d035      	beq.n	4070dc <__swbuf_r+0x90>
  407070:	0489      	lsls	r1, r1, #18
  407072:	b2f5      	uxtb	r5, r6
  407074:	d515      	bpl.n	4070a2 <__swbuf_r+0x56>
  407076:	6822      	ldr	r2, [r4, #0]
  407078:	6961      	ldr	r1, [r4, #20]
  40707a:	1ad3      	subs	r3, r2, r3
  40707c:	428b      	cmp	r3, r1
  40707e:	da1c      	bge.n	4070ba <__swbuf_r+0x6e>
  407080:	3301      	adds	r3, #1
  407082:	68a1      	ldr	r1, [r4, #8]
  407084:	1c50      	adds	r0, r2, #1
  407086:	3901      	subs	r1, #1
  407088:	60a1      	str	r1, [r4, #8]
  40708a:	6020      	str	r0, [r4, #0]
  40708c:	7016      	strb	r6, [r2, #0]
  40708e:	6962      	ldr	r2, [r4, #20]
  407090:	429a      	cmp	r2, r3
  407092:	d01a      	beq.n	4070ca <__swbuf_r+0x7e>
  407094:	89a3      	ldrh	r3, [r4, #12]
  407096:	07db      	lsls	r3, r3, #31
  407098:	d501      	bpl.n	40709e <__swbuf_r+0x52>
  40709a:	2d0a      	cmp	r5, #10
  40709c:	d015      	beq.n	4070ca <__swbuf_r+0x7e>
  40709e:	4628      	mov	r0, r5
  4070a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4070a2:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4070a4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4070a8:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4070ac:	81a2      	strh	r2, [r4, #12]
  4070ae:	6822      	ldr	r2, [r4, #0]
  4070b0:	6661      	str	r1, [r4, #100]	; 0x64
  4070b2:	6961      	ldr	r1, [r4, #20]
  4070b4:	1ad3      	subs	r3, r2, r3
  4070b6:	428b      	cmp	r3, r1
  4070b8:	dbe2      	blt.n	407080 <__swbuf_r+0x34>
  4070ba:	4621      	mov	r1, r4
  4070bc:	4638      	mov	r0, r7
  4070be:	f7fe fcd7 	bl	405a70 <_fflush_r>
  4070c2:	b940      	cbnz	r0, 4070d6 <__swbuf_r+0x8a>
  4070c4:	6822      	ldr	r2, [r4, #0]
  4070c6:	2301      	movs	r3, #1
  4070c8:	e7db      	b.n	407082 <__swbuf_r+0x36>
  4070ca:	4621      	mov	r1, r4
  4070cc:	4638      	mov	r0, r7
  4070ce:	f7fe fccf 	bl	405a70 <_fflush_r>
  4070d2:	2800      	cmp	r0, #0
  4070d4:	d0e3      	beq.n	40709e <__swbuf_r+0x52>
  4070d6:	f04f 30ff 	mov.w	r0, #4294967295
  4070da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4070dc:	4621      	mov	r1, r4
  4070de:	4638      	mov	r0, r7
  4070e0:	f7fd fbee 	bl	4048c0 <__swsetup_r>
  4070e4:	2800      	cmp	r0, #0
  4070e6:	d1f6      	bne.n	4070d6 <__swbuf_r+0x8a>
  4070e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4070ec:	6923      	ldr	r3, [r4, #16]
  4070ee:	b291      	uxth	r1, r2
  4070f0:	e7be      	b.n	407070 <__swbuf_r+0x24>
  4070f2:	f7fe fd51 	bl	405b98 <__sinit>
  4070f6:	e7b1      	b.n	40705c <__swbuf_r+0x10>

004070f8 <_wcrtomb_r>:
  4070f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4070fc:	4605      	mov	r5, r0
  4070fe:	b086      	sub	sp, #24
  407100:	461e      	mov	r6, r3
  407102:	460c      	mov	r4, r1
  407104:	b1a1      	cbz	r1, 407130 <_wcrtomb_r+0x38>
  407106:	4b10      	ldr	r3, [pc, #64]	; (407148 <_wcrtomb_r+0x50>)
  407108:	4617      	mov	r7, r2
  40710a:	f8d3 8000 	ldr.w	r8, [r3]
  40710e:	f7ff f8a1 	bl	406254 <__locale_charset>
  407112:	9600      	str	r6, [sp, #0]
  407114:	4603      	mov	r3, r0
  407116:	463a      	mov	r2, r7
  407118:	4621      	mov	r1, r4
  40711a:	4628      	mov	r0, r5
  40711c:	47c0      	blx	r8
  40711e:	1c43      	adds	r3, r0, #1
  407120:	d103      	bne.n	40712a <_wcrtomb_r+0x32>
  407122:	2200      	movs	r2, #0
  407124:	238a      	movs	r3, #138	; 0x8a
  407126:	6032      	str	r2, [r6, #0]
  407128:	602b      	str	r3, [r5, #0]
  40712a:	b006      	add	sp, #24
  40712c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407130:	4b05      	ldr	r3, [pc, #20]	; (407148 <_wcrtomb_r+0x50>)
  407132:	681f      	ldr	r7, [r3, #0]
  407134:	f7ff f88e 	bl	406254 <__locale_charset>
  407138:	9600      	str	r6, [sp, #0]
  40713a:	4603      	mov	r3, r0
  40713c:	4622      	mov	r2, r4
  40713e:	a903      	add	r1, sp, #12
  407140:	4628      	mov	r0, r5
  407142:	47b8      	blx	r7
  407144:	e7eb      	b.n	40711e <_wcrtomb_r+0x26>
  407146:	bf00      	nop
  407148:	200008a8 	.word	0x200008a8

0040714c <__ascii_wctomb>:
  40714c:	b121      	cbz	r1, 407158 <__ascii_wctomb+0xc>
  40714e:	2aff      	cmp	r2, #255	; 0xff
  407150:	d804      	bhi.n	40715c <__ascii_wctomb+0x10>
  407152:	700a      	strb	r2, [r1, #0]
  407154:	2001      	movs	r0, #1
  407156:	4770      	bx	lr
  407158:	4608      	mov	r0, r1
  40715a:	4770      	bx	lr
  40715c:	238a      	movs	r3, #138	; 0x8a
  40715e:	6003      	str	r3, [r0, #0]
  407160:	f04f 30ff 	mov.w	r0, #4294967295
  407164:	4770      	bx	lr
  407166:	bf00      	nop

00407168 <_write_r>:
  407168:	b570      	push	{r4, r5, r6, lr}
  40716a:	460d      	mov	r5, r1
  40716c:	4c08      	ldr	r4, [pc, #32]	; (407190 <_write_r+0x28>)
  40716e:	4611      	mov	r1, r2
  407170:	4606      	mov	r6, r0
  407172:	461a      	mov	r2, r3
  407174:	4628      	mov	r0, r5
  407176:	2300      	movs	r3, #0
  407178:	6023      	str	r3, [r4, #0]
  40717a:	f7f9 f825 	bl	4001c8 <_write>
  40717e:	1c43      	adds	r3, r0, #1
  407180:	d000      	beq.n	407184 <_write_r+0x1c>
  407182:	bd70      	pop	{r4, r5, r6, pc}
  407184:	6823      	ldr	r3, [r4, #0]
  407186:	2b00      	cmp	r3, #0
  407188:	d0fb      	beq.n	407182 <_write_r+0x1a>
  40718a:	6033      	str	r3, [r6, #0]
  40718c:	bd70      	pop	{r4, r5, r6, pc}
  40718e:	bf00      	nop
  407190:	20000bac 	.word	0x20000bac

00407194 <__register_exitproc>:
  407194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407198:	4c25      	ldr	r4, [pc, #148]	; (407230 <__register_exitproc+0x9c>)
  40719a:	6825      	ldr	r5, [r4, #0]
  40719c:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  4071a0:	4606      	mov	r6, r0
  4071a2:	4688      	mov	r8, r1
  4071a4:	4692      	mov	sl, r2
  4071a6:	4699      	mov	r9, r3
  4071a8:	b3c4      	cbz	r4, 40721c <__register_exitproc+0x88>
  4071aa:	6860      	ldr	r0, [r4, #4]
  4071ac:	281f      	cmp	r0, #31
  4071ae:	dc17      	bgt.n	4071e0 <__register_exitproc+0x4c>
  4071b0:	1c43      	adds	r3, r0, #1
  4071b2:	b176      	cbz	r6, 4071d2 <__register_exitproc+0x3e>
  4071b4:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  4071b8:	2201      	movs	r2, #1
  4071ba:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  4071be:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  4071c2:	4082      	lsls	r2, r0
  4071c4:	4311      	orrs	r1, r2
  4071c6:	2e02      	cmp	r6, #2
  4071c8:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  4071cc:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  4071d0:	d01e      	beq.n	407210 <__register_exitproc+0x7c>
  4071d2:	3002      	adds	r0, #2
  4071d4:	6063      	str	r3, [r4, #4]
  4071d6:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  4071da:	2000      	movs	r0, #0
  4071dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4071e0:	4b14      	ldr	r3, [pc, #80]	; (407234 <__register_exitproc+0xa0>)
  4071e2:	b303      	cbz	r3, 407226 <__register_exitproc+0x92>
  4071e4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4071e8:	f7fa faaa 	bl	401740 <malloc>
  4071ec:	4604      	mov	r4, r0
  4071ee:	b1d0      	cbz	r0, 407226 <__register_exitproc+0x92>
  4071f0:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  4071f4:	2700      	movs	r7, #0
  4071f6:	e880 0088 	stmia.w	r0, {r3, r7}
  4071fa:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4071fe:	4638      	mov	r0, r7
  407200:	2301      	movs	r3, #1
  407202:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  407206:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  40720a:	2e00      	cmp	r6, #0
  40720c:	d0e1      	beq.n	4071d2 <__register_exitproc+0x3e>
  40720e:	e7d1      	b.n	4071b4 <__register_exitproc+0x20>
  407210:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  407214:	430a      	orrs	r2, r1
  407216:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  40721a:	e7da      	b.n	4071d2 <__register_exitproc+0x3e>
  40721c:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  407220:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  407224:	e7c1      	b.n	4071aa <__register_exitproc+0x16>
  407226:	f04f 30ff 	mov.w	r0, #4294967295
  40722a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40722e:	bf00      	nop
  407230:	0040811c 	.word	0x0040811c
  407234:	00401741 	.word	0x00401741

00407238 <_calloc_r>:
  407238:	b510      	push	{r4, lr}
  40723a:	fb02 f101 	mul.w	r1, r2, r1
  40723e:	f7fa fa8f 	bl	401760 <_malloc_r>
  407242:	4604      	mov	r4, r0
  407244:	b1d8      	cbz	r0, 40727e <_calloc_r+0x46>
  407246:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40724a:	f022 0203 	bic.w	r2, r2, #3
  40724e:	3a04      	subs	r2, #4
  407250:	2a24      	cmp	r2, #36	; 0x24
  407252:	d818      	bhi.n	407286 <_calloc_r+0x4e>
  407254:	2a13      	cmp	r2, #19
  407256:	d914      	bls.n	407282 <_calloc_r+0x4a>
  407258:	2300      	movs	r3, #0
  40725a:	2a1b      	cmp	r2, #27
  40725c:	6003      	str	r3, [r0, #0]
  40725e:	6043      	str	r3, [r0, #4]
  407260:	d916      	bls.n	407290 <_calloc_r+0x58>
  407262:	2a24      	cmp	r2, #36	; 0x24
  407264:	6083      	str	r3, [r0, #8]
  407266:	60c3      	str	r3, [r0, #12]
  407268:	bf11      	iteee	ne
  40726a:	f100 0210 	addne.w	r2, r0, #16
  40726e:	6103      	streq	r3, [r0, #16]
  407270:	6143      	streq	r3, [r0, #20]
  407272:	f100 0218 	addeq.w	r2, r0, #24
  407276:	2300      	movs	r3, #0
  407278:	6013      	str	r3, [r2, #0]
  40727a:	6053      	str	r3, [r2, #4]
  40727c:	6093      	str	r3, [r2, #8]
  40727e:	4620      	mov	r0, r4
  407280:	bd10      	pop	{r4, pc}
  407282:	4602      	mov	r2, r0
  407284:	e7f7      	b.n	407276 <_calloc_r+0x3e>
  407286:	2100      	movs	r1, #0
  407288:	f7fa fdee 	bl	401e68 <memset>
  40728c:	4620      	mov	r0, r4
  40728e:	bd10      	pop	{r4, pc}
  407290:	f100 0208 	add.w	r2, r0, #8
  407294:	e7ef      	b.n	407276 <_calloc_r+0x3e>
  407296:	bf00      	nop

00407298 <_close_r>:
  407298:	b538      	push	{r3, r4, r5, lr}
  40729a:	4c07      	ldr	r4, [pc, #28]	; (4072b8 <_close_r+0x20>)
  40729c:	2300      	movs	r3, #0
  40729e:	4605      	mov	r5, r0
  4072a0:	4608      	mov	r0, r1
  4072a2:	6023      	str	r3, [r4, #0]
  4072a4:	f7f9 fbf4 	bl	400a90 <_close>
  4072a8:	1c43      	adds	r3, r0, #1
  4072aa:	d000      	beq.n	4072ae <_close_r+0x16>
  4072ac:	bd38      	pop	{r3, r4, r5, pc}
  4072ae:	6823      	ldr	r3, [r4, #0]
  4072b0:	2b00      	cmp	r3, #0
  4072b2:	d0fb      	beq.n	4072ac <_close_r+0x14>
  4072b4:	602b      	str	r3, [r5, #0]
  4072b6:	bd38      	pop	{r3, r4, r5, pc}
  4072b8:	20000bac 	.word	0x20000bac

004072bc <_fclose_r>:
  4072bc:	2900      	cmp	r1, #0
  4072be:	d03d      	beq.n	40733c <_fclose_r+0x80>
  4072c0:	b570      	push	{r4, r5, r6, lr}
  4072c2:	4605      	mov	r5, r0
  4072c4:	460c      	mov	r4, r1
  4072c6:	b108      	cbz	r0, 4072cc <_fclose_r+0x10>
  4072c8:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4072ca:	b37b      	cbz	r3, 40732c <_fclose_r+0x70>
  4072cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4072d0:	b90b      	cbnz	r3, 4072d6 <_fclose_r+0x1a>
  4072d2:	2000      	movs	r0, #0
  4072d4:	bd70      	pop	{r4, r5, r6, pc}
  4072d6:	4621      	mov	r1, r4
  4072d8:	4628      	mov	r0, r5
  4072da:	f7fe fb25 	bl	405928 <__sflush_r>
  4072de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4072e0:	4606      	mov	r6, r0
  4072e2:	b133      	cbz	r3, 4072f2 <_fclose_r+0x36>
  4072e4:	69e1      	ldr	r1, [r4, #28]
  4072e6:	4628      	mov	r0, r5
  4072e8:	4798      	blx	r3
  4072ea:	2800      	cmp	r0, #0
  4072ec:	bfb8      	it	lt
  4072ee:	f04f 36ff 	movlt.w	r6, #4294967295
  4072f2:	89a3      	ldrh	r3, [r4, #12]
  4072f4:	061b      	lsls	r3, r3, #24
  4072f6:	d41c      	bmi.n	407332 <_fclose_r+0x76>
  4072f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4072fa:	b141      	cbz	r1, 40730e <_fclose_r+0x52>
  4072fc:	f104 0340 	add.w	r3, r4, #64	; 0x40
  407300:	4299      	cmp	r1, r3
  407302:	d002      	beq.n	40730a <_fclose_r+0x4e>
  407304:	4628      	mov	r0, r5
  407306:	f7fe fd11 	bl	405d2c <_free_r>
  40730a:	2300      	movs	r3, #0
  40730c:	6323      	str	r3, [r4, #48]	; 0x30
  40730e:	6c61      	ldr	r1, [r4, #68]	; 0x44
  407310:	b121      	cbz	r1, 40731c <_fclose_r+0x60>
  407312:	4628      	mov	r0, r5
  407314:	f7fe fd0a 	bl	405d2c <_free_r>
  407318:	2300      	movs	r3, #0
  40731a:	6463      	str	r3, [r4, #68]	; 0x44
  40731c:	f7fe fc42 	bl	405ba4 <__sfp_lock_acquire>
  407320:	2300      	movs	r3, #0
  407322:	81a3      	strh	r3, [r4, #12]
  407324:	f7fe fc40 	bl	405ba8 <__sfp_lock_release>
  407328:	4630      	mov	r0, r6
  40732a:	bd70      	pop	{r4, r5, r6, pc}
  40732c:	f7fe fc34 	bl	405b98 <__sinit>
  407330:	e7cc      	b.n	4072cc <_fclose_r+0x10>
  407332:	6921      	ldr	r1, [r4, #16]
  407334:	4628      	mov	r0, r5
  407336:	f7fe fcf9 	bl	405d2c <_free_r>
  40733a:	e7dd      	b.n	4072f8 <_fclose_r+0x3c>
  40733c:	2000      	movs	r0, #0
  40733e:	4770      	bx	lr

00407340 <_fstat_r>:
  407340:	b538      	push	{r3, r4, r5, lr}
  407342:	460b      	mov	r3, r1
  407344:	4c07      	ldr	r4, [pc, #28]	; (407364 <_fstat_r+0x24>)
  407346:	4605      	mov	r5, r0
  407348:	4611      	mov	r1, r2
  40734a:	4618      	mov	r0, r3
  40734c:	2300      	movs	r3, #0
  40734e:	6023      	str	r3, [r4, #0]
  407350:	f7f9 fba2 	bl	400a98 <_fstat>
  407354:	1c43      	adds	r3, r0, #1
  407356:	d000      	beq.n	40735a <_fstat_r+0x1a>
  407358:	bd38      	pop	{r3, r4, r5, pc}
  40735a:	6823      	ldr	r3, [r4, #0]
  40735c:	2b00      	cmp	r3, #0
  40735e:	d0fb      	beq.n	407358 <_fstat_r+0x18>
  407360:	602b      	str	r3, [r5, #0]
  407362:	bd38      	pop	{r3, r4, r5, pc}
  407364:	20000bac 	.word	0x20000bac

00407368 <_isatty_r>:
  407368:	b538      	push	{r3, r4, r5, lr}
  40736a:	4c07      	ldr	r4, [pc, #28]	; (407388 <_isatty_r+0x20>)
  40736c:	2300      	movs	r3, #0
  40736e:	4605      	mov	r5, r0
  407370:	4608      	mov	r0, r1
  407372:	6023      	str	r3, [r4, #0]
  407374:	f7f9 fb96 	bl	400aa4 <_isatty>
  407378:	1c43      	adds	r3, r0, #1
  40737a:	d000      	beq.n	40737e <_isatty_r+0x16>
  40737c:	bd38      	pop	{r3, r4, r5, pc}
  40737e:	6823      	ldr	r3, [r4, #0]
  407380:	2b00      	cmp	r3, #0
  407382:	d0fb      	beq.n	40737c <_isatty_r+0x14>
  407384:	602b      	str	r3, [r5, #0]
  407386:	bd38      	pop	{r3, r4, r5, pc}
  407388:	20000bac 	.word	0x20000bac

0040738c <_lseek_r>:
  40738c:	b570      	push	{r4, r5, r6, lr}
  40738e:	460d      	mov	r5, r1
  407390:	4c08      	ldr	r4, [pc, #32]	; (4073b4 <_lseek_r+0x28>)
  407392:	4611      	mov	r1, r2
  407394:	4606      	mov	r6, r0
  407396:	461a      	mov	r2, r3
  407398:	4628      	mov	r0, r5
  40739a:	2300      	movs	r3, #0
  40739c:	6023      	str	r3, [r4, #0]
  40739e:	f7f9 fb83 	bl	400aa8 <_lseek>
  4073a2:	1c43      	adds	r3, r0, #1
  4073a4:	d000      	beq.n	4073a8 <_lseek_r+0x1c>
  4073a6:	bd70      	pop	{r4, r5, r6, pc}
  4073a8:	6823      	ldr	r3, [r4, #0]
  4073aa:	2b00      	cmp	r3, #0
  4073ac:	d0fb      	beq.n	4073a6 <_lseek_r+0x1a>
  4073ae:	6033      	str	r3, [r6, #0]
  4073b0:	bd70      	pop	{r4, r5, r6, pc}
  4073b2:	bf00      	nop
  4073b4:	20000bac 	.word	0x20000bac

004073b8 <_read_r>:
  4073b8:	b570      	push	{r4, r5, r6, lr}
  4073ba:	460d      	mov	r5, r1
  4073bc:	4c08      	ldr	r4, [pc, #32]	; (4073e0 <_read_r+0x28>)
  4073be:	4611      	mov	r1, r2
  4073c0:	4606      	mov	r6, r0
  4073c2:	461a      	mov	r2, r3
  4073c4:	4628      	mov	r0, r5
  4073c6:	2300      	movs	r3, #0
  4073c8:	6023      	str	r3, [r4, #0]
  4073ca:	f7f8 fedf 	bl	40018c <_read>
  4073ce:	1c43      	adds	r3, r0, #1
  4073d0:	d000      	beq.n	4073d4 <_read_r+0x1c>
  4073d2:	bd70      	pop	{r4, r5, r6, pc}
  4073d4:	6823      	ldr	r3, [r4, #0]
  4073d6:	2b00      	cmp	r3, #0
  4073d8:	d0fb      	beq.n	4073d2 <_read_r+0x1a>
  4073da:	6033      	str	r3, [r6, #0]
  4073dc:	bd70      	pop	{r4, r5, r6, pc}
  4073de:	bf00      	nop
  4073e0:	20000bac 	.word	0x20000bac

004073e4 <__aeabi_drsub>:
  4073e4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4073e8:	e002      	b.n	4073f0 <__adddf3>
  4073ea:	bf00      	nop

004073ec <__aeabi_dsub>:
  4073ec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004073f0 <__adddf3>:
  4073f0:	b530      	push	{r4, r5, lr}
  4073f2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4073f6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4073fa:	ea94 0f05 	teq	r4, r5
  4073fe:	bf08      	it	eq
  407400:	ea90 0f02 	teqeq	r0, r2
  407404:	bf1f      	itttt	ne
  407406:	ea54 0c00 	orrsne.w	ip, r4, r0
  40740a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40740e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  407412:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407416:	f000 80e2 	beq.w	4075de <__adddf3+0x1ee>
  40741a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40741e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  407422:	bfb8      	it	lt
  407424:	426d      	neglt	r5, r5
  407426:	dd0c      	ble.n	407442 <__adddf3+0x52>
  407428:	442c      	add	r4, r5
  40742a:	ea80 0202 	eor.w	r2, r0, r2
  40742e:	ea81 0303 	eor.w	r3, r1, r3
  407432:	ea82 0000 	eor.w	r0, r2, r0
  407436:	ea83 0101 	eor.w	r1, r3, r1
  40743a:	ea80 0202 	eor.w	r2, r0, r2
  40743e:	ea81 0303 	eor.w	r3, r1, r3
  407442:	2d36      	cmp	r5, #54	; 0x36
  407444:	bf88      	it	hi
  407446:	bd30      	pophi	{r4, r5, pc}
  407448:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40744c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407450:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407454:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407458:	d002      	beq.n	407460 <__adddf3+0x70>
  40745a:	4240      	negs	r0, r0
  40745c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407460:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407464:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407468:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40746c:	d002      	beq.n	407474 <__adddf3+0x84>
  40746e:	4252      	negs	r2, r2
  407470:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407474:	ea94 0f05 	teq	r4, r5
  407478:	f000 80a7 	beq.w	4075ca <__adddf3+0x1da>
  40747c:	f1a4 0401 	sub.w	r4, r4, #1
  407480:	f1d5 0e20 	rsbs	lr, r5, #32
  407484:	db0d      	blt.n	4074a2 <__adddf3+0xb2>
  407486:	fa02 fc0e 	lsl.w	ip, r2, lr
  40748a:	fa22 f205 	lsr.w	r2, r2, r5
  40748e:	1880      	adds	r0, r0, r2
  407490:	f141 0100 	adc.w	r1, r1, #0
  407494:	fa03 f20e 	lsl.w	r2, r3, lr
  407498:	1880      	adds	r0, r0, r2
  40749a:	fa43 f305 	asr.w	r3, r3, r5
  40749e:	4159      	adcs	r1, r3
  4074a0:	e00e      	b.n	4074c0 <__adddf3+0xd0>
  4074a2:	f1a5 0520 	sub.w	r5, r5, #32
  4074a6:	f10e 0e20 	add.w	lr, lr, #32
  4074aa:	2a01      	cmp	r2, #1
  4074ac:	fa03 fc0e 	lsl.w	ip, r3, lr
  4074b0:	bf28      	it	cs
  4074b2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4074b6:	fa43 f305 	asr.w	r3, r3, r5
  4074ba:	18c0      	adds	r0, r0, r3
  4074bc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4074c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4074c4:	d507      	bpl.n	4074d6 <__adddf3+0xe6>
  4074c6:	f04f 0e00 	mov.w	lr, #0
  4074ca:	f1dc 0c00 	rsbs	ip, ip, #0
  4074ce:	eb7e 0000 	sbcs.w	r0, lr, r0
  4074d2:	eb6e 0101 	sbc.w	r1, lr, r1
  4074d6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4074da:	d31b      	bcc.n	407514 <__adddf3+0x124>
  4074dc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4074e0:	d30c      	bcc.n	4074fc <__adddf3+0x10c>
  4074e2:	0849      	lsrs	r1, r1, #1
  4074e4:	ea5f 0030 	movs.w	r0, r0, rrx
  4074e8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4074ec:	f104 0401 	add.w	r4, r4, #1
  4074f0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4074f4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4074f8:	f080 809a 	bcs.w	407630 <__adddf3+0x240>
  4074fc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  407500:	bf08      	it	eq
  407502:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407506:	f150 0000 	adcs.w	r0, r0, #0
  40750a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40750e:	ea41 0105 	orr.w	r1, r1, r5
  407512:	bd30      	pop	{r4, r5, pc}
  407514:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407518:	4140      	adcs	r0, r0
  40751a:	eb41 0101 	adc.w	r1, r1, r1
  40751e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407522:	f1a4 0401 	sub.w	r4, r4, #1
  407526:	d1e9      	bne.n	4074fc <__adddf3+0x10c>
  407528:	f091 0f00 	teq	r1, #0
  40752c:	bf04      	itt	eq
  40752e:	4601      	moveq	r1, r0
  407530:	2000      	moveq	r0, #0
  407532:	fab1 f381 	clz	r3, r1
  407536:	bf08      	it	eq
  407538:	3320      	addeq	r3, #32
  40753a:	f1a3 030b 	sub.w	r3, r3, #11
  40753e:	f1b3 0220 	subs.w	r2, r3, #32
  407542:	da0c      	bge.n	40755e <__adddf3+0x16e>
  407544:	320c      	adds	r2, #12
  407546:	dd08      	ble.n	40755a <__adddf3+0x16a>
  407548:	f102 0c14 	add.w	ip, r2, #20
  40754c:	f1c2 020c 	rsb	r2, r2, #12
  407550:	fa01 f00c 	lsl.w	r0, r1, ip
  407554:	fa21 f102 	lsr.w	r1, r1, r2
  407558:	e00c      	b.n	407574 <__adddf3+0x184>
  40755a:	f102 0214 	add.w	r2, r2, #20
  40755e:	bfd8      	it	le
  407560:	f1c2 0c20 	rsble	ip, r2, #32
  407564:	fa01 f102 	lsl.w	r1, r1, r2
  407568:	fa20 fc0c 	lsr.w	ip, r0, ip
  40756c:	bfdc      	itt	le
  40756e:	ea41 010c 	orrle.w	r1, r1, ip
  407572:	4090      	lslle	r0, r2
  407574:	1ae4      	subs	r4, r4, r3
  407576:	bfa2      	ittt	ge
  407578:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40757c:	4329      	orrge	r1, r5
  40757e:	bd30      	popge	{r4, r5, pc}
  407580:	ea6f 0404 	mvn.w	r4, r4
  407584:	3c1f      	subs	r4, #31
  407586:	da1c      	bge.n	4075c2 <__adddf3+0x1d2>
  407588:	340c      	adds	r4, #12
  40758a:	dc0e      	bgt.n	4075aa <__adddf3+0x1ba>
  40758c:	f104 0414 	add.w	r4, r4, #20
  407590:	f1c4 0220 	rsb	r2, r4, #32
  407594:	fa20 f004 	lsr.w	r0, r0, r4
  407598:	fa01 f302 	lsl.w	r3, r1, r2
  40759c:	ea40 0003 	orr.w	r0, r0, r3
  4075a0:	fa21 f304 	lsr.w	r3, r1, r4
  4075a4:	ea45 0103 	orr.w	r1, r5, r3
  4075a8:	bd30      	pop	{r4, r5, pc}
  4075aa:	f1c4 040c 	rsb	r4, r4, #12
  4075ae:	f1c4 0220 	rsb	r2, r4, #32
  4075b2:	fa20 f002 	lsr.w	r0, r0, r2
  4075b6:	fa01 f304 	lsl.w	r3, r1, r4
  4075ba:	ea40 0003 	orr.w	r0, r0, r3
  4075be:	4629      	mov	r1, r5
  4075c0:	bd30      	pop	{r4, r5, pc}
  4075c2:	fa21 f004 	lsr.w	r0, r1, r4
  4075c6:	4629      	mov	r1, r5
  4075c8:	bd30      	pop	{r4, r5, pc}
  4075ca:	f094 0f00 	teq	r4, #0
  4075ce:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4075d2:	bf06      	itte	eq
  4075d4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4075d8:	3401      	addeq	r4, #1
  4075da:	3d01      	subne	r5, #1
  4075dc:	e74e      	b.n	40747c <__adddf3+0x8c>
  4075de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4075e2:	bf18      	it	ne
  4075e4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4075e8:	d029      	beq.n	40763e <__adddf3+0x24e>
  4075ea:	ea94 0f05 	teq	r4, r5
  4075ee:	bf08      	it	eq
  4075f0:	ea90 0f02 	teqeq	r0, r2
  4075f4:	d005      	beq.n	407602 <__adddf3+0x212>
  4075f6:	ea54 0c00 	orrs.w	ip, r4, r0
  4075fa:	bf04      	itt	eq
  4075fc:	4619      	moveq	r1, r3
  4075fe:	4610      	moveq	r0, r2
  407600:	bd30      	pop	{r4, r5, pc}
  407602:	ea91 0f03 	teq	r1, r3
  407606:	bf1e      	ittt	ne
  407608:	2100      	movne	r1, #0
  40760a:	2000      	movne	r0, #0
  40760c:	bd30      	popne	{r4, r5, pc}
  40760e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  407612:	d105      	bne.n	407620 <__adddf3+0x230>
  407614:	0040      	lsls	r0, r0, #1
  407616:	4149      	adcs	r1, r1
  407618:	bf28      	it	cs
  40761a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40761e:	bd30      	pop	{r4, r5, pc}
  407620:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  407624:	bf3c      	itt	cc
  407626:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40762a:	bd30      	popcc	{r4, r5, pc}
  40762c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407630:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  407634:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407638:	f04f 0000 	mov.w	r0, #0
  40763c:	bd30      	pop	{r4, r5, pc}
  40763e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407642:	bf1a      	itte	ne
  407644:	4619      	movne	r1, r3
  407646:	4610      	movne	r0, r2
  407648:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40764c:	bf1c      	itt	ne
  40764e:	460b      	movne	r3, r1
  407650:	4602      	movne	r2, r0
  407652:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407656:	bf06      	itte	eq
  407658:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40765c:	ea91 0f03 	teqeq	r1, r3
  407660:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407664:	bd30      	pop	{r4, r5, pc}
  407666:	bf00      	nop

00407668 <__aeabi_ui2d>:
  407668:	f090 0f00 	teq	r0, #0
  40766c:	bf04      	itt	eq
  40766e:	2100      	moveq	r1, #0
  407670:	4770      	bxeq	lr
  407672:	b530      	push	{r4, r5, lr}
  407674:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407678:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40767c:	f04f 0500 	mov.w	r5, #0
  407680:	f04f 0100 	mov.w	r1, #0
  407684:	e750      	b.n	407528 <__adddf3+0x138>
  407686:	bf00      	nop

00407688 <__aeabi_i2d>:
  407688:	f090 0f00 	teq	r0, #0
  40768c:	bf04      	itt	eq
  40768e:	2100      	moveq	r1, #0
  407690:	4770      	bxeq	lr
  407692:	b530      	push	{r4, r5, lr}
  407694:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407698:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40769c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4076a0:	bf48      	it	mi
  4076a2:	4240      	negmi	r0, r0
  4076a4:	f04f 0100 	mov.w	r1, #0
  4076a8:	e73e      	b.n	407528 <__adddf3+0x138>
  4076aa:	bf00      	nop

004076ac <__aeabi_f2d>:
  4076ac:	0042      	lsls	r2, r0, #1
  4076ae:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4076b2:	ea4f 0131 	mov.w	r1, r1, rrx
  4076b6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4076ba:	bf1f      	itttt	ne
  4076bc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4076c0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4076c4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4076c8:	4770      	bxne	lr
  4076ca:	f092 0f00 	teq	r2, #0
  4076ce:	bf14      	ite	ne
  4076d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4076d4:	4770      	bxeq	lr
  4076d6:	b530      	push	{r4, r5, lr}
  4076d8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4076dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4076e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4076e4:	e720      	b.n	407528 <__adddf3+0x138>
  4076e6:	bf00      	nop

004076e8 <__aeabi_ul2d>:
  4076e8:	ea50 0201 	orrs.w	r2, r0, r1
  4076ec:	bf08      	it	eq
  4076ee:	4770      	bxeq	lr
  4076f0:	b530      	push	{r4, r5, lr}
  4076f2:	f04f 0500 	mov.w	r5, #0
  4076f6:	e00a      	b.n	40770e <__aeabi_l2d+0x16>

004076f8 <__aeabi_l2d>:
  4076f8:	ea50 0201 	orrs.w	r2, r0, r1
  4076fc:	bf08      	it	eq
  4076fe:	4770      	bxeq	lr
  407700:	b530      	push	{r4, r5, lr}
  407702:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  407706:	d502      	bpl.n	40770e <__aeabi_l2d+0x16>
  407708:	4240      	negs	r0, r0
  40770a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40770e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407712:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407716:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40771a:	f43f aedc 	beq.w	4074d6 <__adddf3+0xe6>
  40771e:	f04f 0203 	mov.w	r2, #3
  407722:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407726:	bf18      	it	ne
  407728:	3203      	addne	r2, #3
  40772a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40772e:	bf18      	it	ne
  407730:	3203      	addne	r2, #3
  407732:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  407736:	f1c2 0320 	rsb	r3, r2, #32
  40773a:	fa00 fc03 	lsl.w	ip, r0, r3
  40773e:	fa20 f002 	lsr.w	r0, r0, r2
  407742:	fa01 fe03 	lsl.w	lr, r1, r3
  407746:	ea40 000e 	orr.w	r0, r0, lr
  40774a:	fa21 f102 	lsr.w	r1, r1, r2
  40774e:	4414      	add	r4, r2
  407750:	e6c1      	b.n	4074d6 <__adddf3+0xe6>
  407752:	bf00      	nop

00407754 <__aeabi_dmul>:
  407754:	b570      	push	{r4, r5, r6, lr}
  407756:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40775a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40775e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407762:	bf1d      	ittte	ne
  407764:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407768:	ea94 0f0c 	teqne	r4, ip
  40776c:	ea95 0f0c 	teqne	r5, ip
  407770:	f000 f8de 	bleq	407930 <__aeabi_dmul+0x1dc>
  407774:	442c      	add	r4, r5
  407776:	ea81 0603 	eor.w	r6, r1, r3
  40777a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40777e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407782:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  407786:	bf18      	it	ne
  407788:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40778c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407790:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407794:	d038      	beq.n	407808 <__aeabi_dmul+0xb4>
  407796:	fba0 ce02 	umull	ip, lr, r0, r2
  40779a:	f04f 0500 	mov.w	r5, #0
  40779e:	fbe1 e502 	umlal	lr, r5, r1, r2
  4077a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4077a6:	fbe0 e503 	umlal	lr, r5, r0, r3
  4077aa:	f04f 0600 	mov.w	r6, #0
  4077ae:	fbe1 5603 	umlal	r5, r6, r1, r3
  4077b2:	f09c 0f00 	teq	ip, #0
  4077b6:	bf18      	it	ne
  4077b8:	f04e 0e01 	orrne.w	lr, lr, #1
  4077bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4077c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4077c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4077c8:	d204      	bcs.n	4077d4 <__aeabi_dmul+0x80>
  4077ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4077ce:	416d      	adcs	r5, r5
  4077d0:	eb46 0606 	adc.w	r6, r6, r6
  4077d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4077d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4077dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4077e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4077e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4077e8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4077ec:	bf88      	it	hi
  4077ee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4077f2:	d81e      	bhi.n	407832 <__aeabi_dmul+0xde>
  4077f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4077f8:	bf08      	it	eq
  4077fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4077fe:	f150 0000 	adcs.w	r0, r0, #0
  407802:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407806:	bd70      	pop	{r4, r5, r6, pc}
  407808:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40780c:	ea46 0101 	orr.w	r1, r6, r1
  407810:	ea40 0002 	orr.w	r0, r0, r2
  407814:	ea81 0103 	eor.w	r1, r1, r3
  407818:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40781c:	bfc2      	ittt	gt
  40781e:	ebd4 050c 	rsbsgt	r5, r4, ip
  407822:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407826:	bd70      	popgt	{r4, r5, r6, pc}
  407828:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40782c:	f04f 0e00 	mov.w	lr, #0
  407830:	3c01      	subs	r4, #1
  407832:	f300 80ab 	bgt.w	40798c <__aeabi_dmul+0x238>
  407836:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40783a:	bfde      	ittt	le
  40783c:	2000      	movle	r0, #0
  40783e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  407842:	bd70      	pople	{r4, r5, r6, pc}
  407844:	f1c4 0400 	rsb	r4, r4, #0
  407848:	3c20      	subs	r4, #32
  40784a:	da35      	bge.n	4078b8 <__aeabi_dmul+0x164>
  40784c:	340c      	adds	r4, #12
  40784e:	dc1b      	bgt.n	407888 <__aeabi_dmul+0x134>
  407850:	f104 0414 	add.w	r4, r4, #20
  407854:	f1c4 0520 	rsb	r5, r4, #32
  407858:	fa00 f305 	lsl.w	r3, r0, r5
  40785c:	fa20 f004 	lsr.w	r0, r0, r4
  407860:	fa01 f205 	lsl.w	r2, r1, r5
  407864:	ea40 0002 	orr.w	r0, r0, r2
  407868:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40786c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407870:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407874:	fa21 f604 	lsr.w	r6, r1, r4
  407878:	eb42 0106 	adc.w	r1, r2, r6
  40787c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407880:	bf08      	it	eq
  407882:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407886:	bd70      	pop	{r4, r5, r6, pc}
  407888:	f1c4 040c 	rsb	r4, r4, #12
  40788c:	f1c4 0520 	rsb	r5, r4, #32
  407890:	fa00 f304 	lsl.w	r3, r0, r4
  407894:	fa20 f005 	lsr.w	r0, r0, r5
  407898:	fa01 f204 	lsl.w	r2, r1, r4
  40789c:	ea40 0002 	orr.w	r0, r0, r2
  4078a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4078a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4078a8:	f141 0100 	adc.w	r1, r1, #0
  4078ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4078b0:	bf08      	it	eq
  4078b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4078b6:	bd70      	pop	{r4, r5, r6, pc}
  4078b8:	f1c4 0520 	rsb	r5, r4, #32
  4078bc:	fa00 f205 	lsl.w	r2, r0, r5
  4078c0:	ea4e 0e02 	orr.w	lr, lr, r2
  4078c4:	fa20 f304 	lsr.w	r3, r0, r4
  4078c8:	fa01 f205 	lsl.w	r2, r1, r5
  4078cc:	ea43 0302 	orr.w	r3, r3, r2
  4078d0:	fa21 f004 	lsr.w	r0, r1, r4
  4078d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4078d8:	fa21 f204 	lsr.w	r2, r1, r4
  4078dc:	ea20 0002 	bic.w	r0, r0, r2
  4078e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4078e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4078e8:	bf08      	it	eq
  4078ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4078ee:	bd70      	pop	{r4, r5, r6, pc}
  4078f0:	f094 0f00 	teq	r4, #0
  4078f4:	d10f      	bne.n	407916 <__aeabi_dmul+0x1c2>
  4078f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4078fa:	0040      	lsls	r0, r0, #1
  4078fc:	eb41 0101 	adc.w	r1, r1, r1
  407900:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407904:	bf08      	it	eq
  407906:	3c01      	subeq	r4, #1
  407908:	d0f7      	beq.n	4078fa <__aeabi_dmul+0x1a6>
  40790a:	ea41 0106 	orr.w	r1, r1, r6
  40790e:	f095 0f00 	teq	r5, #0
  407912:	bf18      	it	ne
  407914:	4770      	bxne	lr
  407916:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40791a:	0052      	lsls	r2, r2, #1
  40791c:	eb43 0303 	adc.w	r3, r3, r3
  407920:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  407924:	bf08      	it	eq
  407926:	3d01      	subeq	r5, #1
  407928:	d0f7      	beq.n	40791a <__aeabi_dmul+0x1c6>
  40792a:	ea43 0306 	orr.w	r3, r3, r6
  40792e:	4770      	bx	lr
  407930:	ea94 0f0c 	teq	r4, ip
  407934:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407938:	bf18      	it	ne
  40793a:	ea95 0f0c 	teqne	r5, ip
  40793e:	d00c      	beq.n	40795a <__aeabi_dmul+0x206>
  407940:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407944:	bf18      	it	ne
  407946:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40794a:	d1d1      	bne.n	4078f0 <__aeabi_dmul+0x19c>
  40794c:	ea81 0103 	eor.w	r1, r1, r3
  407950:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407954:	f04f 0000 	mov.w	r0, #0
  407958:	bd70      	pop	{r4, r5, r6, pc}
  40795a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40795e:	bf06      	itte	eq
  407960:	4610      	moveq	r0, r2
  407962:	4619      	moveq	r1, r3
  407964:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407968:	d019      	beq.n	40799e <__aeabi_dmul+0x24a>
  40796a:	ea94 0f0c 	teq	r4, ip
  40796e:	d102      	bne.n	407976 <__aeabi_dmul+0x222>
  407970:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  407974:	d113      	bne.n	40799e <__aeabi_dmul+0x24a>
  407976:	ea95 0f0c 	teq	r5, ip
  40797a:	d105      	bne.n	407988 <__aeabi_dmul+0x234>
  40797c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407980:	bf1c      	itt	ne
  407982:	4610      	movne	r0, r2
  407984:	4619      	movne	r1, r3
  407986:	d10a      	bne.n	40799e <__aeabi_dmul+0x24a>
  407988:	ea81 0103 	eor.w	r1, r1, r3
  40798c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407990:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407994:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407998:	f04f 0000 	mov.w	r0, #0
  40799c:	bd70      	pop	{r4, r5, r6, pc}
  40799e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4079a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4079a6:	bd70      	pop	{r4, r5, r6, pc}

004079a8 <__aeabi_ddiv>:
  4079a8:	b570      	push	{r4, r5, r6, lr}
  4079aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4079ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4079b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4079b6:	bf1d      	ittte	ne
  4079b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4079bc:	ea94 0f0c 	teqne	r4, ip
  4079c0:	ea95 0f0c 	teqne	r5, ip
  4079c4:	f000 f8a7 	bleq	407b16 <__aeabi_ddiv+0x16e>
  4079c8:	eba4 0405 	sub.w	r4, r4, r5
  4079cc:	ea81 0e03 	eor.w	lr, r1, r3
  4079d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4079d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4079d8:	f000 8088 	beq.w	407aec <__aeabi_ddiv+0x144>
  4079dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4079e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4079e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4079e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4079ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4079f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4079f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4079f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4079fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  407a00:	429d      	cmp	r5, r3
  407a02:	bf08      	it	eq
  407a04:	4296      	cmpeq	r6, r2
  407a06:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  407a0a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  407a0e:	d202      	bcs.n	407a16 <__aeabi_ddiv+0x6e>
  407a10:	085b      	lsrs	r3, r3, #1
  407a12:	ea4f 0232 	mov.w	r2, r2, rrx
  407a16:	1ab6      	subs	r6, r6, r2
  407a18:	eb65 0503 	sbc.w	r5, r5, r3
  407a1c:	085b      	lsrs	r3, r3, #1
  407a1e:	ea4f 0232 	mov.w	r2, r2, rrx
  407a22:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  407a26:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  407a2a:	ebb6 0e02 	subs.w	lr, r6, r2
  407a2e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407a32:	bf22      	ittt	cs
  407a34:	1ab6      	subcs	r6, r6, r2
  407a36:	4675      	movcs	r5, lr
  407a38:	ea40 000c 	orrcs.w	r0, r0, ip
  407a3c:	085b      	lsrs	r3, r3, #1
  407a3e:	ea4f 0232 	mov.w	r2, r2, rrx
  407a42:	ebb6 0e02 	subs.w	lr, r6, r2
  407a46:	eb75 0e03 	sbcs.w	lr, r5, r3
  407a4a:	bf22      	ittt	cs
  407a4c:	1ab6      	subcs	r6, r6, r2
  407a4e:	4675      	movcs	r5, lr
  407a50:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  407a54:	085b      	lsrs	r3, r3, #1
  407a56:	ea4f 0232 	mov.w	r2, r2, rrx
  407a5a:	ebb6 0e02 	subs.w	lr, r6, r2
  407a5e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407a62:	bf22      	ittt	cs
  407a64:	1ab6      	subcs	r6, r6, r2
  407a66:	4675      	movcs	r5, lr
  407a68:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  407a6c:	085b      	lsrs	r3, r3, #1
  407a6e:	ea4f 0232 	mov.w	r2, r2, rrx
  407a72:	ebb6 0e02 	subs.w	lr, r6, r2
  407a76:	eb75 0e03 	sbcs.w	lr, r5, r3
  407a7a:	bf22      	ittt	cs
  407a7c:	1ab6      	subcs	r6, r6, r2
  407a7e:	4675      	movcs	r5, lr
  407a80:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  407a84:	ea55 0e06 	orrs.w	lr, r5, r6
  407a88:	d018      	beq.n	407abc <__aeabi_ddiv+0x114>
  407a8a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  407a8e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  407a92:	ea4f 1606 	mov.w	r6, r6, lsl #4
  407a96:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  407a9a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  407a9e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  407aa2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  407aa6:	d1c0      	bne.n	407a2a <__aeabi_ddiv+0x82>
  407aa8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407aac:	d10b      	bne.n	407ac6 <__aeabi_ddiv+0x11e>
  407aae:	ea41 0100 	orr.w	r1, r1, r0
  407ab2:	f04f 0000 	mov.w	r0, #0
  407ab6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  407aba:	e7b6      	b.n	407a2a <__aeabi_ddiv+0x82>
  407abc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407ac0:	bf04      	itt	eq
  407ac2:	4301      	orreq	r1, r0
  407ac4:	2000      	moveq	r0, #0
  407ac6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407aca:	bf88      	it	hi
  407acc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407ad0:	f63f aeaf 	bhi.w	407832 <__aeabi_dmul+0xde>
  407ad4:	ebb5 0c03 	subs.w	ip, r5, r3
  407ad8:	bf04      	itt	eq
  407ada:	ebb6 0c02 	subseq.w	ip, r6, r2
  407ade:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407ae2:	f150 0000 	adcs.w	r0, r0, #0
  407ae6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407aea:	bd70      	pop	{r4, r5, r6, pc}
  407aec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  407af0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  407af4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  407af8:	bfc2      	ittt	gt
  407afa:	ebd4 050c 	rsbsgt	r5, r4, ip
  407afe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407b02:	bd70      	popgt	{r4, r5, r6, pc}
  407b04:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407b08:	f04f 0e00 	mov.w	lr, #0
  407b0c:	3c01      	subs	r4, #1
  407b0e:	e690      	b.n	407832 <__aeabi_dmul+0xde>
  407b10:	ea45 0e06 	orr.w	lr, r5, r6
  407b14:	e68d      	b.n	407832 <__aeabi_dmul+0xde>
  407b16:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407b1a:	ea94 0f0c 	teq	r4, ip
  407b1e:	bf08      	it	eq
  407b20:	ea95 0f0c 	teqeq	r5, ip
  407b24:	f43f af3b 	beq.w	40799e <__aeabi_dmul+0x24a>
  407b28:	ea94 0f0c 	teq	r4, ip
  407b2c:	d10a      	bne.n	407b44 <__aeabi_ddiv+0x19c>
  407b2e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407b32:	f47f af34 	bne.w	40799e <__aeabi_dmul+0x24a>
  407b36:	ea95 0f0c 	teq	r5, ip
  407b3a:	f47f af25 	bne.w	407988 <__aeabi_dmul+0x234>
  407b3e:	4610      	mov	r0, r2
  407b40:	4619      	mov	r1, r3
  407b42:	e72c      	b.n	40799e <__aeabi_dmul+0x24a>
  407b44:	ea95 0f0c 	teq	r5, ip
  407b48:	d106      	bne.n	407b58 <__aeabi_ddiv+0x1b0>
  407b4a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407b4e:	f43f aefd 	beq.w	40794c <__aeabi_dmul+0x1f8>
  407b52:	4610      	mov	r0, r2
  407b54:	4619      	mov	r1, r3
  407b56:	e722      	b.n	40799e <__aeabi_dmul+0x24a>
  407b58:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407b5c:	bf18      	it	ne
  407b5e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407b62:	f47f aec5 	bne.w	4078f0 <__aeabi_dmul+0x19c>
  407b66:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  407b6a:	f47f af0d 	bne.w	407988 <__aeabi_dmul+0x234>
  407b6e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  407b72:	f47f aeeb 	bne.w	40794c <__aeabi_dmul+0x1f8>
  407b76:	e712      	b.n	40799e <__aeabi_dmul+0x24a>

00407b78 <__gedf2>:
  407b78:	f04f 3cff 	mov.w	ip, #4294967295
  407b7c:	e006      	b.n	407b8c <__cmpdf2+0x4>
  407b7e:	bf00      	nop

00407b80 <__ledf2>:
  407b80:	f04f 0c01 	mov.w	ip, #1
  407b84:	e002      	b.n	407b8c <__cmpdf2+0x4>
  407b86:	bf00      	nop

00407b88 <__cmpdf2>:
  407b88:	f04f 0c01 	mov.w	ip, #1
  407b8c:	f84d cd04 	str.w	ip, [sp, #-4]!
  407b90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407b98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407b9c:	bf18      	it	ne
  407b9e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  407ba2:	d01b      	beq.n	407bdc <__cmpdf2+0x54>
  407ba4:	b001      	add	sp, #4
  407ba6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  407baa:	bf0c      	ite	eq
  407bac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  407bb0:	ea91 0f03 	teqne	r1, r3
  407bb4:	bf02      	ittt	eq
  407bb6:	ea90 0f02 	teqeq	r0, r2
  407bba:	2000      	moveq	r0, #0
  407bbc:	4770      	bxeq	lr
  407bbe:	f110 0f00 	cmn.w	r0, #0
  407bc2:	ea91 0f03 	teq	r1, r3
  407bc6:	bf58      	it	pl
  407bc8:	4299      	cmppl	r1, r3
  407bca:	bf08      	it	eq
  407bcc:	4290      	cmpeq	r0, r2
  407bce:	bf2c      	ite	cs
  407bd0:	17d8      	asrcs	r0, r3, #31
  407bd2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  407bd6:	f040 0001 	orr.w	r0, r0, #1
  407bda:	4770      	bx	lr
  407bdc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407be0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407be4:	d102      	bne.n	407bec <__cmpdf2+0x64>
  407be6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  407bea:	d107      	bne.n	407bfc <__cmpdf2+0x74>
  407bec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407bf0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407bf4:	d1d6      	bne.n	407ba4 <__cmpdf2+0x1c>
  407bf6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  407bfa:	d0d3      	beq.n	407ba4 <__cmpdf2+0x1c>
  407bfc:	f85d 0b04 	ldr.w	r0, [sp], #4
  407c00:	4770      	bx	lr
  407c02:	bf00      	nop

00407c04 <__aeabi_cdrcmple>:
  407c04:	4684      	mov	ip, r0
  407c06:	4610      	mov	r0, r2
  407c08:	4662      	mov	r2, ip
  407c0a:	468c      	mov	ip, r1
  407c0c:	4619      	mov	r1, r3
  407c0e:	4663      	mov	r3, ip
  407c10:	e000      	b.n	407c14 <__aeabi_cdcmpeq>
  407c12:	bf00      	nop

00407c14 <__aeabi_cdcmpeq>:
  407c14:	b501      	push	{r0, lr}
  407c16:	f7ff ffb7 	bl	407b88 <__cmpdf2>
  407c1a:	2800      	cmp	r0, #0
  407c1c:	bf48      	it	mi
  407c1e:	f110 0f00 	cmnmi.w	r0, #0
  407c22:	bd01      	pop	{r0, pc}

00407c24 <__aeabi_dcmpeq>:
  407c24:	f84d ed08 	str.w	lr, [sp, #-8]!
  407c28:	f7ff fff4 	bl	407c14 <__aeabi_cdcmpeq>
  407c2c:	bf0c      	ite	eq
  407c2e:	2001      	moveq	r0, #1
  407c30:	2000      	movne	r0, #0
  407c32:	f85d fb08 	ldr.w	pc, [sp], #8
  407c36:	bf00      	nop

00407c38 <__aeabi_dcmplt>:
  407c38:	f84d ed08 	str.w	lr, [sp, #-8]!
  407c3c:	f7ff ffea 	bl	407c14 <__aeabi_cdcmpeq>
  407c40:	bf34      	ite	cc
  407c42:	2001      	movcc	r0, #1
  407c44:	2000      	movcs	r0, #0
  407c46:	f85d fb08 	ldr.w	pc, [sp], #8
  407c4a:	bf00      	nop

00407c4c <__aeabi_dcmple>:
  407c4c:	f84d ed08 	str.w	lr, [sp, #-8]!
  407c50:	f7ff ffe0 	bl	407c14 <__aeabi_cdcmpeq>
  407c54:	bf94      	ite	ls
  407c56:	2001      	movls	r0, #1
  407c58:	2000      	movhi	r0, #0
  407c5a:	f85d fb08 	ldr.w	pc, [sp], #8
  407c5e:	bf00      	nop

00407c60 <__aeabi_dcmpge>:
  407c60:	f84d ed08 	str.w	lr, [sp, #-8]!
  407c64:	f7ff ffce 	bl	407c04 <__aeabi_cdrcmple>
  407c68:	bf94      	ite	ls
  407c6a:	2001      	movls	r0, #1
  407c6c:	2000      	movhi	r0, #0
  407c6e:	f85d fb08 	ldr.w	pc, [sp], #8
  407c72:	bf00      	nop

00407c74 <__aeabi_dcmpgt>:
  407c74:	f84d ed08 	str.w	lr, [sp, #-8]!
  407c78:	f7ff ffc4 	bl	407c04 <__aeabi_cdrcmple>
  407c7c:	bf34      	ite	cc
  407c7e:	2001      	movcc	r0, #1
  407c80:	2000      	movcs	r0, #0
  407c82:	f85d fb08 	ldr.w	pc, [sp], #8
  407c86:	bf00      	nop

00407c88 <__aeabi_dcmpun>:
  407c88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407c8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407c90:	d102      	bne.n	407c98 <__aeabi_dcmpun+0x10>
  407c92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  407c96:	d10a      	bne.n	407cae <__aeabi_dcmpun+0x26>
  407c98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407c9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407ca0:	d102      	bne.n	407ca8 <__aeabi_dcmpun+0x20>
  407ca2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  407ca6:	d102      	bne.n	407cae <__aeabi_dcmpun+0x26>
  407ca8:	f04f 0000 	mov.w	r0, #0
  407cac:	4770      	bx	lr
  407cae:	f04f 0001 	mov.w	r0, #1
  407cb2:	4770      	bx	lr

00407cb4 <__aeabi_d2iz>:
  407cb4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  407cb8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  407cbc:	d215      	bcs.n	407cea <__aeabi_d2iz+0x36>
  407cbe:	d511      	bpl.n	407ce4 <__aeabi_d2iz+0x30>
  407cc0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  407cc4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  407cc8:	d912      	bls.n	407cf0 <__aeabi_d2iz+0x3c>
  407cca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  407cce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  407cd2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  407cd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407cda:	fa23 f002 	lsr.w	r0, r3, r2
  407cde:	bf18      	it	ne
  407ce0:	4240      	negne	r0, r0
  407ce2:	4770      	bx	lr
  407ce4:	f04f 0000 	mov.w	r0, #0
  407ce8:	4770      	bx	lr
  407cea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  407cee:	d105      	bne.n	407cfc <__aeabi_d2iz+0x48>
  407cf0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  407cf4:	bf08      	it	eq
  407cf6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  407cfa:	4770      	bx	lr
  407cfc:	f04f 0000 	mov.w	r0, #0
  407d00:	4770      	bx	lr
  407d02:	bf00      	nop

00407d04 <__aeabi_uldivmod>:
  407d04:	b953      	cbnz	r3, 407d1c <__aeabi_uldivmod+0x18>
  407d06:	b94a      	cbnz	r2, 407d1c <__aeabi_uldivmod+0x18>
  407d08:	2900      	cmp	r1, #0
  407d0a:	bf08      	it	eq
  407d0c:	2800      	cmpeq	r0, #0
  407d0e:	bf1c      	itt	ne
  407d10:	f04f 31ff 	movne.w	r1, #4294967295
  407d14:	f04f 30ff 	movne.w	r0, #4294967295
  407d18:	f000 b97e 	b.w	408018 <__aeabi_idiv0>
  407d1c:	f1ad 0c08 	sub.w	ip, sp, #8
  407d20:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  407d24:	f000 f806 	bl	407d34 <__udivmoddi4>
  407d28:	f8dd e004 	ldr.w	lr, [sp, #4]
  407d2c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  407d30:	b004      	add	sp, #16
  407d32:	4770      	bx	lr

00407d34 <__udivmoddi4>:
  407d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407d38:	468c      	mov	ip, r1
  407d3a:	460e      	mov	r6, r1
  407d3c:	4604      	mov	r4, r0
  407d3e:	9d08      	ldr	r5, [sp, #32]
  407d40:	2b00      	cmp	r3, #0
  407d42:	d150      	bne.n	407de6 <__udivmoddi4+0xb2>
  407d44:	428a      	cmp	r2, r1
  407d46:	4617      	mov	r7, r2
  407d48:	d96c      	bls.n	407e24 <__udivmoddi4+0xf0>
  407d4a:	fab2 fe82 	clz	lr, r2
  407d4e:	f1be 0f00 	cmp.w	lr, #0
  407d52:	d00b      	beq.n	407d6c <__udivmoddi4+0x38>
  407d54:	f1ce 0420 	rsb	r4, lr, #32
  407d58:	fa20 f404 	lsr.w	r4, r0, r4
  407d5c:	fa01 f60e 	lsl.w	r6, r1, lr
  407d60:	ea44 0c06 	orr.w	ip, r4, r6
  407d64:	fa02 f70e 	lsl.w	r7, r2, lr
  407d68:	fa00 f40e 	lsl.w	r4, r0, lr
  407d6c:	ea4f 4917 	mov.w	r9, r7, lsr #16
  407d70:	0c22      	lsrs	r2, r4, #16
  407d72:	fbbc f0f9 	udiv	r0, ip, r9
  407d76:	fa1f f887 	uxth.w	r8, r7
  407d7a:	fb09 c610 	mls	r6, r9, r0, ip
  407d7e:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  407d82:	fb00 f308 	mul.w	r3, r0, r8
  407d86:	42b3      	cmp	r3, r6
  407d88:	d909      	bls.n	407d9e <__udivmoddi4+0x6a>
  407d8a:	19f6      	adds	r6, r6, r7
  407d8c:	f100 32ff 	add.w	r2, r0, #4294967295
  407d90:	f080 8122 	bcs.w	407fd8 <__udivmoddi4+0x2a4>
  407d94:	42b3      	cmp	r3, r6
  407d96:	f240 811f 	bls.w	407fd8 <__udivmoddi4+0x2a4>
  407d9a:	3802      	subs	r0, #2
  407d9c:	443e      	add	r6, r7
  407d9e:	1af6      	subs	r6, r6, r3
  407da0:	b2a2      	uxth	r2, r4
  407da2:	fbb6 f3f9 	udiv	r3, r6, r9
  407da6:	fb09 6613 	mls	r6, r9, r3, r6
  407daa:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  407dae:	fb03 f808 	mul.w	r8, r3, r8
  407db2:	45a0      	cmp	r8, r4
  407db4:	d909      	bls.n	407dca <__udivmoddi4+0x96>
  407db6:	19e4      	adds	r4, r4, r7
  407db8:	f103 32ff 	add.w	r2, r3, #4294967295
  407dbc:	f080 810a 	bcs.w	407fd4 <__udivmoddi4+0x2a0>
  407dc0:	45a0      	cmp	r8, r4
  407dc2:	f240 8107 	bls.w	407fd4 <__udivmoddi4+0x2a0>
  407dc6:	3b02      	subs	r3, #2
  407dc8:	443c      	add	r4, r7
  407dca:	ebc8 0404 	rsb	r4, r8, r4
  407dce:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  407dd2:	2100      	movs	r1, #0
  407dd4:	2d00      	cmp	r5, #0
  407dd6:	d062      	beq.n	407e9e <__udivmoddi4+0x16a>
  407dd8:	fa24 f40e 	lsr.w	r4, r4, lr
  407ddc:	2300      	movs	r3, #0
  407dde:	602c      	str	r4, [r5, #0]
  407de0:	606b      	str	r3, [r5, #4]
  407de2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407de6:	428b      	cmp	r3, r1
  407de8:	d907      	bls.n	407dfa <__udivmoddi4+0xc6>
  407dea:	2d00      	cmp	r5, #0
  407dec:	d055      	beq.n	407e9a <__udivmoddi4+0x166>
  407dee:	2100      	movs	r1, #0
  407df0:	e885 0041 	stmia.w	r5, {r0, r6}
  407df4:	4608      	mov	r0, r1
  407df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407dfa:	fab3 f183 	clz	r1, r3
  407dfe:	2900      	cmp	r1, #0
  407e00:	f040 8090 	bne.w	407f24 <__udivmoddi4+0x1f0>
  407e04:	42b3      	cmp	r3, r6
  407e06:	d302      	bcc.n	407e0e <__udivmoddi4+0xda>
  407e08:	4282      	cmp	r2, r0
  407e0a:	f200 80f8 	bhi.w	407ffe <__udivmoddi4+0x2ca>
  407e0e:	1a84      	subs	r4, r0, r2
  407e10:	eb66 0603 	sbc.w	r6, r6, r3
  407e14:	2001      	movs	r0, #1
  407e16:	46b4      	mov	ip, r6
  407e18:	2d00      	cmp	r5, #0
  407e1a:	d040      	beq.n	407e9e <__udivmoddi4+0x16a>
  407e1c:	e885 1010 	stmia.w	r5, {r4, ip}
  407e20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407e24:	b912      	cbnz	r2, 407e2c <__udivmoddi4+0xf8>
  407e26:	2701      	movs	r7, #1
  407e28:	fbb7 f7f2 	udiv	r7, r7, r2
  407e2c:	fab7 fe87 	clz	lr, r7
  407e30:	f1be 0f00 	cmp.w	lr, #0
  407e34:	d135      	bne.n	407ea2 <__udivmoddi4+0x16e>
  407e36:	1bf3      	subs	r3, r6, r7
  407e38:	ea4f 4817 	mov.w	r8, r7, lsr #16
  407e3c:	fa1f fc87 	uxth.w	ip, r7
  407e40:	2101      	movs	r1, #1
  407e42:	fbb3 f0f8 	udiv	r0, r3, r8
  407e46:	0c22      	lsrs	r2, r4, #16
  407e48:	fb08 3610 	mls	r6, r8, r0, r3
  407e4c:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  407e50:	fb0c f300 	mul.w	r3, ip, r0
  407e54:	42b3      	cmp	r3, r6
  407e56:	d907      	bls.n	407e68 <__udivmoddi4+0x134>
  407e58:	19f6      	adds	r6, r6, r7
  407e5a:	f100 32ff 	add.w	r2, r0, #4294967295
  407e5e:	d202      	bcs.n	407e66 <__udivmoddi4+0x132>
  407e60:	42b3      	cmp	r3, r6
  407e62:	f200 80ce 	bhi.w	408002 <__udivmoddi4+0x2ce>
  407e66:	4610      	mov	r0, r2
  407e68:	1af6      	subs	r6, r6, r3
  407e6a:	b2a2      	uxth	r2, r4
  407e6c:	fbb6 f3f8 	udiv	r3, r6, r8
  407e70:	fb08 6613 	mls	r6, r8, r3, r6
  407e74:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  407e78:	fb0c fc03 	mul.w	ip, ip, r3
  407e7c:	45a4      	cmp	ip, r4
  407e7e:	d907      	bls.n	407e90 <__udivmoddi4+0x15c>
  407e80:	19e4      	adds	r4, r4, r7
  407e82:	f103 32ff 	add.w	r2, r3, #4294967295
  407e86:	d202      	bcs.n	407e8e <__udivmoddi4+0x15a>
  407e88:	45a4      	cmp	ip, r4
  407e8a:	f200 80b5 	bhi.w	407ff8 <__udivmoddi4+0x2c4>
  407e8e:	4613      	mov	r3, r2
  407e90:	ebcc 0404 	rsb	r4, ip, r4
  407e94:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  407e98:	e79c      	b.n	407dd4 <__udivmoddi4+0xa0>
  407e9a:	4629      	mov	r1, r5
  407e9c:	4628      	mov	r0, r5
  407e9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407ea2:	f1ce 0120 	rsb	r1, lr, #32
  407ea6:	fa06 f30e 	lsl.w	r3, r6, lr
  407eaa:	fa07 f70e 	lsl.w	r7, r7, lr
  407eae:	fa20 f901 	lsr.w	r9, r0, r1
  407eb2:	ea4f 4817 	mov.w	r8, r7, lsr #16
  407eb6:	40ce      	lsrs	r6, r1
  407eb8:	ea49 0903 	orr.w	r9, r9, r3
  407ebc:	fbb6 faf8 	udiv	sl, r6, r8
  407ec0:	ea4f 4419 	mov.w	r4, r9, lsr #16
  407ec4:	fb08 661a 	mls	r6, r8, sl, r6
  407ec8:	fa1f fc87 	uxth.w	ip, r7
  407ecc:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
  407ed0:	fb0a f20c 	mul.w	r2, sl, ip
  407ed4:	429a      	cmp	r2, r3
  407ed6:	fa00 f40e 	lsl.w	r4, r0, lr
  407eda:	d90a      	bls.n	407ef2 <__udivmoddi4+0x1be>
  407edc:	19db      	adds	r3, r3, r7
  407ede:	f10a 31ff 	add.w	r1, sl, #4294967295
  407ee2:	f080 8087 	bcs.w	407ff4 <__udivmoddi4+0x2c0>
  407ee6:	429a      	cmp	r2, r3
  407ee8:	f240 8084 	bls.w	407ff4 <__udivmoddi4+0x2c0>
  407eec:	f1aa 0a02 	sub.w	sl, sl, #2
  407ef0:	443b      	add	r3, r7
  407ef2:	1a9b      	subs	r3, r3, r2
  407ef4:	fa1f f989 	uxth.w	r9, r9
  407ef8:	fbb3 f1f8 	udiv	r1, r3, r8
  407efc:	fb08 3311 	mls	r3, r8, r1, r3
  407f00:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
  407f04:	fb01 f60c 	mul.w	r6, r1, ip
  407f08:	429e      	cmp	r6, r3
  407f0a:	d907      	bls.n	407f1c <__udivmoddi4+0x1e8>
  407f0c:	19db      	adds	r3, r3, r7
  407f0e:	f101 32ff 	add.w	r2, r1, #4294967295
  407f12:	d26b      	bcs.n	407fec <__udivmoddi4+0x2b8>
  407f14:	429e      	cmp	r6, r3
  407f16:	d969      	bls.n	407fec <__udivmoddi4+0x2b8>
  407f18:	3902      	subs	r1, #2
  407f1a:	443b      	add	r3, r7
  407f1c:	1b9b      	subs	r3, r3, r6
  407f1e:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  407f22:	e78e      	b.n	407e42 <__udivmoddi4+0x10e>
  407f24:	f1c1 0e20 	rsb	lr, r1, #32
  407f28:	fa22 f40e 	lsr.w	r4, r2, lr
  407f2c:	408b      	lsls	r3, r1
  407f2e:	4323      	orrs	r3, r4
  407f30:	fa20 f70e 	lsr.w	r7, r0, lr
  407f34:	fa06 f401 	lsl.w	r4, r6, r1
  407f38:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  407f3c:	fa26 f60e 	lsr.w	r6, r6, lr
  407f40:	433c      	orrs	r4, r7
  407f42:	fbb6 f9fc 	udiv	r9, r6, ip
  407f46:	0c27      	lsrs	r7, r4, #16
  407f48:	fb0c 6619 	mls	r6, ip, r9, r6
  407f4c:	fa1f f883 	uxth.w	r8, r3
  407f50:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  407f54:	fb09 f708 	mul.w	r7, r9, r8
  407f58:	42b7      	cmp	r7, r6
  407f5a:	fa02 f201 	lsl.w	r2, r2, r1
  407f5e:	fa00 fa01 	lsl.w	sl, r0, r1
  407f62:	d908      	bls.n	407f76 <__udivmoddi4+0x242>
  407f64:	18f6      	adds	r6, r6, r3
  407f66:	f109 30ff 	add.w	r0, r9, #4294967295
  407f6a:	d241      	bcs.n	407ff0 <__udivmoddi4+0x2bc>
  407f6c:	42b7      	cmp	r7, r6
  407f6e:	d93f      	bls.n	407ff0 <__udivmoddi4+0x2bc>
  407f70:	f1a9 0902 	sub.w	r9, r9, #2
  407f74:	441e      	add	r6, r3
  407f76:	1bf6      	subs	r6, r6, r7
  407f78:	b2a0      	uxth	r0, r4
  407f7a:	fbb6 f4fc 	udiv	r4, r6, ip
  407f7e:	fb0c 6614 	mls	r6, ip, r4, r6
  407f82:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
  407f86:	fb04 f808 	mul.w	r8, r4, r8
  407f8a:	45b8      	cmp	r8, r7
  407f8c:	d907      	bls.n	407f9e <__udivmoddi4+0x26a>
  407f8e:	18ff      	adds	r7, r7, r3
  407f90:	f104 30ff 	add.w	r0, r4, #4294967295
  407f94:	d228      	bcs.n	407fe8 <__udivmoddi4+0x2b4>
  407f96:	45b8      	cmp	r8, r7
  407f98:	d926      	bls.n	407fe8 <__udivmoddi4+0x2b4>
  407f9a:	3c02      	subs	r4, #2
  407f9c:	441f      	add	r7, r3
  407f9e:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
  407fa2:	ebc8 0707 	rsb	r7, r8, r7
  407fa6:	fba0 8902 	umull	r8, r9, r0, r2
  407faa:	454f      	cmp	r7, r9
  407fac:	4644      	mov	r4, r8
  407fae:	464e      	mov	r6, r9
  407fb0:	d314      	bcc.n	407fdc <__udivmoddi4+0x2a8>
  407fb2:	d029      	beq.n	408008 <__udivmoddi4+0x2d4>
  407fb4:	b365      	cbz	r5, 408010 <__udivmoddi4+0x2dc>
  407fb6:	ebba 0304 	subs.w	r3, sl, r4
  407fba:	eb67 0706 	sbc.w	r7, r7, r6
  407fbe:	fa07 fe0e 	lsl.w	lr, r7, lr
  407fc2:	40cb      	lsrs	r3, r1
  407fc4:	40cf      	lsrs	r7, r1
  407fc6:	ea4e 0303 	orr.w	r3, lr, r3
  407fca:	e885 0088 	stmia.w	r5, {r3, r7}
  407fce:	2100      	movs	r1, #0
  407fd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407fd4:	4613      	mov	r3, r2
  407fd6:	e6f8      	b.n	407dca <__udivmoddi4+0x96>
  407fd8:	4610      	mov	r0, r2
  407fda:	e6e0      	b.n	407d9e <__udivmoddi4+0x6a>
  407fdc:	ebb8 0402 	subs.w	r4, r8, r2
  407fe0:	eb69 0603 	sbc.w	r6, r9, r3
  407fe4:	3801      	subs	r0, #1
  407fe6:	e7e5      	b.n	407fb4 <__udivmoddi4+0x280>
  407fe8:	4604      	mov	r4, r0
  407fea:	e7d8      	b.n	407f9e <__udivmoddi4+0x26a>
  407fec:	4611      	mov	r1, r2
  407fee:	e795      	b.n	407f1c <__udivmoddi4+0x1e8>
  407ff0:	4681      	mov	r9, r0
  407ff2:	e7c0      	b.n	407f76 <__udivmoddi4+0x242>
  407ff4:	468a      	mov	sl, r1
  407ff6:	e77c      	b.n	407ef2 <__udivmoddi4+0x1be>
  407ff8:	3b02      	subs	r3, #2
  407ffa:	443c      	add	r4, r7
  407ffc:	e748      	b.n	407e90 <__udivmoddi4+0x15c>
  407ffe:	4608      	mov	r0, r1
  408000:	e70a      	b.n	407e18 <__udivmoddi4+0xe4>
  408002:	3802      	subs	r0, #2
  408004:	443e      	add	r6, r7
  408006:	e72f      	b.n	407e68 <__udivmoddi4+0x134>
  408008:	45c2      	cmp	sl, r8
  40800a:	d3e7      	bcc.n	407fdc <__udivmoddi4+0x2a8>
  40800c:	463e      	mov	r6, r7
  40800e:	e7d1      	b.n	407fb4 <__udivmoddi4+0x280>
  408010:	4629      	mov	r1, r5
  408012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408016:	bf00      	nop

00408018 <__aeabi_idiv0>:
  408018:	4770      	bx	lr
  40801a:	bf00      	nop

0040801c <ucExpectedStackBytes.8075>:
  40801c:	a5a5 a5a5 a5a5 a5a5 a5a5 a5a5 a5a5 a5a5     ................
  40802c:	a5a5 a5a5 7325 0909 6325 2509 0975 7525     ....%s..%c.%u.%u
  40803c:	2509 0d75 000a 0000 4449 454c 0000 0000     .%u.....IDLE....
  40804c:	2d2d 5420 5341 204b 454c 2044 4b4f 2d20     -- TASK LED OK -
  40805c:	0a2d 000d 2d2d 202d 6174 6b73 2320 2023     -...--- task ## 
  40806c:	7525 0000 7473 6361 206b 766f 7265 6c66     %u..stack overfl
  40807c:	776f 2520 2078 7325 0a0d 0000 2d2d 4620     ow %x %s....-- F
  40808c:	6572 5265 4f54 2053 7845 6d61 6c70 2065     reeRTOS Example 
  40809c:	2d2d 0d0a 0000 0000 4153 344d 2d53 4b45     --......SAM4S-EK
  4080ac:	0032 0000 2d2d 2520 0a73 000d 3032 353a     2...-- %s...20:5
  4080bc:	3a37 3934 0000 0000 6f4e 2076 3320 3220     7:49....Nov  3 2
  4080cc:	3130 0036 2d2d 4320 6d6f 6970 656c 3a64     016.-- Compiled:
  4080dc:	2520 2073 7325 2d20 0a2d 000d 6f4d 696e      %s %s --...Moni
  4080ec:	6f74 0072 654c 0064 6146 6c69 6465 7420     tor.Led.Failed t
  4080fc:	206f 7263 6165 6574 7420 7365 2074 656c     o create test le
  40810c:	2064 6174 6b73 0a0d 0000 0000 0043 0000     d task......C...

0040811c <_global_impure_ptr>:
  40811c:	0010 2000                                   ... 

00408120 <zeroes.7035>:
  408120:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  408130:	4e49 0046 6e69 0066 414e 004e 616e 006e     INF.inf.NAN.nan.
  408140:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
  408150:	0000 0000 3130 3332 3534 3736 3938 6261     ....0123456789ab
  408160:	6463 6665 0000 0000 6e28 6c75 296c 0000     cdef....(null)..
  408170:	0030 0000                                   0...

00408174 <blanks.7034>:
  408174:	2020 2020 2020 2020 2020 2020 2020 2020                     

00408184 <zeroes.6993>:
  408184:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

00408194 <blanks.6992>:
  408194:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4081a4:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  4081b4:	4f50 4953 0058 0000 002e 0000               POSIX.......

004081c0 <__mprec_tens>:
  4081c0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4081d0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4081e0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4081f0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  408200:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  408210:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  408220:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  408230:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  408240:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  408250:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  408260:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  408270:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  408280:	9db4 79d9 7843 44ea                         ...yCx.D

00408288 <__mprec_bigtens>:
  408288:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  408298:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4082a8:	bf3c 7f73 4fdd 7515                         <.s..O.u

004082b0 <p05.5373>:
  4082b0:	0005 0000 0019 0000 007d 0000               ........}...

004082bc <_init>:
  4082bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4082be:	bf00      	nop
  4082c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4082c2:	bc08      	pop	{r3}
  4082c4:	469e      	mov	lr, r3
  4082c6:	4770      	bx	lr

004082c8 <__init_array_start>:
  4082c8:	00404989 	.word	0x00404989

004082cc <__frame_dummy_init_array_entry>:
  4082cc:	004000f1                                ..@.

004082d0 <_fini>:
  4082d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4082d2:	bf00      	nop
  4082d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4082d6:	bc08      	pop	{r3}
  4082d8:	469e      	mov	lr, r3
  4082da:	4770      	bx	lr

004082dc <__fini_array_start>:
  4082dc:	004000cd 	.word	0x004000cd
